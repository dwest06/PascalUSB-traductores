Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    TkComment
    TkPoint

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> TkProgram INSTRUCCION
Rule 2     BLOQUE -> TkBegin VACIO TkEnd
Rule 3     BLOQUE -> TkBegin INSTRUCCION TkEnd VACIO
Rule 4     BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd
Rule 5     BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO
Rule 6     INSTRUCCION -> POST
Rule 7     INSTRUCCION -> ASIGNACION
Rule 8     INSTRUCCION -> ENTRADA
Rule 9     INSTRUCCION -> SALIDA
Rule 10    INSTRUCCION -> CONVERTIR
Rule 11    INSTRUCCION -> CONDICIONAL_IF
Rule 12    INSTRUCCION -> CONDICIONAL_CASE
Rule 13    INSTRUCCION -> ITERACION_FOR
Rule 14    INSTRUCCION -> ITERACION_WHILE
Rule 15    INSTRUCCION -> BLOQUE
Rule 16    INSTRUCCION -> INSTRUCCION TkSemicolon INSTRUCCION
Rule 17    IDENTIFICADOR -> TkId
Rule 18    ASIGNACION -> EXPRESION TkAsig EXPRESION
Rule 19    ENTRADA -> TkRead IDENTIFICADOR
Rule 20    SALIDA -> TkPrint LISTA_VAR
Rule 21    SALIDA -> TkPrintln LISTA_VAR
Rule 22    SALIDA -> TkPrint CADENA
Rule 23    SALIDA -> TkPrintln CADENA
Rule 24    CADENA -> TkString
Rule 25    CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION
Rule 26    CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION
Rule 27    CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd
Rule 28    LISTA_CASE -> EXPRESION TkArrow INSTRUCCION
Rule 29    LISTA_CASE -> EXPRESION TkArrow INSTRUCCION LISTA_CASE
Rule 30    ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION
Rule 31    ITERACION_WHILE -> TkWhile EXP_BOOL TkDo INSTRUCCION
Rule 32    DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO
Rule 33    LISTA_VAR -> IDENTIFICADOR
Rule 34    LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR
Rule 35    LISTA_TIPO -> DATO
Rule 36    LISTA_TIPO -> DATO TkComma LISTA_TIPO
Rule 37    DATO -> TkInt
Rule 38    DATO -> TkBool
Rule 39    DATO -> TkInter
Rule 40    EXPRESION -> TkNum
Rule 41    EXPRESION -> IDENTIFICADOR
Rule 42    EXPRESION -> EXP_ENTEROS
Rule 43    EXPRESION -> EXP_INTERVALOS
Rule 44    EXPRESION -> EXP_BOOL
Rule 45    EXPRESION -> TkOpenPar EXPRESION TkClosePar
Rule 46    EXP_ENTEROS -> EXPRESION TkMod EXPRESION
Rule 47    EXP_ENTEROS -> EXPRESION TkMult EXPRESION
Rule 48    EXP_ENTEROS -> EXPRESION TkDiv EXPRESION
Rule 49    EXP_ENTEROS -> EXPRESION TkPlus EXPRESION
Rule 50    EXP_ENTEROS -> EXPRESION TkMinus EXPRESION
Rule 51    EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION
Rule 52    EXP_INTERVALOS -> EXPRESION TkCap EXPRESION
Rule 53    EXP_BOOL -> TkTrue
Rule 54    EXP_BOOL -> TkFalse
Rule 55    EXP_BOOL -> TkNot EXP_BOOL
Rule 56    EXP_BOOL -> EXPRESION TkAnd EXPRESION
Rule 57    EXP_BOOL -> EXPRESION TkOr EXPRESION
Rule 58    EXP_BOOL -> EXPRESION TkIn EXPRESION
Rule 59    EXP_BOOL -> EXPRESION TkEqual EXPRESION
Rule 60    EXP_BOOL -> EXPRESION TkNEqual EXPRESION
Rule 61    EXP_BOOL -> EXPRESION TkGreater EXPRESION
Rule 62    EXP_BOOL -> EXPRESION TkGeq EXPRESION
Rule 63    EXP_BOOL -> EXPRESION TkLess EXPRESION
Rule 64    EXP_BOOL -> EXPRESION TkLeq EXPRESION
Rule 65    CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar
Rule 66    CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar
Rule 67    CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar
Rule 68    CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar
Rule 69    POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
Rule 70    EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
Rule 71    EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
Rule 72    EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
Rule 73    EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
Rule 74    VACIO -> <empty>

Terminals, with rules where they appear

TkAnd                : 56
TkArrow              : 28 29
TkAs                 : 32
TkAsig               : 18
TkBegin              : 2 3 4 5
TkBool               : 38
TkCap                : 52
TkCase               : 27
TkCloseBra           : 69
TkClosePar           : 45 65 66 67 68 70 71 72 73
TkComma              : 34 36
TkComment            : 
TkDeclare            : 4 5
TkDiv                : 48
TkDo                 : 30 31
TkElse               : 25
TkEnd                : 2 3 4 5 27
TkEqual              : 59
TkExists             : 72 73
TkFalse              : 54
TkFor                : 30
TkForall             : 70 71
TkGeq                : 62
TkGreater            : 61
TkId                 : 17
TkIf                 : 25 26
TkIn                 : 30 58 70 71 72 73
TkInt                : 37
TkInter              : 39
TkItoi               : 65
TkLen                : 66
TkLeq                : 64
TkLess               : 63
TkMax                : 67
TkMin                : 68
TkMinus              : 50
TkMod                : 46
TkMult               : 47
TkNEqual             : 60
TkNot                : 55
TkNum                : 40
TkOf                 : 27
TkOpenBra            : 69
TkOpenPar            : 45 65 66 67 68 70 71 72 73
TkOr                 : 57
TkPipe               : 70 71 72 73
TkPlus               : 49
TkPoint              : 
TkPost               : 69
TkPrint              : 20 22
TkPrintln            : 21 23
TkProgram            : 1
TkRead               : 19
TkSemicolon          : 16
TkSoForth            : 51
TkString             : 24
TkThen               : 25 26
TkTrue               : 53
TkTwoPoints          : 69 70 71 72 73
TkWhile              : 31
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 7
BLOQUE               : 15
CADENA               : 22 23
CONDICIONAL_CASE     : 12
CONDICIONAL_IF       : 11
CONVERTIR            : 10
DATO                 : 35 36
DECL_VAR             : 4 5
ENTRADA              : 8
EXPRESION            : 18 18 27 28 29 30 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64
EXP_BOOL             : 25 26 31 44 55 71 73
EXP_CUANTIFICADOR    : 69 70 72
EXP_ENTEROS          : 42
EXP_INTERVALOS       : 43
IDENTIFICADOR        : 19 30 33 34 41 65 66 67 68 70 70 70 71 71 71 72 72 72 73 73 73
INSTRUCCION          : 1 3 4 5 16 16 25 25 26 28 29 30 31
ITERACION_FOR        : 13
ITERACION_WHILE      : 14
LISTA_CASE           : 27 29
LISTA_TIPO           : 32 36
LISTA_VAR            : 20 21 32 34
POST                 : 6
PROGRAMA             : 0
SALIDA               : 9
VACIO                : 2 3 5

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . TkProgram INSTRUCCION

    TkProgram       shift and go to state 2

    PROGRAMA                       shift and go to state 1

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> TkProgram . INSTRUCCION
    (6) INSTRUCCION -> . POST
    (7) INSTRUCCION -> . ASIGNACION
    (8) INSTRUCCION -> . ENTRADA
    (9) INSTRUCCION -> . SALIDA
    (10) INSTRUCCION -> . CONVERTIR
    (11) INSTRUCCION -> . CONDICIONAL_IF
    (12) INSTRUCCION -> . CONDICIONAL_CASE
    (13) INSTRUCCION -> . ITERACION_FOR
    (14) INSTRUCCION -> . ITERACION_WHILE
    (15) INSTRUCCION -> . BLOQUE
    (16) INSTRUCCION -> . INSTRUCCION TkSemicolon INSTRUCCION
    (69) POST -> . TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
    (18) ASIGNACION -> . EXPRESION TkAsig EXPRESION
    (19) ENTRADA -> . TkRead IDENTIFICADOR
    (20) SALIDA -> . TkPrint LISTA_VAR
    (21) SALIDA -> . TkPrintln LISTA_VAR
    (22) SALIDA -> . TkPrint CADENA
    (23) SALIDA -> . TkPrintln CADENA
    (65) CONVERTIR -> . TkItoi TkOpenPar IDENTIFICADOR TkClosePar
    (66) CONVERTIR -> . TkLen TkOpenPar IDENTIFICADOR TkClosePar
    (67) CONVERTIR -> . TkMax TkOpenPar IDENTIFICADOR TkClosePar
    (68) CONVERTIR -> . TkMin TkOpenPar IDENTIFICADOR TkClosePar
    (25) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION
    (26) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen INSTRUCCION
    (27) CONDICIONAL_CASE -> . TkCase EXPRESION TkOf LISTA_CASE TkEnd
    (30) ITERACION_FOR -> . TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION
    (31) ITERACION_WHILE -> . TkWhile EXP_BOOL TkDo INSTRUCCION
    (2) BLOQUE -> . TkBegin VACIO TkEnd
    (3) BLOQUE -> . TkBegin INSTRUCCION TkEnd VACIO
    (4) BLOQUE -> . TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd
    (5) BLOQUE -> . TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkOpenBra       shift and go to state 14
    TkRead          shift and go to state 16
    TkPrint         shift and go to state 18
    TkPrintln       shift and go to state 19
    TkItoi          shift and go to state 20
    TkLen           shift and go to state 22
    TkMax           shift and go to state 23
    TkMin           shift and go to state 24
    TkIf            shift and go to state 25
    TkCase          shift and go to state 27
    TkFor           shift and go to state 28
    TkWhile         shift and go to state 29
    TkBegin         shift and go to state 30
    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    INSTRUCCION                    shift and go to state 3
    POST                           shift and go to state 4
    ASIGNACION                     shift and go to state 5
    ENTRADA                        shift and go to state 6
    SALIDA                         shift and go to state 7
    CONVERTIR                      shift and go to state 8
    CONDICIONAL_IF                 shift and go to state 9
    CONDICIONAL_CASE               shift and go to state 10
    ITERACION_FOR                  shift and go to state 11
    ITERACION_WHILE                shift and go to state 12
    BLOQUE                         shift and go to state 13
    EXPRESION                      shift and go to state 15
    IDENTIFICADOR                  shift and go to state 17
    EXP_BOOL                       shift and go to state 26
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33

state 3

    (1) PROGRAMA -> TkProgram INSTRUCCION .
    (16) INSTRUCCION -> INSTRUCCION . TkSemicolon INSTRUCCION

    $end            reduce using rule 1 (PROGRAMA -> TkProgram INSTRUCCION .)
    TkSemicolon     shift and go to state 38


state 4

    (6) INSTRUCCION -> POST .

    TkSemicolon     reduce using rule 6 (INSTRUCCION -> POST .)
    $end            reduce using rule 6 (INSTRUCCION -> POST .)
    TkEnd           reduce using rule 6 (INSTRUCCION -> POST .)
    TkElse          reduce using rule 6 (INSTRUCCION -> POST .)
    TkNum           reduce using rule 6 (INSTRUCCION -> POST .)
    TkOpenPar       reduce using rule 6 (INSTRUCCION -> POST .)
    TkId            reduce using rule 6 (INSTRUCCION -> POST .)
    TkTrue          reduce using rule 6 (INSTRUCCION -> POST .)
    TkFalse         reduce using rule 6 (INSTRUCCION -> POST .)
    TkNot           reduce using rule 6 (INSTRUCCION -> POST .)


state 5

    (7) INSTRUCCION -> ASIGNACION .

    TkSemicolon     reduce using rule 7 (INSTRUCCION -> ASIGNACION .)
    $end            reduce using rule 7 (INSTRUCCION -> ASIGNACION .)
    TkEnd           reduce using rule 7 (INSTRUCCION -> ASIGNACION .)
    TkElse          reduce using rule 7 (INSTRUCCION -> ASIGNACION .)
    TkNum           reduce using rule 7 (INSTRUCCION -> ASIGNACION .)
    TkOpenPar       reduce using rule 7 (INSTRUCCION -> ASIGNACION .)
    TkId            reduce using rule 7 (INSTRUCCION -> ASIGNACION .)
    TkTrue          reduce using rule 7 (INSTRUCCION -> ASIGNACION .)
    TkFalse         reduce using rule 7 (INSTRUCCION -> ASIGNACION .)
    TkNot           reduce using rule 7 (INSTRUCCION -> ASIGNACION .)


state 6

    (8) INSTRUCCION -> ENTRADA .

    TkSemicolon     reduce using rule 8 (INSTRUCCION -> ENTRADA .)
    $end            reduce using rule 8 (INSTRUCCION -> ENTRADA .)
    TkEnd           reduce using rule 8 (INSTRUCCION -> ENTRADA .)
    TkElse          reduce using rule 8 (INSTRUCCION -> ENTRADA .)
    TkNum           reduce using rule 8 (INSTRUCCION -> ENTRADA .)
    TkOpenPar       reduce using rule 8 (INSTRUCCION -> ENTRADA .)
    TkId            reduce using rule 8 (INSTRUCCION -> ENTRADA .)
    TkTrue          reduce using rule 8 (INSTRUCCION -> ENTRADA .)
    TkFalse         reduce using rule 8 (INSTRUCCION -> ENTRADA .)
    TkNot           reduce using rule 8 (INSTRUCCION -> ENTRADA .)


state 7

    (9) INSTRUCCION -> SALIDA .

    TkSemicolon     reduce using rule 9 (INSTRUCCION -> SALIDA .)
    $end            reduce using rule 9 (INSTRUCCION -> SALIDA .)
    TkEnd           reduce using rule 9 (INSTRUCCION -> SALIDA .)
    TkElse          reduce using rule 9 (INSTRUCCION -> SALIDA .)
    TkNum           reduce using rule 9 (INSTRUCCION -> SALIDA .)
    TkOpenPar       reduce using rule 9 (INSTRUCCION -> SALIDA .)
    TkId            reduce using rule 9 (INSTRUCCION -> SALIDA .)
    TkTrue          reduce using rule 9 (INSTRUCCION -> SALIDA .)
    TkFalse         reduce using rule 9 (INSTRUCCION -> SALIDA .)
    TkNot           reduce using rule 9 (INSTRUCCION -> SALIDA .)


state 8

    (10) INSTRUCCION -> CONVERTIR .

    TkSemicolon     reduce using rule 10 (INSTRUCCION -> CONVERTIR .)
    $end            reduce using rule 10 (INSTRUCCION -> CONVERTIR .)
    TkEnd           reduce using rule 10 (INSTRUCCION -> CONVERTIR .)
    TkElse          reduce using rule 10 (INSTRUCCION -> CONVERTIR .)
    TkNum           reduce using rule 10 (INSTRUCCION -> CONVERTIR .)
    TkOpenPar       reduce using rule 10 (INSTRUCCION -> CONVERTIR .)
    TkId            reduce using rule 10 (INSTRUCCION -> CONVERTIR .)
    TkTrue          reduce using rule 10 (INSTRUCCION -> CONVERTIR .)
    TkFalse         reduce using rule 10 (INSTRUCCION -> CONVERTIR .)
    TkNot           reduce using rule 10 (INSTRUCCION -> CONVERTIR .)


state 9

    (11) INSTRUCCION -> CONDICIONAL_IF .

    TkSemicolon     reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)
    $end            reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)
    TkEnd           reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)
    TkElse          reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)
    TkNum           reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)
    TkOpenPar       reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)
    TkId            reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)
    TkTrue          reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)
    TkFalse         reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)
    TkNot           reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)


state 10

    (12) INSTRUCCION -> CONDICIONAL_CASE .

    TkSemicolon     reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)
    $end            reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)
    TkEnd           reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)
    TkElse          reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)
    TkNum           reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)
    TkOpenPar       reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)
    TkId            reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)
    TkTrue          reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)
    TkFalse         reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)
    TkNot           reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)


state 11

    (13) INSTRUCCION -> ITERACION_FOR .

    TkSemicolon     reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)
    $end            reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)
    TkEnd           reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)
    TkElse          reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)
    TkNum           reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)
    TkOpenPar       reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)
    TkId            reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)
    TkTrue          reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)
    TkFalse         reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)
    TkNot           reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)


state 12

    (14) INSTRUCCION -> ITERACION_WHILE .

    TkSemicolon     reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)
    $end            reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)
    TkEnd           reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)
    TkElse          reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)
    TkNum           reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)
    TkOpenPar       reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)
    TkId            reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)
    TkTrue          reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)
    TkFalse         reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)
    TkNot           reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)


state 13

    (15) INSTRUCCION -> BLOQUE .

    TkSemicolon     reduce using rule 15 (INSTRUCCION -> BLOQUE .)
    $end            reduce using rule 15 (INSTRUCCION -> BLOQUE .)
    TkEnd           reduce using rule 15 (INSTRUCCION -> BLOQUE .)
    TkElse          reduce using rule 15 (INSTRUCCION -> BLOQUE .)
    TkNum           reduce using rule 15 (INSTRUCCION -> BLOQUE .)
    TkOpenPar       reduce using rule 15 (INSTRUCCION -> BLOQUE .)
    TkId            reduce using rule 15 (INSTRUCCION -> BLOQUE .)
    TkTrue          reduce using rule 15 (INSTRUCCION -> BLOQUE .)
    TkFalse         reduce using rule 15 (INSTRUCCION -> BLOQUE .)
    TkNot           reduce using rule 15 (INSTRUCCION -> BLOQUE .)


state 14

    (69) POST -> TkOpenBra . TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra

    TkPost          shift and go to state 39


state 15

    (18) ASIGNACION -> EXPRESION . TkAsig EXPRESION
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          shift and go to state 40
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43
    TkPlus          shift and go to state 44
    TkMinus         shift and go to state 45
    TkSoForth       shift and go to state 46
    TkCap           shift and go to state 47
    TkAnd           shift and go to state 48
    TkOr            shift and go to state 49
    TkIn            shift and go to state 50
    TkEqual         shift and go to state 51
    TkNEqual        shift and go to state 52
    TkGreater       shift and go to state 53
    TkGeq           shift and go to state 54
    TkLess          shift and go to state 55
    TkLeq           shift and go to state 56


state 16

    (19) ENTRADA -> TkRead . IDENTIFICADOR
    (17) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 34

    IDENTIFICADOR                  shift and go to state 57

state 17

    (41) EXPRESION -> IDENTIFICADOR .

    TkAsig          reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkMod           reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkMult          reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkDiv           reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkPlus          reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkMinus         reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkSoForth       reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkCap           reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkAnd           reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkOr            reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkIn            reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkEqual         reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkNEqual        reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkGreater       reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkGeq           reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkLess          reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkLeq           reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkClosePar      reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkOf            reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkSemicolon     reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    $end            reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkEnd           reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkElse          reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkNum           reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkOpenPar       reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkId            reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkTrue          reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkFalse         reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkNot           reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkThen          reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkDo            reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)
    TkArrow         reduce using rule 41 (EXPRESION -> IDENTIFICADOR .)


state 18

    (20) SALIDA -> TkPrint . LISTA_VAR
    (22) SALIDA -> TkPrint . CADENA
    (33) LISTA_VAR -> . IDENTIFICADOR
    (34) LISTA_VAR -> . IDENTIFICADOR TkComma LISTA_VAR
    (24) CADENA -> . TkString
    (17) IDENTIFICADOR -> . TkId

    TkString        shift and go to state 61
    TkId            shift and go to state 34

    LISTA_VAR                      shift and go to state 58
    CADENA                         shift and go to state 59
    IDENTIFICADOR                  shift and go to state 60

state 19

    (21) SALIDA -> TkPrintln . LISTA_VAR
    (23) SALIDA -> TkPrintln . CADENA
    (33) LISTA_VAR -> . IDENTIFICADOR
    (34) LISTA_VAR -> . IDENTIFICADOR TkComma LISTA_VAR
    (24) CADENA -> . TkString
    (17) IDENTIFICADOR -> . TkId

    TkString        shift and go to state 61
    TkId            shift and go to state 34

    LISTA_VAR                      shift and go to state 62
    CADENA                         shift and go to state 63
    IDENTIFICADOR                  shift and go to state 60

state 20

    (65) CONVERTIR -> TkItoi . TkOpenPar IDENTIFICADOR TkClosePar

    TkOpenPar       shift and go to state 64


state 21

    (45) EXPRESION -> TkOpenPar . EXPRESION TkClosePar
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 65
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 22

    (66) CONVERTIR -> TkLen . TkOpenPar IDENTIFICADOR TkClosePar

    TkOpenPar       shift and go to state 66


state 23

    (67) CONVERTIR -> TkMax . TkOpenPar IDENTIFICADOR TkClosePar

    TkOpenPar       shift and go to state 67


state 24

    (68) CONVERTIR -> TkMin . TkOpenPar IDENTIFICADOR TkClosePar

    TkOpenPar       shift and go to state 68


state 25

    (25) CONDICIONAL_IF -> TkIf . EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION
    (26) CONDICIONAL_IF -> TkIf . EXP_BOOL TkThen INSTRUCCION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION

    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37
    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34

    EXP_BOOL                       shift and go to state 69
    EXPRESION                      shift and go to state 70
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33

state 26

    (44) EXPRESION -> EXP_BOOL .

    TkAsig          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkMod           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkMult          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkDiv           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkPlus          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkMinus         reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkSoForth       reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkCap           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkAnd           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkOr            reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkIn            reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkEqual         reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkNEqual        reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkGreater       reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkGeq           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkLess          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkLeq           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkClosePar      reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkOf            reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkSemicolon     reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    $end            reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkEnd           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkElse          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkNum           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkOpenPar       reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkId            reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkTrue          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkFalse         reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkNot           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkThen          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkDo            reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkArrow         reduce using rule 44 (EXPRESION -> EXP_BOOL .)


state 27

    (27) CONDICIONAL_CASE -> TkCase . EXPRESION TkOf LISTA_CASE TkEnd
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 71
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 28

    (30) ITERACION_FOR -> TkFor . IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION
    (17) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 34

    IDENTIFICADOR                  shift and go to state 72

state 29

    (31) ITERACION_WHILE -> TkWhile . EXP_BOOL TkDo INSTRUCCION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION

    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37
    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34

    EXP_BOOL                       shift and go to state 73
    EXPRESION                      shift and go to state 70
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33

state 30

    (2) BLOQUE -> TkBegin . VACIO TkEnd
    (3) BLOQUE -> TkBegin . INSTRUCCION TkEnd VACIO
    (4) BLOQUE -> TkBegin . TkDeclare DECL_VAR INSTRUCCION TkEnd
    (5) BLOQUE -> TkBegin . TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO
    (74) VACIO -> .
    (6) INSTRUCCION -> . POST
    (7) INSTRUCCION -> . ASIGNACION
    (8) INSTRUCCION -> . ENTRADA
    (9) INSTRUCCION -> . SALIDA
    (10) INSTRUCCION -> . CONVERTIR
    (11) INSTRUCCION -> . CONDICIONAL_IF
    (12) INSTRUCCION -> . CONDICIONAL_CASE
    (13) INSTRUCCION -> . ITERACION_FOR
    (14) INSTRUCCION -> . ITERACION_WHILE
    (15) INSTRUCCION -> . BLOQUE
    (16) INSTRUCCION -> . INSTRUCCION TkSemicolon INSTRUCCION
    (69) POST -> . TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
    (18) ASIGNACION -> . EXPRESION TkAsig EXPRESION
    (19) ENTRADA -> . TkRead IDENTIFICADOR
    (20) SALIDA -> . TkPrint LISTA_VAR
    (21) SALIDA -> . TkPrintln LISTA_VAR
    (22) SALIDA -> . TkPrint CADENA
    (23) SALIDA -> . TkPrintln CADENA
    (65) CONVERTIR -> . TkItoi TkOpenPar IDENTIFICADOR TkClosePar
    (66) CONVERTIR -> . TkLen TkOpenPar IDENTIFICADOR TkClosePar
    (67) CONVERTIR -> . TkMax TkOpenPar IDENTIFICADOR TkClosePar
    (68) CONVERTIR -> . TkMin TkOpenPar IDENTIFICADOR TkClosePar
    (25) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION
    (26) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen INSTRUCCION
    (27) CONDICIONAL_CASE -> . TkCase EXPRESION TkOf LISTA_CASE TkEnd
    (30) ITERACION_FOR -> . TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION
    (31) ITERACION_WHILE -> . TkWhile EXP_BOOL TkDo INSTRUCCION
    (2) BLOQUE -> . TkBegin VACIO TkEnd
    (3) BLOQUE -> . TkBegin INSTRUCCION TkEnd VACIO
    (4) BLOQUE -> . TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd
    (5) BLOQUE -> . TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkDeclare       shift and go to state 76
    TkEnd           reduce using rule 74 (VACIO -> .)
    TkOpenBra       shift and go to state 14
    TkRead          shift and go to state 16
    TkPrint         shift and go to state 18
    TkPrintln       shift and go to state 19
    TkItoi          shift and go to state 20
    TkLen           shift and go to state 22
    TkMax           shift and go to state 23
    TkMin           shift and go to state 24
    TkIf            shift and go to state 25
    TkCase          shift and go to state 27
    TkFor           shift and go to state 28
    TkWhile         shift and go to state 29
    TkBegin         shift and go to state 30
    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    VACIO                          shift and go to state 74
    INSTRUCCION                    shift and go to state 75
    POST                           shift and go to state 4
    ASIGNACION                     shift and go to state 5
    ENTRADA                        shift and go to state 6
    SALIDA                         shift and go to state 7
    CONVERTIR                      shift and go to state 8
    CONDICIONAL_IF                 shift and go to state 9
    CONDICIONAL_CASE               shift and go to state 10
    ITERACION_FOR                  shift and go to state 11
    ITERACION_WHILE                shift and go to state 12
    BLOQUE                         shift and go to state 13
    EXPRESION                      shift and go to state 15
    IDENTIFICADOR                  shift and go to state 17
    EXP_BOOL                       shift and go to state 26
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33

state 31

    (40) EXPRESION -> TkNum .

    TkAsig          reduce using rule 40 (EXPRESION -> TkNum .)
    TkMod           reduce using rule 40 (EXPRESION -> TkNum .)
    TkMult          reduce using rule 40 (EXPRESION -> TkNum .)
    TkDiv           reduce using rule 40 (EXPRESION -> TkNum .)
    TkPlus          reduce using rule 40 (EXPRESION -> TkNum .)
    TkMinus         reduce using rule 40 (EXPRESION -> TkNum .)
    TkSoForth       reduce using rule 40 (EXPRESION -> TkNum .)
    TkCap           reduce using rule 40 (EXPRESION -> TkNum .)
    TkAnd           reduce using rule 40 (EXPRESION -> TkNum .)
    TkOr            reduce using rule 40 (EXPRESION -> TkNum .)
    TkIn            reduce using rule 40 (EXPRESION -> TkNum .)
    TkEqual         reduce using rule 40 (EXPRESION -> TkNum .)
    TkNEqual        reduce using rule 40 (EXPRESION -> TkNum .)
    TkGreater       reduce using rule 40 (EXPRESION -> TkNum .)
    TkGeq           reduce using rule 40 (EXPRESION -> TkNum .)
    TkLess          reduce using rule 40 (EXPRESION -> TkNum .)
    TkLeq           reduce using rule 40 (EXPRESION -> TkNum .)
    TkClosePar      reduce using rule 40 (EXPRESION -> TkNum .)
    TkOf            reduce using rule 40 (EXPRESION -> TkNum .)
    TkSemicolon     reduce using rule 40 (EXPRESION -> TkNum .)
    $end            reduce using rule 40 (EXPRESION -> TkNum .)
    TkEnd           reduce using rule 40 (EXPRESION -> TkNum .)
    TkElse          reduce using rule 40 (EXPRESION -> TkNum .)
    TkNum           reduce using rule 40 (EXPRESION -> TkNum .)
    TkOpenPar       reduce using rule 40 (EXPRESION -> TkNum .)
    TkId            reduce using rule 40 (EXPRESION -> TkNum .)
    TkTrue          reduce using rule 40 (EXPRESION -> TkNum .)
    TkFalse         reduce using rule 40 (EXPRESION -> TkNum .)
    TkNot           reduce using rule 40 (EXPRESION -> TkNum .)
    TkThen          reduce using rule 40 (EXPRESION -> TkNum .)
    TkDo            reduce using rule 40 (EXPRESION -> TkNum .)
    TkArrow         reduce using rule 40 (EXPRESION -> TkNum .)


state 32

    (42) EXPRESION -> EXP_ENTEROS .

    TkAsig          reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkMod           reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkMult          reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkDiv           reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkPlus          reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkMinus         reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkSoForth       reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkCap           reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkAnd           reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkOr            reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkIn            reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkEqual         reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkNEqual        reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkGreater       reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkGeq           reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkLess          reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkLeq           reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkClosePar      reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkOf            reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkSemicolon     reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    $end            reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkEnd           reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkElse          reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkNum           reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkOpenPar       reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkId            reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkTrue          reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkFalse         reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkNot           reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkThen          reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkDo            reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)
    TkArrow         reduce using rule 42 (EXPRESION -> EXP_ENTEROS .)


state 33

    (43) EXPRESION -> EXP_INTERVALOS .

    TkAsig          reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkMod           reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkMult          reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkDiv           reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkPlus          reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkMinus         reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkSoForth       reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkCap           reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkAnd           reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkOr            reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkIn            reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkEqual         reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkNEqual        reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkGreater       reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkGeq           reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkLess          reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkLeq           reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkClosePar      reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkOf            reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkSemicolon     reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    $end            reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkEnd           reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkElse          reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkNum           reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkOpenPar       reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkId            reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkTrue          reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkFalse         reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkNot           reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkThen          reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkDo            reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)
    TkArrow         reduce using rule 43 (EXPRESION -> EXP_INTERVALOS .)


state 34

    (17) IDENTIFICADOR -> TkId .

    TkAsig          reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkMod           reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkMult          reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkDiv           reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkPlus          reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkMinus         reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkSoForth       reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkCap           reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkAnd           reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkOr            reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkIn            reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkEqual         reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkNEqual        reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkGreater       reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkGeq           reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkLess          reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkLeq           reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkSemicolon     reduce using rule 17 (IDENTIFICADOR -> TkId .)
    $end            reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkEnd           reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkElse          reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkNum           reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkOpenPar       reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkId            reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkTrue          reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkFalse         reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkNot           reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkComma         reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkClosePar      reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkOf            reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkThen          reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkDo            reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkArrow         reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkAs            reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkPipe          reduce using rule 17 (IDENTIFICADOR -> TkId .)
    TkTwoPoints     reduce using rule 17 (IDENTIFICADOR -> TkId .)


state 35

    (53) EXP_BOOL -> TkTrue .

    TkAsig          reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkMod           reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkMult          reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkDiv           reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkPlus          reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkMinus         reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkSoForth       reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkCap           reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkAnd           reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkOr            reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkIn            reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkEqual         reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkNEqual        reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkGreater       reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkGeq           reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkLess          reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkLeq           reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkClosePar      reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkThen          reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkOf            reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkDo            reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkSemicolon     reduce using rule 53 (EXP_BOOL -> TkTrue .)
    $end            reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkEnd           reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkElse          reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkNum           reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkOpenPar       reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkId            reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkTrue          reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkFalse         reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkNot           reduce using rule 53 (EXP_BOOL -> TkTrue .)
    TkArrow         reduce using rule 53 (EXP_BOOL -> TkTrue .)


state 36

    (54) EXP_BOOL -> TkFalse .

    TkAsig          reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkMod           reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkMult          reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkDiv           reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkPlus          reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkMinus         reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkSoForth       reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkCap           reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkAnd           reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkOr            reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkIn            reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkEqual         reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkNEqual        reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkGreater       reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkGeq           reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkLess          reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkLeq           reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkClosePar      reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkThen          reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkOf            reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkDo            reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkSemicolon     reduce using rule 54 (EXP_BOOL -> TkFalse .)
    $end            reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkEnd           reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkElse          reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkNum           reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkOpenPar       reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkId            reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkTrue          reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkFalse         reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkNot           reduce using rule 54 (EXP_BOOL -> TkFalse .)
    TkArrow         reduce using rule 54 (EXP_BOOL -> TkFalse .)


state 37

    (55) EXP_BOOL -> TkNot . EXP_BOOL
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION

    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37
    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34

    EXP_BOOL                       shift and go to state 77
    EXPRESION                      shift and go to state 70
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33

state 38

    (16) INSTRUCCION -> INSTRUCCION TkSemicolon . INSTRUCCION
    (6) INSTRUCCION -> . POST
    (7) INSTRUCCION -> . ASIGNACION
    (8) INSTRUCCION -> . ENTRADA
    (9) INSTRUCCION -> . SALIDA
    (10) INSTRUCCION -> . CONVERTIR
    (11) INSTRUCCION -> . CONDICIONAL_IF
    (12) INSTRUCCION -> . CONDICIONAL_CASE
    (13) INSTRUCCION -> . ITERACION_FOR
    (14) INSTRUCCION -> . ITERACION_WHILE
    (15) INSTRUCCION -> . BLOQUE
    (16) INSTRUCCION -> . INSTRUCCION TkSemicolon INSTRUCCION
    (69) POST -> . TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
    (18) ASIGNACION -> . EXPRESION TkAsig EXPRESION
    (19) ENTRADA -> . TkRead IDENTIFICADOR
    (20) SALIDA -> . TkPrint LISTA_VAR
    (21) SALIDA -> . TkPrintln LISTA_VAR
    (22) SALIDA -> . TkPrint CADENA
    (23) SALIDA -> . TkPrintln CADENA
    (65) CONVERTIR -> . TkItoi TkOpenPar IDENTIFICADOR TkClosePar
    (66) CONVERTIR -> . TkLen TkOpenPar IDENTIFICADOR TkClosePar
    (67) CONVERTIR -> . TkMax TkOpenPar IDENTIFICADOR TkClosePar
    (68) CONVERTIR -> . TkMin TkOpenPar IDENTIFICADOR TkClosePar
    (25) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION
    (26) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen INSTRUCCION
    (27) CONDICIONAL_CASE -> . TkCase EXPRESION TkOf LISTA_CASE TkEnd
    (30) ITERACION_FOR -> . TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION
    (31) ITERACION_WHILE -> . TkWhile EXP_BOOL TkDo INSTRUCCION
    (2) BLOQUE -> . TkBegin VACIO TkEnd
    (3) BLOQUE -> . TkBegin INSTRUCCION TkEnd VACIO
    (4) BLOQUE -> . TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd
    (5) BLOQUE -> . TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkOpenBra       shift and go to state 14
    TkRead          shift and go to state 16
    TkPrint         shift and go to state 18
    TkPrintln       shift and go to state 19
    TkItoi          shift and go to state 20
    TkLen           shift and go to state 22
    TkMax           shift and go to state 23
    TkMin           shift and go to state 24
    TkIf            shift and go to state 25
    TkCase          shift and go to state 27
    TkFor           shift and go to state 28
    TkWhile         shift and go to state 29
    TkBegin         shift and go to state 30
    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    INSTRUCCION                    shift and go to state 78
    POST                           shift and go to state 4
    ASIGNACION                     shift and go to state 5
    ENTRADA                        shift and go to state 6
    SALIDA                         shift and go to state 7
    CONVERTIR                      shift and go to state 8
    CONDICIONAL_IF                 shift and go to state 9
    CONDICIONAL_CASE               shift and go to state 10
    ITERACION_FOR                  shift and go to state 11
    ITERACION_WHILE                shift and go to state 12
    BLOQUE                         shift and go to state 13
    EXPRESION                      shift and go to state 15
    IDENTIFICADOR                  shift and go to state 17
    EXP_BOOL                       shift and go to state 26
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33

state 39

    (69) POST -> TkOpenBra TkPost . TkTwoPoints EXP_CUANTIFICADOR TkCloseBra

    TkTwoPoints     shift and go to state 79


state 40

    (18) ASIGNACION -> EXPRESION TkAsig . EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 80
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 41

    (46) EXP_ENTEROS -> EXPRESION TkMod . EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 81
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 42

    (47) EXP_ENTEROS -> EXPRESION TkMult . EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 82
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 43

    (48) EXP_ENTEROS -> EXPRESION TkDiv . EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 83
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 44

    (49) EXP_ENTEROS -> EXPRESION TkPlus . EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 84
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 45

    (50) EXP_ENTEROS -> EXPRESION TkMinus . EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 85
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 46

    (51) EXP_INTERVALOS -> EXPRESION TkSoForth . EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 86
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 47

    (52) EXP_INTERVALOS -> EXPRESION TkCap . EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 87
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 48

    (56) EXP_BOOL -> EXPRESION TkAnd . EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 88
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 49

    (57) EXP_BOOL -> EXPRESION TkOr . EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 89
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 50

    (58) EXP_BOOL -> EXPRESION TkIn . EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 90
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 51

    (59) EXP_BOOL -> EXPRESION TkEqual . EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 91
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 52

    (60) EXP_BOOL -> EXPRESION TkNEqual . EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 92
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 53

    (61) EXP_BOOL -> EXPRESION TkGreater . EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 93
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 54

    (62) EXP_BOOL -> EXPRESION TkGeq . EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 94
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 55

    (63) EXP_BOOL -> EXPRESION TkLess . EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 95
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 56

    (64) EXP_BOOL -> EXPRESION TkLeq . EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 96
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 57

    (19) ENTRADA -> TkRead IDENTIFICADOR .

    TkSemicolon     reduce using rule 19 (ENTRADA -> TkRead IDENTIFICADOR .)
    $end            reduce using rule 19 (ENTRADA -> TkRead IDENTIFICADOR .)
    TkEnd           reduce using rule 19 (ENTRADA -> TkRead IDENTIFICADOR .)
    TkElse          reduce using rule 19 (ENTRADA -> TkRead IDENTIFICADOR .)
    TkNum           reduce using rule 19 (ENTRADA -> TkRead IDENTIFICADOR .)
    TkOpenPar       reduce using rule 19 (ENTRADA -> TkRead IDENTIFICADOR .)
    TkId            reduce using rule 19 (ENTRADA -> TkRead IDENTIFICADOR .)
    TkTrue          reduce using rule 19 (ENTRADA -> TkRead IDENTIFICADOR .)
    TkFalse         reduce using rule 19 (ENTRADA -> TkRead IDENTIFICADOR .)
    TkNot           reduce using rule 19 (ENTRADA -> TkRead IDENTIFICADOR .)


state 58

    (20) SALIDA -> TkPrint LISTA_VAR .

    TkSemicolon     reduce using rule 20 (SALIDA -> TkPrint LISTA_VAR .)
    $end            reduce using rule 20 (SALIDA -> TkPrint LISTA_VAR .)
    TkEnd           reduce using rule 20 (SALIDA -> TkPrint LISTA_VAR .)
    TkElse          reduce using rule 20 (SALIDA -> TkPrint LISTA_VAR .)
    TkNum           reduce using rule 20 (SALIDA -> TkPrint LISTA_VAR .)
    TkOpenPar       reduce using rule 20 (SALIDA -> TkPrint LISTA_VAR .)
    TkId            reduce using rule 20 (SALIDA -> TkPrint LISTA_VAR .)
    TkTrue          reduce using rule 20 (SALIDA -> TkPrint LISTA_VAR .)
    TkFalse         reduce using rule 20 (SALIDA -> TkPrint LISTA_VAR .)
    TkNot           reduce using rule 20 (SALIDA -> TkPrint LISTA_VAR .)


state 59

    (22) SALIDA -> TkPrint CADENA .

    TkSemicolon     reduce using rule 22 (SALIDA -> TkPrint CADENA .)
    $end            reduce using rule 22 (SALIDA -> TkPrint CADENA .)
    TkEnd           reduce using rule 22 (SALIDA -> TkPrint CADENA .)
    TkElse          reduce using rule 22 (SALIDA -> TkPrint CADENA .)
    TkNum           reduce using rule 22 (SALIDA -> TkPrint CADENA .)
    TkOpenPar       reduce using rule 22 (SALIDA -> TkPrint CADENA .)
    TkId            reduce using rule 22 (SALIDA -> TkPrint CADENA .)
    TkTrue          reduce using rule 22 (SALIDA -> TkPrint CADENA .)
    TkFalse         reduce using rule 22 (SALIDA -> TkPrint CADENA .)
    TkNot           reduce using rule 22 (SALIDA -> TkPrint CADENA .)


state 60

    (33) LISTA_VAR -> IDENTIFICADOR .
    (34) LISTA_VAR -> IDENTIFICADOR . TkComma LISTA_VAR

    TkSemicolon     reduce using rule 33 (LISTA_VAR -> IDENTIFICADOR .)
    $end            reduce using rule 33 (LISTA_VAR -> IDENTIFICADOR .)
    TkEnd           reduce using rule 33 (LISTA_VAR -> IDENTIFICADOR .)
    TkElse          reduce using rule 33 (LISTA_VAR -> IDENTIFICADOR .)
    TkNum           reduce using rule 33 (LISTA_VAR -> IDENTIFICADOR .)
    TkOpenPar       reduce using rule 33 (LISTA_VAR -> IDENTIFICADOR .)
    TkId            reduce using rule 33 (LISTA_VAR -> IDENTIFICADOR .)
    TkTrue          reduce using rule 33 (LISTA_VAR -> IDENTIFICADOR .)
    TkFalse         reduce using rule 33 (LISTA_VAR -> IDENTIFICADOR .)
    TkNot           reduce using rule 33 (LISTA_VAR -> IDENTIFICADOR .)
    TkAs            reduce using rule 33 (LISTA_VAR -> IDENTIFICADOR .)
    TkComma         shift and go to state 97


state 61

    (24) CADENA -> TkString .

    TkSemicolon     reduce using rule 24 (CADENA -> TkString .)
    $end            reduce using rule 24 (CADENA -> TkString .)
    TkEnd           reduce using rule 24 (CADENA -> TkString .)
    TkElse          reduce using rule 24 (CADENA -> TkString .)
    TkNum           reduce using rule 24 (CADENA -> TkString .)
    TkOpenPar       reduce using rule 24 (CADENA -> TkString .)
    TkId            reduce using rule 24 (CADENA -> TkString .)
    TkTrue          reduce using rule 24 (CADENA -> TkString .)
    TkFalse         reduce using rule 24 (CADENA -> TkString .)
    TkNot           reduce using rule 24 (CADENA -> TkString .)


state 62

    (21) SALIDA -> TkPrintln LISTA_VAR .

    TkSemicolon     reduce using rule 21 (SALIDA -> TkPrintln LISTA_VAR .)
    $end            reduce using rule 21 (SALIDA -> TkPrintln LISTA_VAR .)
    TkEnd           reduce using rule 21 (SALIDA -> TkPrintln LISTA_VAR .)
    TkElse          reduce using rule 21 (SALIDA -> TkPrintln LISTA_VAR .)
    TkNum           reduce using rule 21 (SALIDA -> TkPrintln LISTA_VAR .)
    TkOpenPar       reduce using rule 21 (SALIDA -> TkPrintln LISTA_VAR .)
    TkId            reduce using rule 21 (SALIDA -> TkPrintln LISTA_VAR .)
    TkTrue          reduce using rule 21 (SALIDA -> TkPrintln LISTA_VAR .)
    TkFalse         reduce using rule 21 (SALIDA -> TkPrintln LISTA_VAR .)
    TkNot           reduce using rule 21 (SALIDA -> TkPrintln LISTA_VAR .)


state 63

    (23) SALIDA -> TkPrintln CADENA .

    TkSemicolon     reduce using rule 23 (SALIDA -> TkPrintln CADENA .)
    $end            reduce using rule 23 (SALIDA -> TkPrintln CADENA .)
    TkEnd           reduce using rule 23 (SALIDA -> TkPrintln CADENA .)
    TkElse          reduce using rule 23 (SALIDA -> TkPrintln CADENA .)
    TkNum           reduce using rule 23 (SALIDA -> TkPrintln CADENA .)
    TkOpenPar       reduce using rule 23 (SALIDA -> TkPrintln CADENA .)
    TkId            reduce using rule 23 (SALIDA -> TkPrintln CADENA .)
    TkTrue          reduce using rule 23 (SALIDA -> TkPrintln CADENA .)
    TkFalse         reduce using rule 23 (SALIDA -> TkPrintln CADENA .)
    TkNot           reduce using rule 23 (SALIDA -> TkPrintln CADENA .)


state 64

    (65) CONVERTIR -> TkItoi TkOpenPar . IDENTIFICADOR TkClosePar
    (17) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 34

    IDENTIFICADOR                  shift and go to state 98

state 65

    (45) EXPRESION -> TkOpenPar EXPRESION . TkClosePar
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkClosePar      shift and go to state 99
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43
    TkPlus          shift and go to state 44
    TkMinus         shift and go to state 45
    TkSoForth       shift and go to state 46
    TkCap           shift and go to state 47
    TkAnd           shift and go to state 48
    TkOr            shift and go to state 49
    TkIn            shift and go to state 50
    TkEqual         shift and go to state 51
    TkNEqual        shift and go to state 52
    TkGreater       shift and go to state 53
    TkGeq           shift and go to state 54
    TkLess          shift and go to state 55
    TkLeq           shift and go to state 56


state 66

    (66) CONVERTIR -> TkLen TkOpenPar . IDENTIFICADOR TkClosePar
    (17) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 34

    IDENTIFICADOR                  shift and go to state 100

state 67

    (67) CONVERTIR -> TkMax TkOpenPar . IDENTIFICADOR TkClosePar
    (17) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 34

    IDENTIFICADOR                  shift and go to state 101

state 68

    (68) CONVERTIR -> TkMin TkOpenPar . IDENTIFICADOR TkClosePar
    (17) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 34

    IDENTIFICADOR                  shift and go to state 102

state 69

    (25) CONDICIONAL_IF -> TkIf EXP_BOOL . TkThen INSTRUCCION TkElse INSTRUCCION
    (26) CONDICIONAL_IF -> TkIf EXP_BOOL . TkThen INSTRUCCION
    (44) EXPRESION -> EXP_BOOL .

    TkThen          shift and go to state 103
    TkAnd           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkOr            reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkIn            reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkEqual         reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkNEqual        reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkGreater       reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkGeq           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkLess          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkLeq           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkMod           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkMult          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkDiv           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkPlus          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkMinus         reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkSoForth       reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkCap           reduce using rule 44 (EXPRESION -> EXP_BOOL .)


state 70

    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION

    TkAnd           shift and go to state 48
    TkOr            shift and go to state 49
    TkIn            shift and go to state 50
    TkEqual         shift and go to state 51
    TkNEqual        shift and go to state 52
    TkGreater       shift and go to state 53
    TkGeq           shift and go to state 54
    TkLess          shift and go to state 55
    TkLeq           shift and go to state 56
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43
    TkPlus          shift and go to state 44
    TkMinus         shift and go to state 45
    TkSoForth       shift and go to state 46
    TkCap           shift and go to state 47


state 71

    (27) CONDICIONAL_CASE -> TkCase EXPRESION . TkOf LISTA_CASE TkEnd
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkOf            shift and go to state 104
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43
    TkPlus          shift and go to state 44
    TkMinus         shift and go to state 45
    TkSoForth       shift and go to state 46
    TkCap           shift and go to state 47
    TkAnd           shift and go to state 48
    TkOr            shift and go to state 49
    TkIn            shift and go to state 50
    TkEqual         shift and go to state 51
    TkNEqual        shift and go to state 52
    TkGreater       shift and go to state 53
    TkGeq           shift and go to state 54
    TkLess          shift and go to state 55
    TkLeq           shift and go to state 56


state 72

    (30) ITERACION_FOR -> TkFor IDENTIFICADOR . TkIn EXPRESION TkDo INSTRUCCION

    TkIn            shift and go to state 105


state 73

    (31) ITERACION_WHILE -> TkWhile EXP_BOOL . TkDo INSTRUCCION
    (44) EXPRESION -> EXP_BOOL .

    TkDo            shift and go to state 106
    TkAnd           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkOr            reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkIn            reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkEqual         reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkNEqual        reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkGreater       reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkGeq           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkLess          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkLeq           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkMod           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkMult          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkDiv           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkPlus          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkMinus         reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkSoForth       reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkCap           reduce using rule 44 (EXPRESION -> EXP_BOOL .)


state 74

    (2) BLOQUE -> TkBegin VACIO . TkEnd

    TkEnd           shift and go to state 107


state 75

    (3) BLOQUE -> TkBegin INSTRUCCION . TkEnd VACIO
    (16) INSTRUCCION -> INSTRUCCION . TkSemicolon INSTRUCCION

    TkEnd           shift and go to state 108
    TkSemicolon     shift and go to state 38


state 76

    (4) BLOQUE -> TkBegin TkDeclare . DECL_VAR INSTRUCCION TkEnd
    (5) BLOQUE -> TkBegin TkDeclare . DECL_VAR INSTRUCCION TkEnd VACIO
    (32) DECL_VAR -> . LISTA_VAR TkAs LISTA_TIPO
    (33) LISTA_VAR -> . IDENTIFICADOR
    (34) LISTA_VAR -> . IDENTIFICADOR TkComma LISTA_VAR
    (17) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 34

    DECL_VAR                       shift and go to state 109
    LISTA_VAR                      shift and go to state 110
    IDENTIFICADOR                  shift and go to state 60

state 77

    (55) EXP_BOOL -> TkNot EXP_BOOL .
    (44) EXPRESION -> EXP_BOOL .

  ! reduce/reduce conflict for TkAnd resolved using rule 44 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkOr resolved using rule 44 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkIn resolved using rule 44 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkEqual resolved using rule 44 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkNEqual resolved using rule 44 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkGreater resolved using rule 44 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkGeq resolved using rule 44 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkLess resolved using rule 44 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkLeq resolved using rule 44 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkMod resolved using rule 44 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkMult resolved using rule 44 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkDiv resolved using rule 44 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkPlus resolved using rule 44 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkMinus resolved using rule 44 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkSoForth resolved using rule 44 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkCap resolved using rule 44 (EXPRESION -> EXP_BOOL .)
    TkAsig          reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .)
    TkClosePar      reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .)
    TkThen          reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .)
    TkOf            reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .)
    TkDo            reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .)
    TkSemicolon     reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .)
    $end            reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .)
    TkEnd           reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .)
    TkElse          reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .)
    TkNum           reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .)
    TkOpenPar       reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .)
    TkId            reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .)
    TkTrue          reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .)
    TkFalse         reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .)
    TkNot           reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .)
    TkArrow         reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .)
    TkAnd           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkOr            reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkIn            reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkEqual         reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkNEqual        reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkGreater       reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkGeq           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkLess          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkLeq           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkMod           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkMult          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkDiv           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkPlus          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkMinus         reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkSoForth       reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkCap           reduce using rule 44 (EXPRESION -> EXP_BOOL .)

  ! TkMod           [ reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkMult          [ reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkDiv           [ reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkPlus          [ reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkMinus         [ reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkSoForth       [ reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkCap           [ reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkAnd           [ reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkOr            [ reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkIn            [ reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkEqual         [ reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkNEqual        [ reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkGreater       [ reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkGeq           [ reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkLess          [ reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkLeq           [ reduce using rule 55 (EXP_BOOL -> TkNot EXP_BOOL .) ]


state 78

    (16) INSTRUCCION -> INSTRUCCION TkSemicolon INSTRUCCION .
    (16) INSTRUCCION -> INSTRUCCION . TkSemicolon INSTRUCCION

  ! shift/reduce conflict for TkSemicolon resolved as shift
    $end            reduce using rule 16 (INSTRUCCION -> INSTRUCCION TkSemicolon INSTRUCCION .)
    TkEnd           reduce using rule 16 (INSTRUCCION -> INSTRUCCION TkSemicolon INSTRUCCION .)
    TkElse          reduce using rule 16 (INSTRUCCION -> INSTRUCCION TkSemicolon INSTRUCCION .)
    TkNum           reduce using rule 16 (INSTRUCCION -> INSTRUCCION TkSemicolon INSTRUCCION .)
    TkOpenPar       reduce using rule 16 (INSTRUCCION -> INSTRUCCION TkSemicolon INSTRUCCION .)
    TkId            reduce using rule 16 (INSTRUCCION -> INSTRUCCION TkSemicolon INSTRUCCION .)
    TkTrue          reduce using rule 16 (INSTRUCCION -> INSTRUCCION TkSemicolon INSTRUCCION .)
    TkFalse         reduce using rule 16 (INSTRUCCION -> INSTRUCCION TkSemicolon INSTRUCCION .)
    TkNot           reduce using rule 16 (INSTRUCCION -> INSTRUCCION TkSemicolon INSTRUCCION .)
    TkSemicolon     shift and go to state 38

  ! TkSemicolon     [ reduce using rule 16 (INSTRUCCION -> INSTRUCCION TkSemicolon INSTRUCCION .) ]


state 79

    (69) POST -> TkOpenBra TkPost TkTwoPoints . EXP_CUANTIFICADOR TkCloseBra
    (70) EXP_CUANTIFICADOR -> . TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (71) EXP_CUANTIFICADOR -> . TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (72) EXP_CUANTIFICADOR -> . TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> . TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar

    TkOpenPar       shift and go to state 112

    EXP_CUANTIFICADOR              shift and go to state 111

state 80

    (18) ASIGNACION -> EXPRESION TkAsig EXPRESION .
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkSemicolon     reduce using rule 18 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    $end            reduce using rule 18 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkEnd           reduce using rule 18 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkElse          reduce using rule 18 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkNum           reduce using rule 18 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkOpenPar       reduce using rule 18 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkId            reduce using rule 18 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkTrue          reduce using rule 18 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkFalse         reduce using rule 18 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkNot           reduce using rule 18 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43
    TkPlus          shift and go to state 44
    TkMinus         shift and go to state 45
    TkSoForth       shift and go to state 46
    TkCap           shift and go to state 47
    TkAnd           shift and go to state 48
    TkOr            shift and go to state 49
    TkIn            shift and go to state 50
    TkEqual         shift and go to state 51
    TkNEqual        shift and go to state 52
    TkGreater       shift and go to state 53
    TkGeq           shift and go to state 54
    TkLess          shift and go to state 55
    TkLeq           shift and go to state 56


state 81

    (46) EXP_ENTEROS -> EXPRESION TkMod EXPRESION .
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkMod           reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkMult          reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkDiv           reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkPlus          reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkMinus         reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkSoForth       reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkCap           reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkAnd           reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkOr            reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkIn            reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkEqual         reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkNEqual        reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkGreater       reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkGeq           reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkLess          reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkLeq           reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkClosePar      reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkOf            reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkSemicolon     reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    $end            reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkEnd           reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkElse          reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkNum           reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkOpenPar       reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkId            reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkTrue          reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkFalse         reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkNot           reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkThen          reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkDo            reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkArrow         reduce using rule 46 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)

  ! TkMod           [ shift and go to state 41 ]
  ! TkMult          [ shift and go to state 42 ]
  ! TkDiv           [ shift and go to state 43 ]
  ! TkPlus          [ shift and go to state 44 ]
  ! TkMinus         [ shift and go to state 45 ]
  ! TkSoForth       [ shift and go to state 46 ]
  ! TkCap           [ shift and go to state 47 ]
  ! TkAnd           [ shift and go to state 48 ]
  ! TkOr            [ shift and go to state 49 ]
  ! TkIn            [ shift and go to state 50 ]
  ! TkEqual         [ shift and go to state 51 ]
  ! TkNEqual        [ shift and go to state 52 ]
  ! TkGreater       [ shift and go to state 53 ]
  ! TkGeq           [ shift and go to state 54 ]
  ! TkLess          [ shift and go to state 55 ]
  ! TkLeq           [ shift and go to state 56 ]


state 82

    (47) EXP_ENTEROS -> EXPRESION TkMult EXPRESION .
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkMod           reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkMult          reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkDiv           reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkPlus          reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkMinus         reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkSoForth       reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkCap           reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkAnd           reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkOr            reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkIn            reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkEqual         reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkNEqual        reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkGreater       reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkGeq           reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkLess          reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkLeq           reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkClosePar      reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkOf            reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkSemicolon     reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    $end            reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkEnd           reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkElse          reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkNum           reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkOpenPar       reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkId            reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkTrue          reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkFalse         reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkNot           reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkThen          reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkDo            reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkArrow         reduce using rule 47 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)

  ! TkMod           [ shift and go to state 41 ]
  ! TkMult          [ shift and go to state 42 ]
  ! TkDiv           [ shift and go to state 43 ]
  ! TkPlus          [ shift and go to state 44 ]
  ! TkMinus         [ shift and go to state 45 ]
  ! TkSoForth       [ shift and go to state 46 ]
  ! TkCap           [ shift and go to state 47 ]
  ! TkAnd           [ shift and go to state 48 ]
  ! TkOr            [ shift and go to state 49 ]
  ! TkIn            [ shift and go to state 50 ]
  ! TkEqual         [ shift and go to state 51 ]
  ! TkNEqual        [ shift and go to state 52 ]
  ! TkGreater       [ shift and go to state 53 ]
  ! TkGeq           [ shift and go to state 54 ]
  ! TkLess          [ shift and go to state 55 ]
  ! TkLeq           [ shift and go to state 56 ]


state 83

    (48) EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkMod           reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkMult          reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkDiv           reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkPlus          reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkMinus         reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkSoForth       reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkCap           reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkAnd           reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkOr            reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkIn            reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkEqual         reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkNEqual        reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkGreater       reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkGeq           reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkLess          reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkLeq           reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkClosePar      reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkOf            reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkSemicolon     reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    $end            reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkEnd           reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkElse          reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkNum           reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkOpenPar       reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkId            reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkTrue          reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkFalse         reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkNot           reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkThen          reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkDo            reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkArrow         reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)

  ! TkMod           [ shift and go to state 41 ]
  ! TkMult          [ shift and go to state 42 ]
  ! TkDiv           [ shift and go to state 43 ]
  ! TkPlus          [ shift and go to state 44 ]
  ! TkMinus         [ shift and go to state 45 ]
  ! TkSoForth       [ shift and go to state 46 ]
  ! TkCap           [ shift and go to state 47 ]
  ! TkAnd           [ shift and go to state 48 ]
  ! TkOr            [ shift and go to state 49 ]
  ! TkIn            [ shift and go to state 50 ]
  ! TkEqual         [ shift and go to state 51 ]
  ! TkNEqual        [ shift and go to state 52 ]
  ! TkGreater       [ shift and go to state 53 ]
  ! TkGeq           [ shift and go to state 54 ]
  ! TkLess          [ shift and go to state 55 ]
  ! TkLeq           [ shift and go to state 56 ]


state 84

    (49) EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkPlus          reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkMinus         reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkSoForth       reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkCap           reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkAnd           reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkOr            reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkIn            reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkEqual         reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkNEqual        reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkGreater       reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkGeq           reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkLess          reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkLeq           reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkClosePar      reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkOf            reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkSemicolon     reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    $end            reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkEnd           reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkElse          reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkNum           reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkOpenPar       reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkId            reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkTrue          reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkFalse         reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkNot           reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkThen          reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkDo            reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkArrow         reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43

  ! TkMod           [ reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .) ]
  ! TkMult          [ reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .) ]
  ! TkDiv           [ reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .) ]
  ! TkPlus          [ shift and go to state 44 ]
  ! TkMinus         [ shift and go to state 45 ]
  ! TkSoForth       [ shift and go to state 46 ]
  ! TkCap           [ shift and go to state 47 ]
  ! TkAnd           [ shift and go to state 48 ]
  ! TkOr            [ shift and go to state 49 ]
  ! TkIn            [ shift and go to state 50 ]
  ! TkEqual         [ shift and go to state 51 ]
  ! TkNEqual        [ shift and go to state 52 ]
  ! TkGreater       [ shift and go to state 53 ]
  ! TkGeq           [ shift and go to state 54 ]
  ! TkLess          [ shift and go to state 55 ]
  ! TkLeq           [ shift and go to state 56 ]


state 85

    (50) EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkMod           reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkMult          reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkDiv           reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkPlus          reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkMinus         reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkSoForth       reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkCap           reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkAnd           reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkOr            reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkIn            reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkEqual         reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkNEqual        reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkGreater       reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkGeq           reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkLess          reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkLeq           reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkClosePar      reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkOf            reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkSemicolon     reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    $end            reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkEnd           reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkElse          reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkNum           reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkOpenPar       reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkId            reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkTrue          reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkFalse         reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkNot           reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkThen          reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkDo            reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkArrow         reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)

  ! TkMod           [ shift and go to state 41 ]
  ! TkMult          [ shift and go to state 42 ]
  ! TkDiv           [ shift and go to state 43 ]
  ! TkPlus          [ shift and go to state 44 ]
  ! TkMinus         [ shift and go to state 45 ]
  ! TkSoForth       [ shift and go to state 46 ]
  ! TkCap           [ shift and go to state 47 ]
  ! TkAnd           [ shift and go to state 48 ]
  ! TkOr            [ shift and go to state 49 ]
  ! TkIn            [ shift and go to state 50 ]
  ! TkEqual         [ shift and go to state 51 ]
  ! TkNEqual        [ shift and go to state 52 ]
  ! TkGreater       [ shift and go to state 53 ]
  ! TkGeq           [ shift and go to state 54 ]
  ! TkLess          [ shift and go to state 55 ]
  ! TkLeq           [ shift and go to state 56 ]


state 86

    (51) EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

  ! shift/reduce conflict for TkMod resolved as shift
  ! shift/reduce conflict for TkMult resolved as shift
  ! shift/reduce conflict for TkDiv resolved as shift
  ! shift/reduce conflict for TkPlus resolved as shift
  ! shift/reduce conflict for TkMinus resolved as shift
  ! shift/reduce conflict for TkSoForth resolved as shift
  ! shift/reduce conflict for TkCap resolved as shift
  ! shift/reduce conflict for TkAnd resolved as shift
  ! shift/reduce conflict for TkOr resolved as shift
  ! shift/reduce conflict for TkIn resolved as shift
  ! shift/reduce conflict for TkEqual resolved as shift
  ! shift/reduce conflict for TkNEqual resolved as shift
  ! shift/reduce conflict for TkGreater resolved as shift
  ! shift/reduce conflict for TkGeq resolved as shift
  ! shift/reduce conflict for TkLess resolved as shift
  ! shift/reduce conflict for TkLeq resolved as shift
    TkAsig          reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkClosePar      reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkOf            reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkSemicolon     reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    $end            reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkEnd           reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkElse          reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkNum           reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkOpenPar       reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkId            reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkTrue          reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkFalse         reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkNot           reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkThen          reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkDo            reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkArrow         reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43
    TkPlus          shift and go to state 44
    TkMinus         shift and go to state 45
    TkSoForth       shift and go to state 46
    TkCap           shift and go to state 47
    TkAnd           shift and go to state 48
    TkOr            shift and go to state 49
    TkIn            shift and go to state 50
    TkEqual         shift and go to state 51
    TkNEqual        shift and go to state 52
    TkGreater       shift and go to state 53
    TkGeq           shift and go to state 54
    TkLess          shift and go to state 55
    TkLeq           shift and go to state 56

  ! TkMod           [ reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkMult          [ reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkDiv           [ reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkPlus          [ reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkMinus         [ reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkSoForth       [ reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkCap           [ reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkAnd           [ reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkOr            [ reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkIn            [ reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkEqual         [ reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkNEqual        [ reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkGreater       [ reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkGeq           [ reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkLess          [ reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkLeq           [ reduce using rule 51 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]


state 87

    (52) EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

  ! shift/reduce conflict for TkMod resolved as shift
  ! shift/reduce conflict for TkMult resolved as shift
  ! shift/reduce conflict for TkDiv resolved as shift
  ! shift/reduce conflict for TkPlus resolved as shift
  ! shift/reduce conflict for TkMinus resolved as shift
  ! shift/reduce conflict for TkSoForth resolved as shift
  ! shift/reduce conflict for TkCap resolved as shift
  ! shift/reduce conflict for TkAnd resolved as shift
  ! shift/reduce conflict for TkOr resolved as shift
  ! shift/reduce conflict for TkIn resolved as shift
  ! shift/reduce conflict for TkEqual resolved as shift
  ! shift/reduce conflict for TkNEqual resolved as shift
  ! shift/reduce conflict for TkGreater resolved as shift
  ! shift/reduce conflict for TkGeq resolved as shift
  ! shift/reduce conflict for TkLess resolved as shift
  ! shift/reduce conflict for TkLeq resolved as shift
    TkAsig          reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkClosePar      reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkOf            reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkSemicolon     reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    $end            reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkEnd           reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkElse          reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkNum           reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkOpenPar       reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkId            reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkTrue          reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkFalse         reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkNot           reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkThen          reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkDo            reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkArrow         reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43
    TkPlus          shift and go to state 44
    TkMinus         shift and go to state 45
    TkSoForth       shift and go to state 46
    TkCap           shift and go to state 47
    TkAnd           shift and go to state 48
    TkOr            shift and go to state 49
    TkIn            shift and go to state 50
    TkEqual         shift and go to state 51
    TkNEqual        shift and go to state 52
    TkGreater       shift and go to state 53
    TkGeq           shift and go to state 54
    TkLess          shift and go to state 55
    TkLeq           shift and go to state 56

  ! TkMod           [ reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkMult          [ reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkDiv           [ reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkPlus          [ reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkMinus         [ reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkSoForth       [ reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkCap           [ reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkAnd           [ reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkOr            [ reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkIn            [ reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkEqual         [ reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkNEqual        [ reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkGreater       [ reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkGeq           [ reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkLess          [ reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkLeq           [ reduce using rule 52 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]


state 88

    (56) EXP_BOOL -> EXPRESION TkAnd EXPRESION .
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkSoForth       reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkCap           reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkAnd           reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkIn            reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkNEqual        reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkClosePar      reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkThen          reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkOf            reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkDo            reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkSemicolon     reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    $end            reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkEnd           reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkElse          reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkNum           reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkOpenPar       reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkId            reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkTrue          reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkFalse         reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkNot           reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkArrow         reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43
    TkPlus          shift and go to state 44
    TkMinus         shift and go to state 45
    TkOr            shift and go to state 49
    TkEqual         shift and go to state 51
    TkGreater       shift and go to state 53
    TkGeq           shift and go to state 54
    TkLess          shift and go to state 55
    TkLeq           shift and go to state 56

  ! TkMod           [ reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkMult          [ reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkDiv           [ reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkPlus          [ reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkMinus         [ reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkOr            [ reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkEqual         [ reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkGreater       [ reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkGeq           [ reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkLess          [ reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkLeq           [ reduce using rule 56 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkSoForth       [ shift and go to state 46 ]
  ! TkCap           [ shift and go to state 47 ]
  ! TkAnd           [ shift and go to state 48 ]
  ! TkIn            [ shift and go to state 50 ]
  ! TkNEqual        [ shift and go to state 52 ]


state 89

    (57) EXP_BOOL -> EXPRESION TkOr EXPRESION .
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkSoForth       reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkCap           reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkAnd           reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkOr            reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkIn            reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkNEqual        reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkClosePar      reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkThen          reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkOf            reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkDo            reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkSemicolon     reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    $end            reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkEnd           reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkElse          reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkNum           reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkOpenPar       reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkId            reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkTrue          reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkFalse         reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkNot           reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkArrow         reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43
    TkPlus          shift and go to state 44
    TkMinus         shift and go to state 45
    TkEqual         shift and go to state 51
    TkGreater       shift and go to state 53
    TkGeq           shift and go to state 54
    TkLess          shift and go to state 55
    TkLeq           shift and go to state 56

  ! TkMod           [ reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkMult          [ reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkDiv           [ reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkPlus          [ reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkMinus         [ reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkEqual         [ reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkGreater       [ reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkGeq           [ reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkLess          [ reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkLeq           [ reduce using rule 57 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkSoForth       [ shift and go to state 46 ]
  ! TkCap           [ shift and go to state 47 ]
  ! TkAnd           [ shift and go to state 48 ]
  ! TkOr            [ shift and go to state 49 ]
  ! TkIn            [ shift and go to state 50 ]
  ! TkNEqual        [ shift and go to state 52 ]


state 90

    (58) EXP_BOOL -> EXPRESION TkIn EXPRESION .
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

  ! shift/reduce conflict for TkMod resolved as shift
  ! shift/reduce conflict for TkMult resolved as shift
  ! shift/reduce conflict for TkDiv resolved as shift
  ! shift/reduce conflict for TkPlus resolved as shift
  ! shift/reduce conflict for TkMinus resolved as shift
  ! shift/reduce conflict for TkSoForth resolved as shift
  ! shift/reduce conflict for TkCap resolved as shift
  ! shift/reduce conflict for TkAnd resolved as shift
  ! shift/reduce conflict for TkOr resolved as shift
  ! shift/reduce conflict for TkIn resolved as shift
  ! shift/reduce conflict for TkEqual resolved as shift
  ! shift/reduce conflict for TkNEqual resolved as shift
  ! shift/reduce conflict for TkGreater resolved as shift
  ! shift/reduce conflict for TkGeq resolved as shift
  ! shift/reduce conflict for TkLess resolved as shift
  ! shift/reduce conflict for TkLeq resolved as shift
    TkAsig          reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkClosePar      reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkThen          reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkOf            reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkDo            reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkSemicolon     reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    $end            reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkEnd           reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkElse          reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkNum           reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkOpenPar       reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkId            reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkTrue          reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkFalse         reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkNot           reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkArrow         reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43
    TkPlus          shift and go to state 44
    TkMinus         shift and go to state 45
    TkSoForth       shift and go to state 46
    TkCap           shift and go to state 47
    TkAnd           shift and go to state 48
    TkOr            shift and go to state 49
    TkIn            shift and go to state 50
    TkEqual         shift and go to state 51
    TkNEqual        shift and go to state 52
    TkGreater       shift and go to state 53
    TkGeq           shift and go to state 54
    TkLess          shift and go to state 55
    TkLeq           shift and go to state 56

  ! TkMod           [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkMult          [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkDiv           [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkPlus          [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkMinus         [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkSoForth       [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkCap           [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkAnd           [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkOr            [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkIn            [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkEqual         [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkNEqual        [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkGreater       [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkGeq           [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkLess          [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkLeq           [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]


state 91

    (59) EXP_BOOL -> EXPRESION TkEqual EXPRESION .
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkSoForth       reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkCap           reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkAnd           reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkOr            reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkIn            reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkEqual         reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkNEqual        reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkClosePar      reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkThen          reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkOf            reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkDo            reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkSemicolon     reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    $end            reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkEnd           reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkElse          reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkNum           reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkOpenPar       reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkId            reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkTrue          reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkFalse         reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkNot           reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkArrow         reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43
    TkPlus          shift and go to state 44
    TkMinus         shift and go to state 45
    TkGreater       shift and go to state 53
    TkGeq           shift and go to state 54
    TkLess          shift and go to state 55
    TkLeq           shift and go to state 56

  ! TkMod           [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .) ]
  ! TkMult          [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .) ]
  ! TkDiv           [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .) ]
  ! TkPlus          [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .) ]
  ! TkMinus         [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .) ]
  ! TkGreater       [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .) ]
  ! TkGeq           [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .) ]
  ! TkLess          [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .) ]
  ! TkLeq           [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .) ]
  ! TkSoForth       [ shift and go to state 46 ]
  ! TkCap           [ shift and go to state 47 ]
  ! TkAnd           [ shift and go to state 48 ]
  ! TkOr            [ shift and go to state 49 ]
  ! TkIn            [ shift and go to state 50 ]
  ! TkEqual         [ shift and go to state 51 ]
  ! TkNEqual        [ shift and go to state 52 ]


state 92

    (60) EXP_BOOL -> EXPRESION TkNEqual EXPRESION .
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

  ! shift/reduce conflict for TkMod resolved as shift
  ! shift/reduce conflict for TkMult resolved as shift
  ! shift/reduce conflict for TkDiv resolved as shift
  ! shift/reduce conflict for TkPlus resolved as shift
  ! shift/reduce conflict for TkMinus resolved as shift
  ! shift/reduce conflict for TkSoForth resolved as shift
  ! shift/reduce conflict for TkCap resolved as shift
  ! shift/reduce conflict for TkAnd resolved as shift
  ! shift/reduce conflict for TkOr resolved as shift
  ! shift/reduce conflict for TkIn resolved as shift
  ! shift/reduce conflict for TkEqual resolved as shift
  ! shift/reduce conflict for TkNEqual resolved as shift
  ! shift/reduce conflict for TkGreater resolved as shift
  ! shift/reduce conflict for TkGeq resolved as shift
  ! shift/reduce conflict for TkLess resolved as shift
  ! shift/reduce conflict for TkLeq resolved as shift
    TkAsig          reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkClosePar      reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkThen          reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkOf            reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkDo            reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkSemicolon     reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    $end            reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkEnd           reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkElse          reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkNum           reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkOpenPar       reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkId            reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkTrue          reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkFalse         reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkNot           reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkArrow         reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43
    TkPlus          shift and go to state 44
    TkMinus         shift and go to state 45
    TkSoForth       shift and go to state 46
    TkCap           shift and go to state 47
    TkAnd           shift and go to state 48
    TkOr            shift and go to state 49
    TkIn            shift and go to state 50
    TkEqual         shift and go to state 51
    TkNEqual        shift and go to state 52
    TkGreater       shift and go to state 53
    TkGeq           shift and go to state 54
    TkLess          shift and go to state 55
    TkLeq           shift and go to state 56

  ! TkMod           [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkMult          [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkDiv           [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkPlus          [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkMinus         [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkSoForth       [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkCap           [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkAnd           [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkOr            [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkIn            [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkEqual         [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkNEqual        [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkGreater       [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkGeq           [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkLess          [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkLeq           [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]


state 93

    (61) EXP_BOOL -> EXPRESION TkGreater EXPRESION .
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkSoForth       reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkCap           reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkAnd           reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkOr            reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkIn            reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkEqual         reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkNEqual        reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkGreater       reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkGeq           reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkLess          reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkLeq           reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkClosePar      reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkThen          reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkOf            reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkDo            reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkSemicolon     reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    $end            reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkEnd           reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkElse          reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkNum           reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkOpenPar       reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkId            reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkTrue          reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkFalse         reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkNot           reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkArrow         reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43
    TkPlus          shift and go to state 44
    TkMinus         shift and go to state 45

  ! TkMod           [ reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .) ]
  ! TkMult          [ reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .) ]
  ! TkDiv           [ reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .) ]
  ! TkPlus          [ reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .) ]
  ! TkMinus         [ reduce using rule 61 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .) ]
  ! TkSoForth       [ shift and go to state 46 ]
  ! TkCap           [ shift and go to state 47 ]
  ! TkAnd           [ shift and go to state 48 ]
  ! TkOr            [ shift and go to state 49 ]
  ! TkIn            [ shift and go to state 50 ]
  ! TkEqual         [ shift and go to state 51 ]
  ! TkNEqual        [ shift and go to state 52 ]
  ! TkGreater       [ shift and go to state 53 ]
  ! TkGeq           [ shift and go to state 54 ]
  ! TkLess          [ shift and go to state 55 ]
  ! TkLeq           [ shift and go to state 56 ]


state 94

    (62) EXP_BOOL -> EXPRESION TkGeq EXPRESION .
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkSoForth       reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkCap           reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkAnd           reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkOr            reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkIn            reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkEqual         reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkNEqual        reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkGreater       reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkGeq           reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkLess          reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkLeq           reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkClosePar      reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkThen          reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkOf            reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkDo            reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkSemicolon     reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    $end            reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkEnd           reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkElse          reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkNum           reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkOpenPar       reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkId            reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkTrue          reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkFalse         reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkNot           reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkArrow         reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43
    TkPlus          shift and go to state 44
    TkMinus         shift and go to state 45

  ! TkMod           [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .) ]
  ! TkMult          [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .) ]
  ! TkDiv           [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .) ]
  ! TkPlus          [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .) ]
  ! TkMinus         [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .) ]
  ! TkSoForth       [ shift and go to state 46 ]
  ! TkCap           [ shift and go to state 47 ]
  ! TkAnd           [ shift and go to state 48 ]
  ! TkOr            [ shift and go to state 49 ]
  ! TkIn            [ shift and go to state 50 ]
  ! TkEqual         [ shift and go to state 51 ]
  ! TkNEqual        [ shift and go to state 52 ]
  ! TkGreater       [ shift and go to state 53 ]
  ! TkGeq           [ shift and go to state 54 ]
  ! TkLess          [ shift and go to state 55 ]
  ! TkLeq           [ shift and go to state 56 ]


state 95

    (63) EXP_BOOL -> EXPRESION TkLess EXPRESION .
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkSoForth       reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkCap           reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkAnd           reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkOr            reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkIn            reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkEqual         reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkNEqual        reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkGreater       reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkGeq           reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkLess          reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkLeq           reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkClosePar      reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkThen          reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkOf            reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkDo            reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkSemicolon     reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    $end            reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkEnd           reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkElse          reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkNum           reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkOpenPar       reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkId            reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkTrue          reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkFalse         reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkNot           reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkArrow         reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43
    TkPlus          shift and go to state 44
    TkMinus         shift and go to state 45

  ! TkMod           [ reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .) ]
  ! TkMult          [ reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .) ]
  ! TkDiv           [ reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .) ]
  ! TkPlus          [ reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .) ]
  ! TkMinus         [ reduce using rule 63 (EXP_BOOL -> EXPRESION TkLess EXPRESION .) ]
  ! TkSoForth       [ shift and go to state 46 ]
  ! TkCap           [ shift and go to state 47 ]
  ! TkAnd           [ shift and go to state 48 ]
  ! TkOr            [ shift and go to state 49 ]
  ! TkIn            [ shift and go to state 50 ]
  ! TkEqual         [ shift and go to state 51 ]
  ! TkNEqual        [ shift and go to state 52 ]
  ! TkGreater       [ shift and go to state 53 ]
  ! TkGeq           [ shift and go to state 54 ]
  ! TkLess          [ shift and go to state 55 ]
  ! TkLeq           [ shift and go to state 56 ]


state 96

    (64) EXP_BOOL -> EXPRESION TkLeq EXPRESION .
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkSoForth       reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkCap           reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkAnd           reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkOr            reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkIn            reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkEqual         reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkNEqual        reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkGreater       reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkGeq           reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkLess          reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkLeq           reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkClosePar      reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkThen          reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkOf            reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkDo            reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkSemicolon     reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    $end            reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkEnd           reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkElse          reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkNum           reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkOpenPar       reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkId            reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkTrue          reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkFalse         reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkNot           reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkArrow         reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43
    TkPlus          shift and go to state 44
    TkMinus         shift and go to state 45

  ! TkMod           [ reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .) ]
  ! TkMult          [ reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .) ]
  ! TkDiv           [ reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .) ]
  ! TkPlus          [ reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .) ]
  ! TkMinus         [ reduce using rule 64 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .) ]
  ! TkSoForth       [ shift and go to state 46 ]
  ! TkCap           [ shift and go to state 47 ]
  ! TkAnd           [ shift and go to state 48 ]
  ! TkOr            [ shift and go to state 49 ]
  ! TkIn            [ shift and go to state 50 ]
  ! TkEqual         [ shift and go to state 51 ]
  ! TkNEqual        [ shift and go to state 52 ]
  ! TkGreater       [ shift and go to state 53 ]
  ! TkGeq           [ shift and go to state 54 ]
  ! TkLess          [ shift and go to state 55 ]
  ! TkLeq           [ shift and go to state 56 ]


state 97

    (34) LISTA_VAR -> IDENTIFICADOR TkComma . LISTA_VAR
    (33) LISTA_VAR -> . IDENTIFICADOR
    (34) LISTA_VAR -> . IDENTIFICADOR TkComma LISTA_VAR
    (17) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 34

    IDENTIFICADOR                  shift and go to state 60
    LISTA_VAR                      shift and go to state 113

state 98

    (65) CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR . TkClosePar

    TkClosePar      shift and go to state 114


state 99

    (45) EXPRESION -> TkOpenPar EXPRESION TkClosePar .

    TkAsig          reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkMod           reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkMult          reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkDiv           reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkPlus          reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkMinus         reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkSoForth       reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkCap           reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkAnd           reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkOr            reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkIn            reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkEqual         reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkNEqual        reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkGreater       reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkGeq           reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkLess          reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkLeq           reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkClosePar      reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkOf            reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkSemicolon     reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    $end            reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkEnd           reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkElse          reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkNum           reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkOpenPar       reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkId            reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkTrue          reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkFalse         reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkNot           reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkThen          reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkDo            reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkArrow         reduce using rule 45 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)


state 100

    (66) CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR . TkClosePar

    TkClosePar      shift and go to state 115


state 101

    (67) CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR . TkClosePar

    TkClosePar      shift and go to state 116


state 102

    (68) CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR . TkClosePar

    TkClosePar      shift and go to state 117


state 103

    (25) CONDICIONAL_IF -> TkIf EXP_BOOL TkThen . INSTRUCCION TkElse INSTRUCCION
    (26) CONDICIONAL_IF -> TkIf EXP_BOOL TkThen . INSTRUCCION
    (6) INSTRUCCION -> . POST
    (7) INSTRUCCION -> . ASIGNACION
    (8) INSTRUCCION -> . ENTRADA
    (9) INSTRUCCION -> . SALIDA
    (10) INSTRUCCION -> . CONVERTIR
    (11) INSTRUCCION -> . CONDICIONAL_IF
    (12) INSTRUCCION -> . CONDICIONAL_CASE
    (13) INSTRUCCION -> . ITERACION_FOR
    (14) INSTRUCCION -> . ITERACION_WHILE
    (15) INSTRUCCION -> . BLOQUE
    (16) INSTRUCCION -> . INSTRUCCION TkSemicolon INSTRUCCION
    (69) POST -> . TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
    (18) ASIGNACION -> . EXPRESION TkAsig EXPRESION
    (19) ENTRADA -> . TkRead IDENTIFICADOR
    (20) SALIDA -> . TkPrint LISTA_VAR
    (21) SALIDA -> . TkPrintln LISTA_VAR
    (22) SALIDA -> . TkPrint CADENA
    (23) SALIDA -> . TkPrintln CADENA
    (65) CONVERTIR -> . TkItoi TkOpenPar IDENTIFICADOR TkClosePar
    (66) CONVERTIR -> . TkLen TkOpenPar IDENTIFICADOR TkClosePar
    (67) CONVERTIR -> . TkMax TkOpenPar IDENTIFICADOR TkClosePar
    (68) CONVERTIR -> . TkMin TkOpenPar IDENTIFICADOR TkClosePar
    (25) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION
    (26) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen INSTRUCCION
    (27) CONDICIONAL_CASE -> . TkCase EXPRESION TkOf LISTA_CASE TkEnd
    (30) ITERACION_FOR -> . TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION
    (31) ITERACION_WHILE -> . TkWhile EXP_BOOL TkDo INSTRUCCION
    (2) BLOQUE -> . TkBegin VACIO TkEnd
    (3) BLOQUE -> . TkBegin INSTRUCCION TkEnd VACIO
    (4) BLOQUE -> . TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd
    (5) BLOQUE -> . TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkOpenBra       shift and go to state 14
    TkRead          shift and go to state 16
    TkPrint         shift and go to state 18
    TkPrintln       shift and go to state 19
    TkItoi          shift and go to state 20
    TkLen           shift and go to state 22
    TkMax           shift and go to state 23
    TkMin           shift and go to state 24
    TkIf            shift and go to state 25
    TkCase          shift and go to state 27
    TkFor           shift and go to state 28
    TkWhile         shift and go to state 29
    TkBegin         shift and go to state 30
    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXP_BOOL                       shift and go to state 26
    INSTRUCCION                    shift and go to state 118
    POST                           shift and go to state 4
    ASIGNACION                     shift and go to state 5
    ENTRADA                        shift and go to state 6
    SALIDA                         shift and go to state 7
    CONVERTIR                      shift and go to state 8
    CONDICIONAL_IF                 shift and go to state 9
    CONDICIONAL_CASE               shift and go to state 10
    ITERACION_FOR                  shift and go to state 11
    ITERACION_WHILE                shift and go to state 12
    BLOQUE                         shift and go to state 13
    EXPRESION                      shift and go to state 15
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33

state 104

    (27) CONDICIONAL_CASE -> TkCase EXPRESION TkOf . LISTA_CASE TkEnd
    (28) LISTA_CASE -> . EXPRESION TkArrow INSTRUCCION
    (29) LISTA_CASE -> . EXPRESION TkArrow INSTRUCCION LISTA_CASE
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 119
    LISTA_CASE                     shift and go to state 120
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 105

    (30) ITERACION_FOR -> TkFor IDENTIFICADOR TkIn . EXPRESION TkDo INSTRUCCION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    IDENTIFICADOR                  shift and go to state 17
    EXPRESION                      shift and go to state 121
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 106

    (31) ITERACION_WHILE -> TkWhile EXP_BOOL TkDo . INSTRUCCION
    (6) INSTRUCCION -> . POST
    (7) INSTRUCCION -> . ASIGNACION
    (8) INSTRUCCION -> . ENTRADA
    (9) INSTRUCCION -> . SALIDA
    (10) INSTRUCCION -> . CONVERTIR
    (11) INSTRUCCION -> . CONDICIONAL_IF
    (12) INSTRUCCION -> . CONDICIONAL_CASE
    (13) INSTRUCCION -> . ITERACION_FOR
    (14) INSTRUCCION -> . ITERACION_WHILE
    (15) INSTRUCCION -> . BLOQUE
    (16) INSTRUCCION -> . INSTRUCCION TkSemicolon INSTRUCCION
    (69) POST -> . TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
    (18) ASIGNACION -> . EXPRESION TkAsig EXPRESION
    (19) ENTRADA -> . TkRead IDENTIFICADOR
    (20) SALIDA -> . TkPrint LISTA_VAR
    (21) SALIDA -> . TkPrintln LISTA_VAR
    (22) SALIDA -> . TkPrint CADENA
    (23) SALIDA -> . TkPrintln CADENA
    (65) CONVERTIR -> . TkItoi TkOpenPar IDENTIFICADOR TkClosePar
    (66) CONVERTIR -> . TkLen TkOpenPar IDENTIFICADOR TkClosePar
    (67) CONVERTIR -> . TkMax TkOpenPar IDENTIFICADOR TkClosePar
    (68) CONVERTIR -> . TkMin TkOpenPar IDENTIFICADOR TkClosePar
    (25) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION
    (26) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen INSTRUCCION
    (27) CONDICIONAL_CASE -> . TkCase EXPRESION TkOf LISTA_CASE TkEnd
    (30) ITERACION_FOR -> . TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION
    (31) ITERACION_WHILE -> . TkWhile EXP_BOOL TkDo INSTRUCCION
    (2) BLOQUE -> . TkBegin VACIO TkEnd
    (3) BLOQUE -> . TkBegin INSTRUCCION TkEnd VACIO
    (4) BLOQUE -> . TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd
    (5) BLOQUE -> . TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkOpenBra       shift and go to state 14
    TkRead          shift and go to state 16
    TkPrint         shift and go to state 18
    TkPrintln       shift and go to state 19
    TkItoi          shift and go to state 20
    TkLen           shift and go to state 22
    TkMax           shift and go to state 23
    TkMin           shift and go to state 24
    TkIf            shift and go to state 25
    TkCase          shift and go to state 27
    TkFor           shift and go to state 28
    TkWhile         shift and go to state 29
    TkBegin         shift and go to state 30
    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXP_BOOL                       shift and go to state 26
    INSTRUCCION                    shift and go to state 122
    POST                           shift and go to state 4
    ASIGNACION                     shift and go to state 5
    ENTRADA                        shift and go to state 6
    SALIDA                         shift and go to state 7
    CONVERTIR                      shift and go to state 8
    CONDICIONAL_IF                 shift and go to state 9
    CONDICIONAL_CASE               shift and go to state 10
    ITERACION_FOR                  shift and go to state 11
    ITERACION_WHILE                shift and go to state 12
    BLOQUE                         shift and go to state 13
    EXPRESION                      shift and go to state 15
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33

state 107

    (2) BLOQUE -> TkBegin VACIO TkEnd .

    TkSemicolon     reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)
    $end            reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)
    TkEnd           reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)
    TkElse          reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)
    TkNum           reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)
    TkOpenPar       reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)
    TkId            reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)
    TkTrue          reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)
    TkFalse         reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)
    TkNot           reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)


state 108

    (3) BLOQUE -> TkBegin INSTRUCCION TkEnd . VACIO
    (74) VACIO -> .

    TkSemicolon     reduce using rule 74 (VACIO -> .)
    $end            reduce using rule 74 (VACIO -> .)
    TkEnd           reduce using rule 74 (VACIO -> .)
    TkElse          reduce using rule 74 (VACIO -> .)
    TkNum           reduce using rule 74 (VACIO -> .)
    TkOpenPar       reduce using rule 74 (VACIO -> .)
    TkId            reduce using rule 74 (VACIO -> .)
    TkTrue          reduce using rule 74 (VACIO -> .)
    TkFalse         reduce using rule 74 (VACIO -> .)
    TkNot           reduce using rule 74 (VACIO -> .)

    VACIO                          shift and go to state 123

state 109

    (4) BLOQUE -> TkBegin TkDeclare DECL_VAR . INSTRUCCION TkEnd
    (5) BLOQUE -> TkBegin TkDeclare DECL_VAR . INSTRUCCION TkEnd VACIO
    (6) INSTRUCCION -> . POST
    (7) INSTRUCCION -> . ASIGNACION
    (8) INSTRUCCION -> . ENTRADA
    (9) INSTRUCCION -> . SALIDA
    (10) INSTRUCCION -> . CONVERTIR
    (11) INSTRUCCION -> . CONDICIONAL_IF
    (12) INSTRUCCION -> . CONDICIONAL_CASE
    (13) INSTRUCCION -> . ITERACION_FOR
    (14) INSTRUCCION -> . ITERACION_WHILE
    (15) INSTRUCCION -> . BLOQUE
    (16) INSTRUCCION -> . INSTRUCCION TkSemicolon INSTRUCCION
    (69) POST -> . TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
    (18) ASIGNACION -> . EXPRESION TkAsig EXPRESION
    (19) ENTRADA -> . TkRead IDENTIFICADOR
    (20) SALIDA -> . TkPrint LISTA_VAR
    (21) SALIDA -> . TkPrintln LISTA_VAR
    (22) SALIDA -> . TkPrint CADENA
    (23) SALIDA -> . TkPrintln CADENA
    (65) CONVERTIR -> . TkItoi TkOpenPar IDENTIFICADOR TkClosePar
    (66) CONVERTIR -> . TkLen TkOpenPar IDENTIFICADOR TkClosePar
    (67) CONVERTIR -> . TkMax TkOpenPar IDENTIFICADOR TkClosePar
    (68) CONVERTIR -> . TkMin TkOpenPar IDENTIFICADOR TkClosePar
    (25) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION
    (26) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen INSTRUCCION
    (27) CONDICIONAL_CASE -> . TkCase EXPRESION TkOf LISTA_CASE TkEnd
    (30) ITERACION_FOR -> . TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION
    (31) ITERACION_WHILE -> . TkWhile EXP_BOOL TkDo INSTRUCCION
    (2) BLOQUE -> . TkBegin VACIO TkEnd
    (3) BLOQUE -> . TkBegin INSTRUCCION TkEnd VACIO
    (4) BLOQUE -> . TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd
    (5) BLOQUE -> . TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkOpenBra       shift and go to state 14
    TkRead          shift and go to state 16
    TkPrint         shift and go to state 18
    TkPrintln       shift and go to state 19
    TkItoi          shift and go to state 20
    TkLen           shift and go to state 22
    TkMax           shift and go to state 23
    TkMin           shift and go to state 24
    TkIf            shift and go to state 25
    TkCase          shift and go to state 27
    TkFor           shift and go to state 28
    TkWhile         shift and go to state 29
    TkBegin         shift and go to state 30
    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    INSTRUCCION                    shift and go to state 124
    POST                           shift and go to state 4
    ASIGNACION                     shift and go to state 5
    ENTRADA                        shift and go to state 6
    SALIDA                         shift and go to state 7
    CONVERTIR                      shift and go to state 8
    CONDICIONAL_IF                 shift and go to state 9
    CONDICIONAL_CASE               shift and go to state 10
    ITERACION_FOR                  shift and go to state 11
    ITERACION_WHILE                shift and go to state 12
    BLOQUE                         shift and go to state 13
    EXPRESION                      shift and go to state 15
    IDENTIFICADOR                  shift and go to state 17
    EXP_BOOL                       shift and go to state 26
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33

state 110

    (32) DECL_VAR -> LISTA_VAR . TkAs LISTA_TIPO

    TkAs            shift and go to state 125


state 111

    (69) POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR . TkCloseBra

    TkCloseBra      shift and go to state 126


state 112

    (70) EXP_CUANTIFICADOR -> TkOpenPar . TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (71) EXP_CUANTIFICADOR -> TkOpenPar . TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (72) EXP_CUANTIFICADOR -> TkOpenPar . TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> TkOpenPar . TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar

    TkForall        shift and go to state 127
    TkExists        shift and go to state 128


state 113

    (34) LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .

    TkSemicolon     reduce using rule 34 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    $end            reduce using rule 34 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    TkEnd           reduce using rule 34 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    TkElse          reduce using rule 34 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    TkNum           reduce using rule 34 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    TkOpenPar       reduce using rule 34 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    TkId            reduce using rule 34 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    TkTrue          reduce using rule 34 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    TkFalse         reduce using rule 34 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    TkNot           reduce using rule 34 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    TkAs            reduce using rule 34 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)


state 114

    (65) CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .

    TkSemicolon     reduce using rule 65 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)
    $end            reduce using rule 65 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)
    TkEnd           reduce using rule 65 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)
    TkElse          reduce using rule 65 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)
    TkNum           reduce using rule 65 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)
    TkOpenPar       reduce using rule 65 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)
    TkId            reduce using rule 65 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)
    TkTrue          reduce using rule 65 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)
    TkFalse         reduce using rule 65 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)
    TkNot           reduce using rule 65 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)


state 115

    (66) CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .

    TkSemicolon     reduce using rule 66 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)
    $end            reduce using rule 66 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)
    TkEnd           reduce using rule 66 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)
    TkElse          reduce using rule 66 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)
    TkNum           reduce using rule 66 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)
    TkOpenPar       reduce using rule 66 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)
    TkId            reduce using rule 66 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)
    TkTrue          reduce using rule 66 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)
    TkFalse         reduce using rule 66 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)
    TkNot           reduce using rule 66 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)


state 116

    (67) CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .

    TkSemicolon     reduce using rule 67 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)
    $end            reduce using rule 67 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)
    TkEnd           reduce using rule 67 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)
    TkElse          reduce using rule 67 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)
    TkNum           reduce using rule 67 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)
    TkOpenPar       reduce using rule 67 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)
    TkId            reduce using rule 67 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)
    TkTrue          reduce using rule 67 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)
    TkFalse         reduce using rule 67 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)
    TkNot           reduce using rule 67 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)


state 117

    (68) CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .

    TkSemicolon     reduce using rule 68 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)
    $end            reduce using rule 68 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)
    TkEnd           reduce using rule 68 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)
    TkElse          reduce using rule 68 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)
    TkNum           reduce using rule 68 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)
    TkOpenPar       reduce using rule 68 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)
    TkId            reduce using rule 68 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)
    TkTrue          reduce using rule 68 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)
    TkFalse         reduce using rule 68 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)
    TkNot           reduce using rule 68 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)


state 118

    (25) CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION . TkElse INSTRUCCION
    (26) CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION .
    (16) INSTRUCCION -> INSTRUCCION . TkSemicolon INSTRUCCION

  ! shift/reduce conflict for TkElse resolved as shift
  ! shift/reduce conflict for TkSemicolon resolved as shift
    TkElse          shift and go to state 129
    $end            reduce using rule 26 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION .)
    TkEnd           reduce using rule 26 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION .)
    TkNum           reduce using rule 26 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION .)
    TkOpenPar       reduce using rule 26 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION .)
    TkId            reduce using rule 26 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION .)
    TkTrue          reduce using rule 26 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION .)
    TkFalse         reduce using rule 26 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION .)
    TkNot           reduce using rule 26 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION .)
    TkSemicolon     shift and go to state 38

  ! TkSemicolon     [ reduce using rule 26 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION .) ]
  ! TkElse          [ reduce using rule 26 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION .) ]


state 119

    (28) LISTA_CASE -> EXPRESION . TkArrow INSTRUCCION
    (29) LISTA_CASE -> EXPRESION . TkArrow INSTRUCCION LISTA_CASE
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkArrow         shift and go to state 130
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43
    TkPlus          shift and go to state 44
    TkMinus         shift and go to state 45
    TkSoForth       shift and go to state 46
    TkCap           shift and go to state 47
    TkAnd           shift and go to state 48
    TkOr            shift and go to state 49
    TkIn            shift and go to state 50
    TkEqual         shift and go to state 51
    TkNEqual        shift and go to state 52
    TkGreater       shift and go to state 53
    TkGeq           shift and go to state 54
    TkLess          shift and go to state 55
    TkLeq           shift and go to state 56


state 120

    (27) CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE . TkEnd

    TkEnd           shift and go to state 131


state 121

    (30) ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION . TkDo INSTRUCCION
    (46) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (47) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (51) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (56) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (57) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkDo            shift and go to state 132
    TkMod           shift and go to state 41
    TkMult          shift and go to state 42
    TkDiv           shift and go to state 43
    TkPlus          shift and go to state 44
    TkMinus         shift and go to state 45
    TkSoForth       shift and go to state 46
    TkCap           shift and go to state 47
    TkAnd           shift and go to state 48
    TkOr            shift and go to state 49
    TkIn            shift and go to state 50
    TkEqual         shift and go to state 51
    TkNEqual        shift and go to state 52
    TkGreater       shift and go to state 53
    TkGeq           shift and go to state 54
    TkLess          shift and go to state 55
    TkLeq           shift and go to state 56


state 122

    (31) ITERACION_WHILE -> TkWhile EXP_BOOL TkDo INSTRUCCION .
    (16) INSTRUCCION -> INSTRUCCION . TkSemicolon INSTRUCCION

  ! shift/reduce conflict for TkSemicolon resolved as shift
    $end            reduce using rule 31 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo INSTRUCCION .)
    TkEnd           reduce using rule 31 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo INSTRUCCION .)
    TkElse          reduce using rule 31 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo INSTRUCCION .)
    TkNum           reduce using rule 31 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo INSTRUCCION .)
    TkOpenPar       reduce using rule 31 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo INSTRUCCION .)
    TkId            reduce using rule 31 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo INSTRUCCION .)
    TkTrue          reduce using rule 31 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo INSTRUCCION .)
    TkFalse         reduce using rule 31 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo INSTRUCCION .)
    TkNot           reduce using rule 31 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo INSTRUCCION .)
    TkSemicolon     shift and go to state 38

  ! TkSemicolon     [ reduce using rule 31 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo INSTRUCCION .) ]


state 123

    (3) BLOQUE -> TkBegin INSTRUCCION TkEnd VACIO .

    TkSemicolon     reduce using rule 3 (BLOQUE -> TkBegin INSTRUCCION TkEnd VACIO .)
    $end            reduce using rule 3 (BLOQUE -> TkBegin INSTRUCCION TkEnd VACIO .)
    TkEnd           reduce using rule 3 (BLOQUE -> TkBegin INSTRUCCION TkEnd VACIO .)
    TkElse          reduce using rule 3 (BLOQUE -> TkBegin INSTRUCCION TkEnd VACIO .)
    TkNum           reduce using rule 3 (BLOQUE -> TkBegin INSTRUCCION TkEnd VACIO .)
    TkOpenPar       reduce using rule 3 (BLOQUE -> TkBegin INSTRUCCION TkEnd VACIO .)
    TkId            reduce using rule 3 (BLOQUE -> TkBegin INSTRUCCION TkEnd VACIO .)
    TkTrue          reduce using rule 3 (BLOQUE -> TkBegin INSTRUCCION TkEnd VACIO .)
    TkFalse         reduce using rule 3 (BLOQUE -> TkBegin INSTRUCCION TkEnd VACIO .)
    TkNot           reduce using rule 3 (BLOQUE -> TkBegin INSTRUCCION TkEnd VACIO .)


state 124

    (4) BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION . TkEnd
    (5) BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION . TkEnd VACIO
    (16) INSTRUCCION -> INSTRUCCION . TkSemicolon INSTRUCCION

    TkEnd           shift and go to state 133
    TkSemicolon     shift and go to state 38


state 125

    (32) DECL_VAR -> LISTA_VAR TkAs . LISTA_TIPO
    (35) LISTA_TIPO -> . DATO
    (36) LISTA_TIPO -> . DATO TkComma LISTA_TIPO
    (37) DATO -> . TkInt
    (38) DATO -> . TkBool
    (39) DATO -> . TkInter

    TkInt           shift and go to state 136
    TkBool          shift and go to state 137
    TkInter         shift and go to state 138

    LISTA_TIPO                     shift and go to state 134
    DATO                           shift and go to state 135

state 126

    (69) POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .

    TkSemicolon     reduce using rule 69 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)
    $end            reduce using rule 69 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)
    TkEnd           reduce using rule 69 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)
    TkElse          reduce using rule 69 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)
    TkNum           reduce using rule 69 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)
    TkOpenPar       reduce using rule 69 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)
    TkId            reduce using rule 69 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)
    TkTrue          reduce using rule 69 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)
    TkFalse         reduce using rule 69 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)
    TkNot           reduce using rule 69 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)


state 127

    (70) EXP_CUANTIFICADOR -> TkOpenPar TkForall . IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (71) EXP_CUANTIFICADOR -> TkOpenPar TkForall . IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (17) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 34

    IDENTIFICADOR                  shift and go to state 139

state 128

    (72) EXP_CUANTIFICADOR -> TkOpenPar TkExists . IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> TkOpenPar TkExists . IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (17) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 34

    IDENTIFICADOR                  shift and go to state 140

state 129

    (25) CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION TkElse . INSTRUCCION
    (6) INSTRUCCION -> . POST
    (7) INSTRUCCION -> . ASIGNACION
    (8) INSTRUCCION -> . ENTRADA
    (9) INSTRUCCION -> . SALIDA
    (10) INSTRUCCION -> . CONVERTIR
    (11) INSTRUCCION -> . CONDICIONAL_IF
    (12) INSTRUCCION -> . CONDICIONAL_CASE
    (13) INSTRUCCION -> . ITERACION_FOR
    (14) INSTRUCCION -> . ITERACION_WHILE
    (15) INSTRUCCION -> . BLOQUE
    (16) INSTRUCCION -> . INSTRUCCION TkSemicolon INSTRUCCION
    (69) POST -> . TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
    (18) ASIGNACION -> . EXPRESION TkAsig EXPRESION
    (19) ENTRADA -> . TkRead IDENTIFICADOR
    (20) SALIDA -> . TkPrint LISTA_VAR
    (21) SALIDA -> . TkPrintln LISTA_VAR
    (22) SALIDA -> . TkPrint CADENA
    (23) SALIDA -> . TkPrintln CADENA
    (65) CONVERTIR -> . TkItoi TkOpenPar IDENTIFICADOR TkClosePar
    (66) CONVERTIR -> . TkLen TkOpenPar IDENTIFICADOR TkClosePar
    (67) CONVERTIR -> . TkMax TkOpenPar IDENTIFICADOR TkClosePar
    (68) CONVERTIR -> . TkMin TkOpenPar IDENTIFICADOR TkClosePar
    (25) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION
    (26) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen INSTRUCCION
    (27) CONDICIONAL_CASE -> . TkCase EXPRESION TkOf LISTA_CASE TkEnd
    (30) ITERACION_FOR -> . TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION
    (31) ITERACION_WHILE -> . TkWhile EXP_BOOL TkDo INSTRUCCION
    (2) BLOQUE -> . TkBegin VACIO TkEnd
    (3) BLOQUE -> . TkBegin INSTRUCCION TkEnd VACIO
    (4) BLOQUE -> . TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd
    (5) BLOQUE -> . TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkOpenBra       shift and go to state 14
    TkRead          shift and go to state 16
    TkPrint         shift and go to state 18
    TkPrintln       shift and go to state 19
    TkItoi          shift and go to state 20
    TkLen           shift and go to state 22
    TkMax           shift and go to state 23
    TkMin           shift and go to state 24
    TkIf            shift and go to state 25
    TkCase          shift and go to state 27
    TkFor           shift and go to state 28
    TkWhile         shift and go to state 29
    TkBegin         shift and go to state 30
    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXP_BOOL                       shift and go to state 26
    INSTRUCCION                    shift and go to state 141
    POST                           shift and go to state 4
    ASIGNACION                     shift and go to state 5
    ENTRADA                        shift and go to state 6
    SALIDA                         shift and go to state 7
    CONVERTIR                      shift and go to state 8
    CONDICIONAL_IF                 shift and go to state 9
    CONDICIONAL_CASE               shift and go to state 10
    ITERACION_FOR                  shift and go to state 11
    ITERACION_WHILE                shift and go to state 12
    BLOQUE                         shift and go to state 13
    EXPRESION                      shift and go to state 15
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33

state 130

    (28) LISTA_CASE -> EXPRESION TkArrow . INSTRUCCION
    (29) LISTA_CASE -> EXPRESION TkArrow . INSTRUCCION LISTA_CASE
    (6) INSTRUCCION -> . POST
    (7) INSTRUCCION -> . ASIGNACION
    (8) INSTRUCCION -> . ENTRADA
    (9) INSTRUCCION -> . SALIDA
    (10) INSTRUCCION -> . CONVERTIR
    (11) INSTRUCCION -> . CONDICIONAL_IF
    (12) INSTRUCCION -> . CONDICIONAL_CASE
    (13) INSTRUCCION -> . ITERACION_FOR
    (14) INSTRUCCION -> . ITERACION_WHILE
    (15) INSTRUCCION -> . BLOQUE
    (16) INSTRUCCION -> . INSTRUCCION TkSemicolon INSTRUCCION
    (69) POST -> . TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
    (18) ASIGNACION -> . EXPRESION TkAsig EXPRESION
    (19) ENTRADA -> . TkRead IDENTIFICADOR
    (20) SALIDA -> . TkPrint LISTA_VAR
    (21) SALIDA -> . TkPrintln LISTA_VAR
    (22) SALIDA -> . TkPrint CADENA
    (23) SALIDA -> . TkPrintln CADENA
    (65) CONVERTIR -> . TkItoi TkOpenPar IDENTIFICADOR TkClosePar
    (66) CONVERTIR -> . TkLen TkOpenPar IDENTIFICADOR TkClosePar
    (67) CONVERTIR -> . TkMax TkOpenPar IDENTIFICADOR TkClosePar
    (68) CONVERTIR -> . TkMin TkOpenPar IDENTIFICADOR TkClosePar
    (25) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION
    (26) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen INSTRUCCION
    (27) CONDICIONAL_CASE -> . TkCase EXPRESION TkOf LISTA_CASE TkEnd
    (30) ITERACION_FOR -> . TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION
    (31) ITERACION_WHILE -> . TkWhile EXP_BOOL TkDo INSTRUCCION
    (2) BLOQUE -> . TkBegin VACIO TkEnd
    (3) BLOQUE -> . TkBegin INSTRUCCION TkEnd VACIO
    (4) BLOQUE -> . TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd
    (5) BLOQUE -> . TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkOpenBra       shift and go to state 14
    TkRead          shift and go to state 16
    TkPrint         shift and go to state 18
    TkPrintln       shift and go to state 19
    TkItoi          shift and go to state 20
    TkLen           shift and go to state 22
    TkMax           shift and go to state 23
    TkMin           shift and go to state 24
    TkIf            shift and go to state 25
    TkCase          shift and go to state 27
    TkFor           shift and go to state 28
    TkWhile         shift and go to state 29
    TkBegin         shift and go to state 30
    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 15
    INSTRUCCION                    shift and go to state 142
    POST                           shift and go to state 4
    ASIGNACION                     shift and go to state 5
    ENTRADA                        shift and go to state 6
    SALIDA                         shift and go to state 7
    CONVERTIR                      shift and go to state 8
    CONDICIONAL_IF                 shift and go to state 9
    CONDICIONAL_CASE               shift and go to state 10
    ITERACION_FOR                  shift and go to state 11
    ITERACION_WHILE                shift and go to state 12
    BLOQUE                         shift and go to state 13
    IDENTIFICADOR                  shift and go to state 17
    EXP_BOOL                       shift and go to state 26
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33

state 131

    (27) CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .

    TkSemicolon     reduce using rule 27 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)
    $end            reduce using rule 27 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)
    TkEnd           reduce using rule 27 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)
    TkElse          reduce using rule 27 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)
    TkNum           reduce using rule 27 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)
    TkOpenPar       reduce using rule 27 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)
    TkId            reduce using rule 27 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)
    TkTrue          reduce using rule 27 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)
    TkFalse         reduce using rule 27 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)
    TkNot           reduce using rule 27 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)


state 132

    (30) ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo . INSTRUCCION
    (6) INSTRUCCION -> . POST
    (7) INSTRUCCION -> . ASIGNACION
    (8) INSTRUCCION -> . ENTRADA
    (9) INSTRUCCION -> . SALIDA
    (10) INSTRUCCION -> . CONVERTIR
    (11) INSTRUCCION -> . CONDICIONAL_IF
    (12) INSTRUCCION -> . CONDICIONAL_CASE
    (13) INSTRUCCION -> . ITERACION_FOR
    (14) INSTRUCCION -> . ITERACION_WHILE
    (15) INSTRUCCION -> . BLOQUE
    (16) INSTRUCCION -> . INSTRUCCION TkSemicolon INSTRUCCION
    (69) POST -> . TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
    (18) ASIGNACION -> . EXPRESION TkAsig EXPRESION
    (19) ENTRADA -> . TkRead IDENTIFICADOR
    (20) SALIDA -> . TkPrint LISTA_VAR
    (21) SALIDA -> . TkPrintln LISTA_VAR
    (22) SALIDA -> . TkPrint CADENA
    (23) SALIDA -> . TkPrintln CADENA
    (65) CONVERTIR -> . TkItoi TkOpenPar IDENTIFICADOR TkClosePar
    (66) CONVERTIR -> . TkLen TkOpenPar IDENTIFICADOR TkClosePar
    (67) CONVERTIR -> . TkMax TkOpenPar IDENTIFICADOR TkClosePar
    (68) CONVERTIR -> . TkMin TkOpenPar IDENTIFICADOR TkClosePar
    (25) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION
    (26) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen INSTRUCCION
    (27) CONDICIONAL_CASE -> . TkCase EXPRESION TkOf LISTA_CASE TkEnd
    (30) ITERACION_FOR -> . TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION
    (31) ITERACION_WHILE -> . TkWhile EXP_BOOL TkDo INSTRUCCION
    (2) BLOQUE -> . TkBegin VACIO TkEnd
    (3) BLOQUE -> . TkBegin INSTRUCCION TkEnd VACIO
    (4) BLOQUE -> . TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd
    (5) BLOQUE -> . TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkOpenBra       shift and go to state 14
    TkRead          shift and go to state 16
    TkPrint         shift and go to state 18
    TkPrintln       shift and go to state 19
    TkItoi          shift and go to state 20
    TkLen           shift and go to state 22
    TkMax           shift and go to state 23
    TkMin           shift and go to state 24
    TkIf            shift and go to state 25
    TkCase          shift and go to state 27
    TkFor           shift and go to state 28
    TkWhile         shift and go to state 29
    TkBegin         shift and go to state 30
    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    IDENTIFICADOR                  shift and go to state 17
    EXPRESION                      shift and go to state 15
    INSTRUCCION                    shift and go to state 143
    POST                           shift and go to state 4
    ASIGNACION                     shift and go to state 5
    ENTRADA                        shift and go to state 6
    SALIDA                         shift and go to state 7
    CONVERTIR                      shift and go to state 8
    CONDICIONAL_IF                 shift and go to state 9
    CONDICIONAL_CASE               shift and go to state 10
    ITERACION_FOR                  shift and go to state 11
    ITERACION_WHILE                shift and go to state 12
    BLOQUE                         shift and go to state 13
    EXP_BOOL                       shift and go to state 26
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33

state 133

    (4) BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .
    (5) BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd . VACIO
    (74) VACIO -> .

  ! reduce/reduce conflict for TkSemicolon resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
  ! reduce/reduce conflict for $end resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
  ! reduce/reduce conflict for TkEnd resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
  ! reduce/reduce conflict for TkElse resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
  ! reduce/reduce conflict for TkNum resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
  ! reduce/reduce conflict for TkOpenPar resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
  ! reduce/reduce conflict for TkId resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
  ! reduce/reduce conflict for TkTrue resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
  ! reduce/reduce conflict for TkFalse resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
  ! reduce/reduce conflict for TkNot resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
    TkSemicolon     reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
    $end            reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
    TkEnd           reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
    TkElse          reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
    TkNum           reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
    TkOpenPar       reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
    TkId            reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
    TkTrue          reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
    TkFalse         reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)
    TkNot           reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd .)

  ! TkSemicolon     [ reduce using rule 74 (VACIO -> .) ]
  ! $end            [ reduce using rule 74 (VACIO -> .) ]
  ! TkEnd           [ reduce using rule 74 (VACIO -> .) ]
  ! TkElse          [ reduce using rule 74 (VACIO -> .) ]
  ! TkNum           [ reduce using rule 74 (VACIO -> .) ]
  ! TkOpenPar       [ reduce using rule 74 (VACIO -> .) ]
  ! TkId            [ reduce using rule 74 (VACIO -> .) ]
  ! TkTrue          [ reduce using rule 74 (VACIO -> .) ]
  ! TkFalse         [ reduce using rule 74 (VACIO -> .) ]
  ! TkNot           [ reduce using rule 74 (VACIO -> .) ]

    VACIO                          shift and go to state 144

state 134

    (32) DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .

    TkOpenBra       reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkRead          reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkPrint         reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkPrintln       reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkItoi          reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkLen           reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkMax           reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkMin           reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkIf            reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkCase          reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkFor           reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkWhile         reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkBegin         reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkNum           reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkOpenPar       reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkId            reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkTrue          reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkFalse         reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkNot           reduce using rule 32 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)


state 135

    (35) LISTA_TIPO -> DATO .
    (36) LISTA_TIPO -> DATO . TkComma LISTA_TIPO

    TkOpenBra       reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkRead          reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkPrint         reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkPrintln       reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkItoi          reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkLen           reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkMax           reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkMin           reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkIf            reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkCase          reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkFor           reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkWhile         reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkBegin         reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkNum           reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkOpenPar       reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkId            reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkTrue          reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkFalse         reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkNot           reduce using rule 35 (LISTA_TIPO -> DATO .)
    TkComma         shift and go to state 145


state 136

    (37) DATO -> TkInt .

    TkComma         reduce using rule 37 (DATO -> TkInt .)
    TkOpenBra       reduce using rule 37 (DATO -> TkInt .)
    TkRead          reduce using rule 37 (DATO -> TkInt .)
    TkPrint         reduce using rule 37 (DATO -> TkInt .)
    TkPrintln       reduce using rule 37 (DATO -> TkInt .)
    TkItoi          reduce using rule 37 (DATO -> TkInt .)
    TkLen           reduce using rule 37 (DATO -> TkInt .)
    TkMax           reduce using rule 37 (DATO -> TkInt .)
    TkMin           reduce using rule 37 (DATO -> TkInt .)
    TkIf            reduce using rule 37 (DATO -> TkInt .)
    TkCase          reduce using rule 37 (DATO -> TkInt .)
    TkFor           reduce using rule 37 (DATO -> TkInt .)
    TkWhile         reduce using rule 37 (DATO -> TkInt .)
    TkBegin         reduce using rule 37 (DATO -> TkInt .)
    TkNum           reduce using rule 37 (DATO -> TkInt .)
    TkOpenPar       reduce using rule 37 (DATO -> TkInt .)
    TkId            reduce using rule 37 (DATO -> TkInt .)
    TkTrue          reduce using rule 37 (DATO -> TkInt .)
    TkFalse         reduce using rule 37 (DATO -> TkInt .)
    TkNot           reduce using rule 37 (DATO -> TkInt .)


state 137

    (38) DATO -> TkBool .

    TkComma         reduce using rule 38 (DATO -> TkBool .)
    TkOpenBra       reduce using rule 38 (DATO -> TkBool .)
    TkRead          reduce using rule 38 (DATO -> TkBool .)
    TkPrint         reduce using rule 38 (DATO -> TkBool .)
    TkPrintln       reduce using rule 38 (DATO -> TkBool .)
    TkItoi          reduce using rule 38 (DATO -> TkBool .)
    TkLen           reduce using rule 38 (DATO -> TkBool .)
    TkMax           reduce using rule 38 (DATO -> TkBool .)
    TkMin           reduce using rule 38 (DATO -> TkBool .)
    TkIf            reduce using rule 38 (DATO -> TkBool .)
    TkCase          reduce using rule 38 (DATO -> TkBool .)
    TkFor           reduce using rule 38 (DATO -> TkBool .)
    TkWhile         reduce using rule 38 (DATO -> TkBool .)
    TkBegin         reduce using rule 38 (DATO -> TkBool .)
    TkNum           reduce using rule 38 (DATO -> TkBool .)
    TkOpenPar       reduce using rule 38 (DATO -> TkBool .)
    TkId            reduce using rule 38 (DATO -> TkBool .)
    TkTrue          reduce using rule 38 (DATO -> TkBool .)
    TkFalse         reduce using rule 38 (DATO -> TkBool .)
    TkNot           reduce using rule 38 (DATO -> TkBool .)


state 138

    (39) DATO -> TkInter .

    TkComma         reduce using rule 39 (DATO -> TkInter .)
    TkOpenBra       reduce using rule 39 (DATO -> TkInter .)
    TkRead          reduce using rule 39 (DATO -> TkInter .)
    TkPrint         reduce using rule 39 (DATO -> TkInter .)
    TkPrintln       reduce using rule 39 (DATO -> TkInter .)
    TkItoi          reduce using rule 39 (DATO -> TkInter .)
    TkLen           reduce using rule 39 (DATO -> TkInter .)
    TkMax           reduce using rule 39 (DATO -> TkInter .)
    TkMin           reduce using rule 39 (DATO -> TkInter .)
    TkIf            reduce using rule 39 (DATO -> TkInter .)
    TkCase          reduce using rule 39 (DATO -> TkInter .)
    TkFor           reduce using rule 39 (DATO -> TkInter .)
    TkWhile         reduce using rule 39 (DATO -> TkInter .)
    TkBegin         reduce using rule 39 (DATO -> TkInter .)
    TkNum           reduce using rule 39 (DATO -> TkInter .)
    TkOpenPar       reduce using rule 39 (DATO -> TkInter .)
    TkId            reduce using rule 39 (DATO -> TkInter .)
    TkTrue          reduce using rule 39 (DATO -> TkInter .)
    TkFalse         reduce using rule 39 (DATO -> TkInter .)
    TkNot           reduce using rule 39 (DATO -> TkInter .)


state 139

    (70) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR . TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (71) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR . TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar

    TkPipe          shift and go to state 146


state 140

    (72) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR . TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR . TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar

    TkPipe          shift and go to state 147


state 141

    (25) CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION .
    (16) INSTRUCCION -> INSTRUCCION . TkSemicolon INSTRUCCION

  ! shift/reduce conflict for TkSemicolon resolved as shift
    $end            reduce using rule 25 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION .)
    TkEnd           reduce using rule 25 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION .)
    TkElse          reduce using rule 25 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION .)
    TkNum           reduce using rule 25 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION .)
    TkOpenPar       reduce using rule 25 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION .)
    TkId            reduce using rule 25 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION .)
    TkTrue          reduce using rule 25 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION .)
    TkFalse         reduce using rule 25 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION .)
    TkNot           reduce using rule 25 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION .)
    TkSemicolon     shift and go to state 38

  ! TkSemicolon     [ reduce using rule 25 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen INSTRUCCION TkElse INSTRUCCION .) ]


state 142

    (28) LISTA_CASE -> EXPRESION TkArrow INSTRUCCION .
    (29) LISTA_CASE -> EXPRESION TkArrow INSTRUCCION . LISTA_CASE
    (16) INSTRUCCION -> INSTRUCCION . TkSemicolon INSTRUCCION
    (28) LISTA_CASE -> . EXPRESION TkArrow INSTRUCCION
    (29) LISTA_CASE -> . EXPRESION TkArrow INSTRUCCION LISTA_CASE
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkEnd           reduce using rule 28 (LISTA_CASE -> EXPRESION TkArrow INSTRUCCION .)
    TkSemicolon     shift and go to state 38
    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    EXPRESION                      shift and go to state 119
    LISTA_CASE                     shift and go to state 148
    IDENTIFICADOR                  shift and go to state 17
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33
    EXP_BOOL                       shift and go to state 26

state 143

    (30) ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION .
    (16) INSTRUCCION -> INSTRUCCION . TkSemicolon INSTRUCCION

  ! shift/reduce conflict for TkSemicolon resolved as shift
    $end            reduce using rule 30 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION .)
    TkEnd           reduce using rule 30 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION .)
    TkElse          reduce using rule 30 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION .)
    TkNum           reduce using rule 30 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION .)
    TkOpenPar       reduce using rule 30 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION .)
    TkId            reduce using rule 30 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION .)
    TkTrue          reduce using rule 30 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION .)
    TkFalse         reduce using rule 30 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION .)
    TkNot           reduce using rule 30 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION .)
    TkSemicolon     shift and go to state 38

  ! TkSemicolon     [ reduce using rule 30 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo INSTRUCCION .) ]


state 144

    (5) BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO .

    TkSemicolon     reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO .)
    $end            reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO .)
    TkEnd           reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO .)
    TkElse          reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO .)
    TkNum           reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO .)
    TkOpenPar       reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO .)
    TkId            reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO .)
    TkTrue          reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO .)
    TkFalse         reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO .)
    TkNot           reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd VACIO .)


state 145

    (36) LISTA_TIPO -> DATO TkComma . LISTA_TIPO
    (35) LISTA_TIPO -> . DATO
    (36) LISTA_TIPO -> . DATO TkComma LISTA_TIPO
    (37) DATO -> . TkInt
    (38) DATO -> . TkBool
    (39) DATO -> . TkInter

    TkInt           shift and go to state 136
    TkBool          shift and go to state 137
    TkInter         shift and go to state 138

    DATO                           shift and go to state 135
    LISTA_TIPO                     shift and go to state 149

state 146

    (70) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe . IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (71) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe . IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (17) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 34

    IDENTIFICADOR                  shift and go to state 150

state 147

    (72) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe . IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe . IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (17) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 34

    IDENTIFICADOR                  shift and go to state 151

state 148

    (29) LISTA_CASE -> EXPRESION TkArrow INSTRUCCION LISTA_CASE .

    TkEnd           reduce using rule 29 (LISTA_CASE -> EXPRESION TkArrow INSTRUCCION LISTA_CASE .)


state 149

    (36) LISTA_TIPO -> DATO TkComma LISTA_TIPO .

    TkOpenBra       reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkRead          reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkPrint         reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkPrintln       reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkItoi          reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkLen           reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkMax           reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkMin           reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkIf            reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkCase          reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkFor           reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkWhile         reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkBegin         reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkNum           reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkOpenPar       reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkId            reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkTrue          reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkFalse         reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkNot           reduce using rule 36 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)


state 150

    (70) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR . TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (71) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR . TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar

    TkIn            shift and go to state 152


state 151

    (72) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR . TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR . TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar

    TkIn            shift and go to state 153


state 152

    (70) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn . IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (71) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn . IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (17) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 34

    IDENTIFICADOR                  shift and go to state 154

state 153

    (72) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn . IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn . IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (17) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 34

    IDENTIFICADOR                  shift and go to state 155

state 154

    (70) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR . TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (71) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR . TkTwoPoints EXP_BOOL TkClosePar

    TkTwoPoints     shift and go to state 156


state 155

    (72) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR . TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR . TkTwoPoints EXP_BOOL TkClosePar

    TkTwoPoints     shift and go to state 157


state 156

    (70) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints . EXP_CUANTIFICADOR TkClosePar
    (71) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints . EXP_BOOL TkClosePar
    (70) EXP_CUANTIFICADOR -> . TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (71) EXP_CUANTIFICADOR -> . TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (72) EXP_CUANTIFICADOR -> . TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> . TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION

    TkOpenPar       shift and go to state 158
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37
    TkNum           shift and go to state 31
    TkId            shift and go to state 34

    IDENTIFICADOR                  shift and go to state 17
    EXP_CUANTIFICADOR              shift and go to state 159
    EXP_BOOL                       shift and go to state 160
    EXPRESION                      shift and go to state 70
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33

state 157

    (72) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints . EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints . EXP_BOOL TkClosePar
    (70) EXP_CUANTIFICADOR -> . TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (71) EXP_CUANTIFICADOR -> . TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (72) EXP_CUANTIFICADOR -> . TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> . TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION

    TkOpenPar       shift and go to state 158
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37
    TkNum           shift and go to state 31
    TkId            shift and go to state 34

    IDENTIFICADOR                  shift and go to state 17
    EXP_CUANTIFICADOR              shift and go to state 161
    EXP_BOOL                       shift and go to state 162
    EXPRESION                      shift and go to state 70
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33

state 158

    (70) EXP_CUANTIFICADOR -> TkOpenPar . TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (71) EXP_CUANTIFICADOR -> TkOpenPar . TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (72) EXP_CUANTIFICADOR -> TkOpenPar . TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> TkOpenPar . TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (45) EXPRESION -> TkOpenPar . EXPRESION TkClosePar
    (40) EXPRESION -> . TkNum
    (41) EXPRESION -> . IDENTIFICADOR
    (42) EXPRESION -> . EXP_ENTEROS
    (43) EXPRESION -> . EXP_INTERVALOS
    (44) EXPRESION -> . EXP_BOOL
    (45) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (17) IDENTIFICADOR -> . TkId
    (46) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (47) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (48) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (51) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (52) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (53) EXP_BOOL -> . TkTrue
    (54) EXP_BOOL -> . TkFalse
    (55) EXP_BOOL -> . TkNot EXP_BOOL
    (56) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (57) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (58) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkForall        shift and go to state 127
    TkExists        shift and go to state 128
    TkNum           shift and go to state 31
    TkOpenPar       shift and go to state 21
    TkId            shift and go to state 34
    TkTrue          shift and go to state 35
    TkFalse         shift and go to state 36
    TkNot           shift and go to state 37

    IDENTIFICADOR                  shift and go to state 17
    EXP_BOOL                       shift and go to state 26
    EXPRESION                      shift and go to state 65
    EXP_ENTEROS                    shift and go to state 32
    EXP_INTERVALOS                 shift and go to state 33

state 159

    (70) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR . TkClosePar

    TkClosePar      shift and go to state 163


state 160

    (71) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL . TkClosePar
    (44) EXPRESION -> EXP_BOOL .

    TkClosePar      shift and go to state 164
    TkAnd           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkOr            reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkIn            reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkEqual         reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkNEqual        reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkGreater       reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkGeq           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkLess          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkLeq           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkMod           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkMult          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkDiv           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkPlus          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkMinus         reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkSoForth       reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkCap           reduce using rule 44 (EXPRESION -> EXP_BOOL .)


state 161

    (72) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR . TkClosePar

    TkClosePar      shift and go to state 165


state 162

    (73) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL . TkClosePar
    (44) EXPRESION -> EXP_BOOL .

    TkClosePar      shift and go to state 166
    TkAnd           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkOr            reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkIn            reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkEqual         reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkNEqual        reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkGreater       reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkGeq           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkLess          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkLeq           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkMod           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkMult          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkDiv           reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkPlus          reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkMinus         reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkSoForth       reduce using rule 44 (EXPRESION -> EXP_BOOL .)
    TkCap           reduce using rule 44 (EXPRESION -> EXP_BOOL .)


state 163

    (70) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar .

    TkCloseBra      reduce using rule 70 (EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar .)
    TkClosePar      reduce using rule 70 (EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar .)


state 164

    (71) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar .

    TkCloseBra      reduce using rule 71 (EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar .)
    TkClosePar      reduce using rule 71 (EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar .)


state 165

    (72) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar .

    TkCloseBra      reduce using rule 72 (EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar .)
    TkClosePar      reduce using rule 72 (EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar .)


state 166

    (73) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar .

    TkCloseBra      reduce using rule 73 (EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar .)
    TkClosePar      reduce using rule 73 (EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TkSemicolon in state 78 resolved as shift
WARNING: shift/reduce conflict for TkMod in state 86 resolved as shift
WARNING: shift/reduce conflict for TkMult in state 86 resolved as shift
WARNING: shift/reduce conflict for TkDiv in state 86 resolved as shift
WARNING: shift/reduce conflict for TkPlus in state 86 resolved as shift
WARNING: shift/reduce conflict for TkMinus in state 86 resolved as shift
WARNING: shift/reduce conflict for TkSoForth in state 86 resolved as shift
WARNING: shift/reduce conflict for TkCap in state 86 resolved as shift
WARNING: shift/reduce conflict for TkAnd in state 86 resolved as shift
WARNING: shift/reduce conflict for TkOr in state 86 resolved as shift
WARNING: shift/reduce conflict for TkIn in state 86 resolved as shift
WARNING: shift/reduce conflict for TkEqual in state 86 resolved as shift
WARNING: shift/reduce conflict for TkNEqual in state 86 resolved as shift
WARNING: shift/reduce conflict for TkGreater in state 86 resolved as shift
WARNING: shift/reduce conflict for TkGeq in state 86 resolved as shift
WARNING: shift/reduce conflict for TkLess in state 86 resolved as shift
WARNING: shift/reduce conflict for TkLeq in state 86 resolved as shift
WARNING: shift/reduce conflict for TkMod in state 87 resolved as shift
WARNING: shift/reduce conflict for TkMult in state 87 resolved as shift
WARNING: shift/reduce conflict for TkDiv in state 87 resolved as shift
WARNING: shift/reduce conflict for TkPlus in state 87 resolved as shift
WARNING: shift/reduce conflict for TkMinus in state 87 resolved as shift
WARNING: shift/reduce conflict for TkSoForth in state 87 resolved as shift
WARNING: shift/reduce conflict for TkCap in state 87 resolved as shift
WARNING: shift/reduce conflict for TkAnd in state 87 resolved as shift
WARNING: shift/reduce conflict for TkOr in state 87 resolved as shift
WARNING: shift/reduce conflict for TkIn in state 87 resolved as shift
WARNING: shift/reduce conflict for TkEqual in state 87 resolved as shift
WARNING: shift/reduce conflict for TkNEqual in state 87 resolved as shift
WARNING: shift/reduce conflict for TkGreater in state 87 resolved as shift
WARNING: shift/reduce conflict for TkGeq in state 87 resolved as shift
WARNING: shift/reduce conflict for TkLess in state 87 resolved as shift
WARNING: shift/reduce conflict for TkLeq in state 87 resolved as shift
WARNING: shift/reduce conflict for TkMod in state 90 resolved as shift
WARNING: shift/reduce conflict for TkMult in state 90 resolved as shift
WARNING: shift/reduce conflict for TkDiv in state 90 resolved as shift
WARNING: shift/reduce conflict for TkPlus in state 90 resolved as shift
WARNING: shift/reduce conflict for TkMinus in state 90 resolved as shift
WARNING: shift/reduce conflict for TkSoForth in state 90 resolved as shift
WARNING: shift/reduce conflict for TkCap in state 90 resolved as shift
WARNING: shift/reduce conflict for TkAnd in state 90 resolved as shift
WARNING: shift/reduce conflict for TkOr in state 90 resolved as shift
WARNING: shift/reduce conflict for TkIn in state 90 resolved as shift
WARNING: shift/reduce conflict for TkEqual in state 90 resolved as shift
WARNING: shift/reduce conflict for TkNEqual in state 90 resolved as shift
WARNING: shift/reduce conflict for TkGreater in state 90 resolved as shift
WARNING: shift/reduce conflict for TkGeq in state 90 resolved as shift
WARNING: shift/reduce conflict for TkLess in state 90 resolved as shift
WARNING: shift/reduce conflict for TkLeq in state 90 resolved as shift
WARNING: shift/reduce conflict for TkMod in state 92 resolved as shift
WARNING: shift/reduce conflict for TkMult in state 92 resolved as shift
WARNING: shift/reduce conflict for TkDiv in state 92 resolved as shift
WARNING: shift/reduce conflict for TkPlus in state 92 resolved as shift
WARNING: shift/reduce conflict for TkMinus in state 92 resolved as shift
WARNING: shift/reduce conflict for TkSoForth in state 92 resolved as shift
WARNING: shift/reduce conflict for TkCap in state 92 resolved as shift
WARNING: shift/reduce conflict for TkAnd in state 92 resolved as shift
WARNING: shift/reduce conflict for TkOr in state 92 resolved as shift
WARNING: shift/reduce conflict for TkIn in state 92 resolved as shift
WARNING: shift/reduce conflict for TkEqual in state 92 resolved as shift
WARNING: shift/reduce conflict for TkNEqual in state 92 resolved as shift
WARNING: shift/reduce conflict for TkGreater in state 92 resolved as shift
WARNING: shift/reduce conflict for TkGeq in state 92 resolved as shift
WARNING: shift/reduce conflict for TkLess in state 92 resolved as shift
WARNING: shift/reduce conflict for TkLeq in state 92 resolved as shift
WARNING: shift/reduce conflict for TkElse in state 118 resolved as shift
WARNING: shift/reduce conflict for TkSemicolon in state 118 resolved as shift
WARNING: shift/reduce conflict for TkSemicolon in state 122 resolved as shift
WARNING: shift/reduce conflict for TkSemicolon in state 141 resolved as shift
WARNING: shift/reduce conflict for TkSemicolon in state 143 resolved as shift
WARNING: reduce/reduce conflict in state 77 resolved using rule (EXPRESION -> EXP_BOOL)
WARNING: rejected rule (EXP_BOOL -> TkNot EXP_BOOL) in state 77
WARNING: reduce/reduce conflict in state 133 resolved using rule (BLOQUE -> TkBegin TkDeclare DECL_VAR INSTRUCCION TkEnd)
WARNING: rejected rule (VACIO -> <empty>) in state 133
