Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    TkComment
    TkPoint

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> TkProgram SECUENCIACION
Rule 2     BLOQUE -> TkBegin VACIO TkEnd
Rule 3     BLOQUE -> TkBegin SECUENCIACION TkEnd VACIO
Rule 4     BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd
Rule 5     BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO
Rule 6     INSTRUCCION -> POST
Rule 7     INSTRUCCION -> ASIGNACION
Rule 8     INSTRUCCION -> ENTRADA
Rule 9     INSTRUCCION -> SALIDA
Rule 10    INSTRUCCION -> CONVERTIR
Rule 11    INSTRUCCION -> CONDICIONAL_IF
Rule 12    INSTRUCCION -> CONDICIONAL_CASE
Rule 13    INSTRUCCION -> ITERACION_FOR
Rule 14    INSTRUCCION -> ITERACION_WHILE
Rule 15    INSTRUCCION -> BLOQUE
Rule 16    INSTRUCCION -> VACIO
Rule 17    SECUENCIACION -> INSTRUCCION
Rule 18    SECUENCIACION -> INSTRUCCION TkSemicolon SECUENCIACION
Rule 19    IDENTIFICADOR -> TkId
Rule 20    ASIGNACION -> EXPRESION TkAsig EXPRESION
Rule 21    ENTRADA -> TkRead IDENTIFICADOR
Rule 22    SALIDA -> TkPrint LISTA_VAR
Rule 23    SALIDA -> TkPrintln LISTA_VAR
Rule 24    SALIDA -> TkPrint CADENA
Rule 25    SALIDA -> TkPrintln CADENA
Rule 26    CADENA -> TkString
Rule 27    CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION
Rule 28    CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION
Rule 29    CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd
Rule 30    LISTA_CASE -> EXPRESION TkArrow SECUENCIACION
Rule 31    LISTA_CASE -> EXPRESION TkArrow SECUENCIACION LISTA_CASE
Rule 32    ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION
Rule 33    ITERACION_WHILE -> TkWhile EXP_BOOL TkDo SECUENCIACION
Rule 34    DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO
Rule 35    LISTA_VAR -> IDENTIFICADOR
Rule 36    LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR
Rule 37    LISTA_TIPO -> DATO
Rule 38    LISTA_TIPO -> DATO TkComma LISTA_TIPO
Rule 39    DATO -> TkInt
Rule 40    DATO -> TkBool
Rule 41    DATO -> TkInter
Rule 42    EXPRESION -> TkNum
Rule 43    EXPRESION -> IDENTIFICADOR
Rule 44    EXPRESION -> EXP_ENTEROS
Rule 45    EXPRESION -> EXP_INTERVALOS
Rule 46    EXPRESION -> EXP_BOOL
Rule 47    EXPRESION -> TkOpenPar EXPRESION TkClosePar
Rule 48    EXP_ENTEROS -> EXPRESION TkMod EXPRESION
Rule 49    EXP_ENTEROS -> EXPRESION TkMult EXPRESION
Rule 50    EXP_ENTEROS -> EXPRESION TkDiv EXPRESION
Rule 51    EXP_ENTEROS -> EXPRESION TkPlus EXPRESION
Rule 52    EXP_ENTEROS -> EXPRESION TkMinus EXPRESION
Rule 53    EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION
Rule 54    EXP_INTERVALOS -> EXPRESION TkCap EXPRESION
Rule 55    EXP_BOOL -> TkTrue
Rule 56    EXP_BOOL -> TkFalse
Rule 57    EXP_BOOL -> TkNot EXP_BOOL
Rule 58    EXP_BOOL -> EXPRESION TkAnd EXPRESION
Rule 59    EXP_BOOL -> EXPRESION TkOr EXPRESION
Rule 60    EXP_BOOL -> EXPRESION TkIn EXPRESION
Rule 61    EXP_BOOL -> EXPRESION TkEqual EXPRESION
Rule 62    EXP_BOOL -> EXPRESION TkNEqual EXPRESION
Rule 63    EXP_BOOL -> EXPRESION TkGreater EXPRESION
Rule 64    EXP_BOOL -> EXPRESION TkGeq EXPRESION
Rule 65    EXP_BOOL -> EXPRESION TkLess EXPRESION
Rule 66    EXP_BOOL -> EXPRESION TkLeq EXPRESION
Rule 67    CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar
Rule 68    CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar
Rule 69    CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar
Rule 70    CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar
Rule 71    POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
Rule 72    EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
Rule 73    EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
Rule 74    EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
Rule 75    EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
Rule 76    VACIO -> <empty>

Terminals, with rules where they appear

TkAnd                : 58
TkArrow              : 30 31
TkAs                 : 34
TkAsig               : 20
TkBegin              : 2 3 4 5
TkBool               : 40
TkCap                : 54
TkCase               : 29
TkCloseBra           : 71
TkClosePar           : 47 67 68 69 70 72 73 74 75
TkComma              : 36 38
TkComment            : 
TkDeclare            : 4 5
TkDiv                : 50
TkDo                 : 32 33
TkElse               : 27
TkEnd                : 2 3 4 5 29
TkEqual              : 61
TkExists             : 74 75
TkFalse              : 56
TkFor                : 32
TkForall             : 72 73
TkGeq                : 64
TkGreater            : 63
TkId                 : 19
TkIf                 : 27 28
TkIn                 : 32 60 72 73 74 75
TkInt                : 39
TkInter              : 41
TkItoi               : 67
TkLen                : 68
TkLeq                : 66
TkLess               : 65
TkMax                : 69
TkMin                : 70
TkMinus              : 52
TkMod                : 48
TkMult               : 49
TkNEqual             : 62
TkNot                : 57
TkNum                : 42
TkOf                 : 29
TkOpenBra            : 71
TkOpenPar            : 47 67 68 69 70 72 73 74 75
TkOr                 : 59
TkPipe               : 72 73 74 75
TkPlus               : 51
TkPoint              : 
TkPost               : 71
TkPrint              : 22 24
TkPrintln            : 23 25
TkProgram            : 1
TkRead               : 21
TkSemicolon          : 18
TkSoForth            : 53
TkString             : 26
TkThen               : 27 28
TkTrue               : 55
TkTwoPoints          : 71 72 73 74 75
TkWhile              : 33
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 7
BLOQUE               : 15
CADENA               : 24 25
CONDICIONAL_CASE     : 12
CONDICIONAL_IF       : 11
CONVERTIR            : 10
DATO                 : 37 38
DECL_VAR             : 4 5
ENTRADA              : 8
EXPRESION            : 20 20 29 30 31 32 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66
EXP_BOOL             : 27 28 33 46 57 73 75
EXP_CUANTIFICADOR    : 71 72 74
EXP_ENTEROS          : 44
EXP_INTERVALOS       : 45
IDENTIFICADOR        : 21 32 35 36 43 67 68 69 70 72 72 72 73 73 73 74 74 74 75 75 75
INSTRUCCION          : 17 18
ITERACION_FOR        : 13
ITERACION_WHILE      : 14
LISTA_CASE           : 29 31
LISTA_TIPO           : 34 38
LISTA_VAR            : 22 23 34 36
POST                 : 6
PROGRAMA             : 0
SALIDA               : 9
SECUENCIACION        : 1 3 4 5 18 27 27 28 30 31 32 33
VACIO                : 2 3 5 16

Parsing method: SLR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . TkProgram SECUENCIACION

    TkProgram       shift and go to state 2

    PROGRAMA                       shift and go to state 1

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> TkProgram . SECUENCIACION
    (17) SECUENCIACION -> . INSTRUCCION
    (18) SECUENCIACION -> . INSTRUCCION TkSemicolon SECUENCIACION
    (6) INSTRUCCION -> . POST
    (7) INSTRUCCION -> . ASIGNACION
    (8) INSTRUCCION -> . ENTRADA
    (9) INSTRUCCION -> . SALIDA
    (10) INSTRUCCION -> . CONVERTIR
    (11) INSTRUCCION -> . CONDICIONAL_IF
    (12) INSTRUCCION -> . CONDICIONAL_CASE
    (13) INSTRUCCION -> . ITERACION_FOR
    (14) INSTRUCCION -> . ITERACION_WHILE
    (15) INSTRUCCION -> . BLOQUE
    (16) INSTRUCCION -> . VACIO
    (71) POST -> . TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
    (20) ASIGNACION -> . EXPRESION TkAsig EXPRESION
    (21) ENTRADA -> . TkRead IDENTIFICADOR
    (22) SALIDA -> . TkPrint LISTA_VAR
    (23) SALIDA -> . TkPrintln LISTA_VAR
    (24) SALIDA -> . TkPrint CADENA
    (25) SALIDA -> . TkPrintln CADENA
    (67) CONVERTIR -> . TkItoi TkOpenPar IDENTIFICADOR TkClosePar
    (68) CONVERTIR -> . TkLen TkOpenPar IDENTIFICADOR TkClosePar
    (69) CONVERTIR -> . TkMax TkOpenPar IDENTIFICADOR TkClosePar
    (70) CONVERTIR -> . TkMin TkOpenPar IDENTIFICADOR TkClosePar
    (27) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION
    (28) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen SECUENCIACION
    (29) CONDICIONAL_CASE -> . TkCase EXPRESION TkOf LISTA_CASE TkEnd
    (32) ITERACION_FOR -> . TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION
    (33) ITERACION_WHILE -> . TkWhile EXP_BOOL TkDo SECUENCIACION
    (2) BLOQUE -> . TkBegin VACIO TkEnd
    (3) BLOQUE -> . TkBegin SECUENCIACION TkEnd VACIO
    (4) BLOQUE -> . TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd
    (5) BLOQUE -> . TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO
    (76) VACIO -> .
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

  ! shift/reduce conflict for TkNum resolved as shift
  ! shift/reduce conflict for TkOpenPar resolved as shift
  ! shift/reduce conflict for TkId resolved as shift
  ! shift/reduce conflict for TkTrue resolved as shift
  ! shift/reduce conflict for TkFalse resolved as shift
  ! shift/reduce conflict for TkNot resolved as shift
    TkOpenBra       shift and go to state 16
    TkRead          shift and go to state 18
    TkPrint         shift and go to state 20
    TkPrintln       shift and go to state 21
    TkItoi          shift and go to state 22
    TkLen           shift and go to state 24
    TkMax           shift and go to state 25
    TkMin           shift and go to state 26
    TkIf            shift and go to state 27
    TkCase          shift and go to state 29
    TkFor           shift and go to state 30
    TkWhile         shift and go to state 31
    TkBegin         shift and go to state 32
    TkEnd           reduce using rule 76 (VACIO -> .)
    $end            reduce using rule 76 (VACIO -> .)
    TkSemicolon     reduce using rule 76 (VACIO -> .)
    TkElse          reduce using rule 76 (VACIO -> .)
    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

  ! TkNum           [ reduce using rule 76 (VACIO -> .) ]
  ! TkId            [ reduce using rule 76 (VACIO -> .) ]
  ! TkOpenPar       [ reduce using rule 76 (VACIO -> .) ]
  ! TkTrue          [ reduce using rule 76 (VACIO -> .) ]
  ! TkFalse         [ reduce using rule 76 (VACIO -> .) ]
  ! TkNot           [ reduce using rule 76 (VACIO -> .) ]

    SECUENCIACION                  shift and go to state 3
    INSTRUCCION                    shift and go to state 4
    POST                           shift and go to state 5
    ASIGNACION                     shift and go to state 6
    ENTRADA                        shift and go to state 7
    SALIDA                         shift and go to state 8
    CONVERTIR                      shift and go to state 9
    CONDICIONAL_IF                 shift and go to state 10
    CONDICIONAL_CASE               shift and go to state 11
    ITERACION_FOR                  shift and go to state 12
    ITERACION_WHILE                shift and go to state 13
    BLOQUE                         shift and go to state 14
    VACIO                          shift and go to state 15
    EXPRESION                      shift and go to state 17
    IDENTIFICADOR                  shift and go to state 19
    EXP_BOOL                       shift and go to state 28
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35

state 3

    (1) PROGRAMA -> TkProgram SECUENCIACION .

    $end            reduce using rule 1 (PROGRAMA -> TkProgram SECUENCIACION .)


state 4

    (17) SECUENCIACION -> INSTRUCCION .
    (18) SECUENCIACION -> INSTRUCCION . TkSemicolon SECUENCIACION

  ! shift/reduce conflict for TkSemicolon resolved as shift
    $end            reduce using rule 17 (SECUENCIACION -> INSTRUCCION .)
    TkEnd           reduce using rule 17 (SECUENCIACION -> INSTRUCCION .)
    TkElse          reduce using rule 17 (SECUENCIACION -> INSTRUCCION .)
    TkNum           reduce using rule 17 (SECUENCIACION -> INSTRUCCION .)
    TkId            reduce using rule 17 (SECUENCIACION -> INSTRUCCION .)
    TkOpenPar       reduce using rule 17 (SECUENCIACION -> INSTRUCCION .)
    TkTrue          reduce using rule 17 (SECUENCIACION -> INSTRUCCION .)
    TkFalse         reduce using rule 17 (SECUENCIACION -> INSTRUCCION .)
    TkNot           reduce using rule 17 (SECUENCIACION -> INSTRUCCION .)
    TkSemicolon     shift and go to state 40

  ! TkSemicolon     [ reduce using rule 17 (SECUENCIACION -> INSTRUCCION .) ]


state 5

    (6) INSTRUCCION -> POST .

    $end            reduce using rule 6 (INSTRUCCION -> POST .)
    TkEnd           reduce using rule 6 (INSTRUCCION -> POST .)
    TkSemicolon     reduce using rule 6 (INSTRUCCION -> POST .)
    TkElse          reduce using rule 6 (INSTRUCCION -> POST .)
    TkNum           reduce using rule 6 (INSTRUCCION -> POST .)
    TkId            reduce using rule 6 (INSTRUCCION -> POST .)
    TkOpenPar       reduce using rule 6 (INSTRUCCION -> POST .)
    TkTrue          reduce using rule 6 (INSTRUCCION -> POST .)
    TkFalse         reduce using rule 6 (INSTRUCCION -> POST .)
    TkNot           reduce using rule 6 (INSTRUCCION -> POST .)


state 6

    (7) INSTRUCCION -> ASIGNACION .

    $end            reduce using rule 7 (INSTRUCCION -> ASIGNACION .)
    TkEnd           reduce using rule 7 (INSTRUCCION -> ASIGNACION .)
    TkSemicolon     reduce using rule 7 (INSTRUCCION -> ASIGNACION .)
    TkElse          reduce using rule 7 (INSTRUCCION -> ASIGNACION .)
    TkNum           reduce using rule 7 (INSTRUCCION -> ASIGNACION .)
    TkId            reduce using rule 7 (INSTRUCCION -> ASIGNACION .)
    TkOpenPar       reduce using rule 7 (INSTRUCCION -> ASIGNACION .)
    TkTrue          reduce using rule 7 (INSTRUCCION -> ASIGNACION .)
    TkFalse         reduce using rule 7 (INSTRUCCION -> ASIGNACION .)
    TkNot           reduce using rule 7 (INSTRUCCION -> ASIGNACION .)


state 7

    (8) INSTRUCCION -> ENTRADA .

    $end            reduce using rule 8 (INSTRUCCION -> ENTRADA .)
    TkEnd           reduce using rule 8 (INSTRUCCION -> ENTRADA .)
    TkSemicolon     reduce using rule 8 (INSTRUCCION -> ENTRADA .)
    TkElse          reduce using rule 8 (INSTRUCCION -> ENTRADA .)
    TkNum           reduce using rule 8 (INSTRUCCION -> ENTRADA .)
    TkId            reduce using rule 8 (INSTRUCCION -> ENTRADA .)
    TkOpenPar       reduce using rule 8 (INSTRUCCION -> ENTRADA .)
    TkTrue          reduce using rule 8 (INSTRUCCION -> ENTRADA .)
    TkFalse         reduce using rule 8 (INSTRUCCION -> ENTRADA .)
    TkNot           reduce using rule 8 (INSTRUCCION -> ENTRADA .)


state 8

    (9) INSTRUCCION -> SALIDA .

    $end            reduce using rule 9 (INSTRUCCION -> SALIDA .)
    TkEnd           reduce using rule 9 (INSTRUCCION -> SALIDA .)
    TkSemicolon     reduce using rule 9 (INSTRUCCION -> SALIDA .)
    TkElse          reduce using rule 9 (INSTRUCCION -> SALIDA .)
    TkNum           reduce using rule 9 (INSTRUCCION -> SALIDA .)
    TkId            reduce using rule 9 (INSTRUCCION -> SALIDA .)
    TkOpenPar       reduce using rule 9 (INSTRUCCION -> SALIDA .)
    TkTrue          reduce using rule 9 (INSTRUCCION -> SALIDA .)
    TkFalse         reduce using rule 9 (INSTRUCCION -> SALIDA .)
    TkNot           reduce using rule 9 (INSTRUCCION -> SALIDA .)


state 9

    (10) INSTRUCCION -> CONVERTIR .

    $end            reduce using rule 10 (INSTRUCCION -> CONVERTIR .)
    TkEnd           reduce using rule 10 (INSTRUCCION -> CONVERTIR .)
    TkSemicolon     reduce using rule 10 (INSTRUCCION -> CONVERTIR .)
    TkElse          reduce using rule 10 (INSTRUCCION -> CONVERTIR .)
    TkNum           reduce using rule 10 (INSTRUCCION -> CONVERTIR .)
    TkId            reduce using rule 10 (INSTRUCCION -> CONVERTIR .)
    TkOpenPar       reduce using rule 10 (INSTRUCCION -> CONVERTIR .)
    TkTrue          reduce using rule 10 (INSTRUCCION -> CONVERTIR .)
    TkFalse         reduce using rule 10 (INSTRUCCION -> CONVERTIR .)
    TkNot           reduce using rule 10 (INSTRUCCION -> CONVERTIR .)


state 10

    (11) INSTRUCCION -> CONDICIONAL_IF .

    $end            reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)
    TkEnd           reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)
    TkSemicolon     reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)
    TkElse          reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)
    TkNum           reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)
    TkId            reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)
    TkOpenPar       reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)
    TkTrue          reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)
    TkFalse         reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)
    TkNot           reduce using rule 11 (INSTRUCCION -> CONDICIONAL_IF .)


state 11

    (12) INSTRUCCION -> CONDICIONAL_CASE .

    $end            reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)
    TkEnd           reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)
    TkSemicolon     reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)
    TkElse          reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)
    TkNum           reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)
    TkId            reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)
    TkOpenPar       reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)
    TkTrue          reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)
    TkFalse         reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)
    TkNot           reduce using rule 12 (INSTRUCCION -> CONDICIONAL_CASE .)


state 12

    (13) INSTRUCCION -> ITERACION_FOR .

    $end            reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)
    TkEnd           reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)
    TkSemicolon     reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)
    TkElse          reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)
    TkNum           reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)
    TkId            reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)
    TkOpenPar       reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)
    TkTrue          reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)
    TkFalse         reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)
    TkNot           reduce using rule 13 (INSTRUCCION -> ITERACION_FOR .)


state 13

    (14) INSTRUCCION -> ITERACION_WHILE .

    $end            reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)
    TkEnd           reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)
    TkSemicolon     reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)
    TkElse          reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)
    TkNum           reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)
    TkId            reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)
    TkOpenPar       reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)
    TkTrue          reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)
    TkFalse         reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)
    TkNot           reduce using rule 14 (INSTRUCCION -> ITERACION_WHILE .)


state 14

    (15) INSTRUCCION -> BLOQUE .

    $end            reduce using rule 15 (INSTRUCCION -> BLOQUE .)
    TkEnd           reduce using rule 15 (INSTRUCCION -> BLOQUE .)
    TkSemicolon     reduce using rule 15 (INSTRUCCION -> BLOQUE .)
    TkElse          reduce using rule 15 (INSTRUCCION -> BLOQUE .)
    TkNum           reduce using rule 15 (INSTRUCCION -> BLOQUE .)
    TkId            reduce using rule 15 (INSTRUCCION -> BLOQUE .)
    TkOpenPar       reduce using rule 15 (INSTRUCCION -> BLOQUE .)
    TkTrue          reduce using rule 15 (INSTRUCCION -> BLOQUE .)
    TkFalse         reduce using rule 15 (INSTRUCCION -> BLOQUE .)
    TkNot           reduce using rule 15 (INSTRUCCION -> BLOQUE .)


state 15

    (16) INSTRUCCION -> VACIO .

    $end            reduce using rule 16 (INSTRUCCION -> VACIO .)
    TkEnd           reduce using rule 16 (INSTRUCCION -> VACIO .)
    TkSemicolon     reduce using rule 16 (INSTRUCCION -> VACIO .)
    TkElse          reduce using rule 16 (INSTRUCCION -> VACIO .)
    TkNum           reduce using rule 16 (INSTRUCCION -> VACIO .)
    TkId            reduce using rule 16 (INSTRUCCION -> VACIO .)
    TkOpenPar       reduce using rule 16 (INSTRUCCION -> VACIO .)
    TkTrue          reduce using rule 16 (INSTRUCCION -> VACIO .)
    TkFalse         reduce using rule 16 (INSTRUCCION -> VACIO .)
    TkNot           reduce using rule 16 (INSTRUCCION -> VACIO .)


state 16

    (71) POST -> TkOpenBra . TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra

    TkPost          shift and go to state 41


state 17

    (20) ASIGNACION -> EXPRESION . TkAsig EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          shift and go to state 42
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45
    TkPlus          shift and go to state 46
    TkMinus         shift and go to state 47
    TkSoForth       shift and go to state 48
    TkCap           shift and go to state 49
    TkAnd           shift and go to state 50
    TkOr            shift and go to state 51
    TkIn            shift and go to state 52
    TkEqual         shift and go to state 53
    TkNEqual        shift and go to state 54
    TkGreater       shift and go to state 55
    TkGeq           shift and go to state 56
    TkLess          shift and go to state 57
    TkLeq           shift and go to state 58


state 18

    (21) ENTRADA -> TkRead . IDENTIFICADOR
    (19) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 36

    IDENTIFICADOR                  shift and go to state 59

state 19

    (43) EXPRESION -> IDENTIFICADOR .

    TkAsig          reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkOf            reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkArrow         reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkDo            reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkClosePar      reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkMod           reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkMult          reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkDiv           reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkPlus          reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkMinus         reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkSoForth       reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkCap           reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkAnd           reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkThen          reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkOr            reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkIn            reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkEqual         reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkNEqual        reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkGreater       reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkGeq           reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkLess          reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkLeq           reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    $end            reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkEnd           reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkSemicolon     reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkElse          reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkNum           reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkId            reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkOpenPar       reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkTrue          reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkFalse         reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)
    TkNot           reduce using rule 43 (EXPRESION -> IDENTIFICADOR .)


state 20

    (22) SALIDA -> TkPrint . LISTA_VAR
    (24) SALIDA -> TkPrint . CADENA
    (35) LISTA_VAR -> . IDENTIFICADOR
    (36) LISTA_VAR -> . IDENTIFICADOR TkComma LISTA_VAR
    (26) CADENA -> . TkString
    (19) IDENTIFICADOR -> . TkId

    TkString        shift and go to state 63
    TkId            shift and go to state 36

    LISTA_VAR                      shift and go to state 60
    CADENA                         shift and go to state 61
    IDENTIFICADOR                  shift and go to state 62

state 21

    (23) SALIDA -> TkPrintln . LISTA_VAR
    (25) SALIDA -> TkPrintln . CADENA
    (35) LISTA_VAR -> . IDENTIFICADOR
    (36) LISTA_VAR -> . IDENTIFICADOR TkComma LISTA_VAR
    (26) CADENA -> . TkString
    (19) IDENTIFICADOR -> . TkId

    TkString        shift and go to state 63
    TkId            shift and go to state 36

    LISTA_VAR                      shift and go to state 64
    CADENA                         shift and go to state 65
    IDENTIFICADOR                  shift and go to state 62

state 22

    (67) CONVERTIR -> TkItoi . TkOpenPar IDENTIFICADOR TkClosePar

    TkOpenPar       shift and go to state 66


state 23

    (47) EXPRESION -> TkOpenPar . EXPRESION TkClosePar
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 67
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 24

    (68) CONVERTIR -> TkLen . TkOpenPar IDENTIFICADOR TkClosePar

    TkOpenPar       shift and go to state 68


state 25

    (69) CONVERTIR -> TkMax . TkOpenPar IDENTIFICADOR TkClosePar

    TkOpenPar       shift and go to state 69


state 26

    (70) CONVERTIR -> TkMin . TkOpenPar IDENTIFICADOR TkClosePar

    TkOpenPar       shift and go to state 70


state 27

    (27) CONDICIONAL_IF -> TkIf . EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION
    (28) CONDICIONAL_IF -> TkIf . EXP_BOOL TkThen SECUENCIACION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION

    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39
    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36

    EXP_BOOL                       shift and go to state 71
    EXPRESION                      shift and go to state 72
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35

state 28

    (46) EXPRESION -> EXP_BOOL .

    TkAsig          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkOf            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkArrow         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkDo            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkClosePar      reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkMod           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkMult          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkDiv           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkPlus          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkMinus         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkSoForth       reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkCap           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkAnd           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkThen          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkOr            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkIn            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkEqual         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkNEqual        reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkGreater       reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkGeq           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkLess          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkLeq           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    $end            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkEnd           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkSemicolon     reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkElse          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkNum           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkId            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkOpenPar       reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkTrue          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkFalse         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkNot           reduce using rule 46 (EXPRESION -> EXP_BOOL .)


state 29

    (29) CONDICIONAL_CASE -> TkCase . EXPRESION TkOf LISTA_CASE TkEnd
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 73
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 30

    (32) ITERACION_FOR -> TkFor . IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION
    (19) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 36

    IDENTIFICADOR                  shift and go to state 74

state 31

    (33) ITERACION_WHILE -> TkWhile . EXP_BOOL TkDo SECUENCIACION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION

    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39
    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36

    EXP_BOOL                       shift and go to state 75
    EXPRESION                      shift and go to state 72
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35

state 32

    (2) BLOQUE -> TkBegin . VACIO TkEnd
    (3) BLOQUE -> TkBegin . SECUENCIACION TkEnd VACIO
    (4) BLOQUE -> TkBegin . TkDeclare DECL_VAR SECUENCIACION TkEnd
    (5) BLOQUE -> TkBegin . TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO
    (76) VACIO -> .
    (17) SECUENCIACION -> . INSTRUCCION
    (18) SECUENCIACION -> . INSTRUCCION TkSemicolon SECUENCIACION
    (6) INSTRUCCION -> . POST
    (7) INSTRUCCION -> . ASIGNACION
    (8) INSTRUCCION -> . ENTRADA
    (9) INSTRUCCION -> . SALIDA
    (10) INSTRUCCION -> . CONVERTIR
    (11) INSTRUCCION -> . CONDICIONAL_IF
    (12) INSTRUCCION -> . CONDICIONAL_CASE
    (13) INSTRUCCION -> . ITERACION_FOR
    (14) INSTRUCCION -> . ITERACION_WHILE
    (15) INSTRUCCION -> . BLOQUE
    (16) INSTRUCCION -> . VACIO
    (71) POST -> . TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
    (20) ASIGNACION -> . EXPRESION TkAsig EXPRESION
    (21) ENTRADA -> . TkRead IDENTIFICADOR
    (22) SALIDA -> . TkPrint LISTA_VAR
    (23) SALIDA -> . TkPrintln LISTA_VAR
    (24) SALIDA -> . TkPrint CADENA
    (25) SALIDA -> . TkPrintln CADENA
    (67) CONVERTIR -> . TkItoi TkOpenPar IDENTIFICADOR TkClosePar
    (68) CONVERTIR -> . TkLen TkOpenPar IDENTIFICADOR TkClosePar
    (69) CONVERTIR -> . TkMax TkOpenPar IDENTIFICADOR TkClosePar
    (70) CONVERTIR -> . TkMin TkOpenPar IDENTIFICADOR TkClosePar
    (27) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION
    (28) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen SECUENCIACION
    (29) CONDICIONAL_CASE -> . TkCase EXPRESION TkOf LISTA_CASE TkEnd
    (32) ITERACION_FOR -> . TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION
    (33) ITERACION_WHILE -> . TkWhile EXP_BOOL TkDo SECUENCIACION
    (2) BLOQUE -> . TkBegin VACIO TkEnd
    (3) BLOQUE -> . TkBegin SECUENCIACION TkEnd VACIO
    (4) BLOQUE -> . TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd
    (5) BLOQUE -> . TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

  ! shift/reduce conflict for TkNum resolved as shift
  ! shift/reduce conflict for TkOpenPar resolved as shift
  ! shift/reduce conflict for TkId resolved as shift
  ! shift/reduce conflict for TkTrue resolved as shift
  ! shift/reduce conflict for TkFalse resolved as shift
  ! shift/reduce conflict for TkNot resolved as shift
    TkDeclare       shift and go to state 78
    TkEnd           reduce using rule 76 (VACIO -> .)
    $end            reduce using rule 76 (VACIO -> .)
    TkSemicolon     reduce using rule 76 (VACIO -> .)
    TkElse          reduce using rule 76 (VACIO -> .)
    TkOpenBra       shift and go to state 16
    TkRead          shift and go to state 18
    TkPrint         shift and go to state 20
    TkPrintln       shift and go to state 21
    TkItoi          shift and go to state 22
    TkLen           shift and go to state 24
    TkMax           shift and go to state 25
    TkMin           shift and go to state 26
    TkIf            shift and go to state 27
    TkCase          shift and go to state 29
    TkFor           shift and go to state 30
    TkWhile         shift and go to state 31
    TkBegin         shift and go to state 32
    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

  ! TkNum           [ reduce using rule 76 (VACIO -> .) ]
  ! TkId            [ reduce using rule 76 (VACIO -> .) ]
  ! TkOpenPar       [ reduce using rule 76 (VACIO -> .) ]
  ! TkTrue          [ reduce using rule 76 (VACIO -> .) ]
  ! TkFalse         [ reduce using rule 76 (VACIO -> .) ]
  ! TkNot           [ reduce using rule 76 (VACIO -> .) ]

    VACIO                          shift and go to state 76
    SECUENCIACION                  shift and go to state 77
    INSTRUCCION                    shift and go to state 4
    POST                           shift and go to state 5
    ASIGNACION                     shift and go to state 6
    ENTRADA                        shift and go to state 7
    SALIDA                         shift and go to state 8
    CONVERTIR                      shift and go to state 9
    CONDICIONAL_IF                 shift and go to state 10
    CONDICIONAL_CASE               shift and go to state 11
    ITERACION_FOR                  shift and go to state 12
    ITERACION_WHILE                shift and go to state 13
    BLOQUE                         shift and go to state 14
    EXPRESION                      shift and go to state 17
    IDENTIFICADOR                  shift and go to state 19
    EXP_BOOL                       shift and go to state 28
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35

state 33

    (42) EXPRESION -> TkNum .

    TkAsig          reduce using rule 42 (EXPRESION -> TkNum .)
    TkOf            reduce using rule 42 (EXPRESION -> TkNum .)
    TkArrow         reduce using rule 42 (EXPRESION -> TkNum .)
    TkDo            reduce using rule 42 (EXPRESION -> TkNum .)
    TkClosePar      reduce using rule 42 (EXPRESION -> TkNum .)
    TkMod           reduce using rule 42 (EXPRESION -> TkNum .)
    TkMult          reduce using rule 42 (EXPRESION -> TkNum .)
    TkDiv           reduce using rule 42 (EXPRESION -> TkNum .)
    TkPlus          reduce using rule 42 (EXPRESION -> TkNum .)
    TkMinus         reduce using rule 42 (EXPRESION -> TkNum .)
    TkSoForth       reduce using rule 42 (EXPRESION -> TkNum .)
    TkCap           reduce using rule 42 (EXPRESION -> TkNum .)
    TkAnd           reduce using rule 42 (EXPRESION -> TkNum .)
    TkThen          reduce using rule 42 (EXPRESION -> TkNum .)
    TkOr            reduce using rule 42 (EXPRESION -> TkNum .)
    TkIn            reduce using rule 42 (EXPRESION -> TkNum .)
    TkEqual         reduce using rule 42 (EXPRESION -> TkNum .)
    TkNEqual        reduce using rule 42 (EXPRESION -> TkNum .)
    TkGreater       reduce using rule 42 (EXPRESION -> TkNum .)
    TkGeq           reduce using rule 42 (EXPRESION -> TkNum .)
    TkLess          reduce using rule 42 (EXPRESION -> TkNum .)
    TkLeq           reduce using rule 42 (EXPRESION -> TkNum .)
    $end            reduce using rule 42 (EXPRESION -> TkNum .)
    TkEnd           reduce using rule 42 (EXPRESION -> TkNum .)
    TkSemicolon     reduce using rule 42 (EXPRESION -> TkNum .)
    TkElse          reduce using rule 42 (EXPRESION -> TkNum .)
    TkNum           reduce using rule 42 (EXPRESION -> TkNum .)
    TkId            reduce using rule 42 (EXPRESION -> TkNum .)
    TkOpenPar       reduce using rule 42 (EXPRESION -> TkNum .)
    TkTrue          reduce using rule 42 (EXPRESION -> TkNum .)
    TkFalse         reduce using rule 42 (EXPRESION -> TkNum .)
    TkNot           reduce using rule 42 (EXPRESION -> TkNum .)


state 34

    (44) EXPRESION -> EXP_ENTEROS .

    TkAsig          reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkOf            reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkArrow         reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkDo            reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkClosePar      reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkMod           reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkMult          reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkDiv           reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkPlus          reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkMinus         reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkSoForth       reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkCap           reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkAnd           reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkThen          reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkOr            reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkIn            reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkEqual         reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkNEqual        reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkGreater       reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkGeq           reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkLess          reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkLeq           reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    $end            reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkEnd           reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkSemicolon     reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkElse          reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkNum           reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkId            reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkOpenPar       reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkTrue          reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkFalse         reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)
    TkNot           reduce using rule 44 (EXPRESION -> EXP_ENTEROS .)


state 35

    (45) EXPRESION -> EXP_INTERVALOS .

    TkAsig          reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkOf            reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkArrow         reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkDo            reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkClosePar      reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkMod           reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkMult          reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkDiv           reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkPlus          reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkMinus         reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkSoForth       reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkCap           reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkAnd           reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkThen          reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkOr            reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkIn            reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkEqual         reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkNEqual        reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkGreater       reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkGeq           reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkLess          reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkLeq           reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    $end            reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkEnd           reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkSemicolon     reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkElse          reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkNum           reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkId            reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkOpenPar       reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkTrue          reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkFalse         reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)
    TkNot           reduce using rule 45 (EXPRESION -> EXP_INTERVALOS .)


state 36

    (19) IDENTIFICADOR -> TkId .

    TkIn            reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkAs            reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkComma         reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkAsig          reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkOf            reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkArrow         reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkDo            reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkClosePar      reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkPipe          reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkTwoPoints     reduce using rule 19 (IDENTIFICADOR -> TkId .)
    $end            reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkEnd           reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkSemicolon     reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkMod           reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkMult          reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkDiv           reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkPlus          reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkMinus         reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkSoForth       reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkCap           reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkAnd           reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkThen          reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkOr            reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkEqual         reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkNEqual        reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkGreater       reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkGeq           reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkLess          reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkLeq           reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkElse          reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkNum           reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkId            reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkOpenPar       reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkTrue          reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkFalse         reduce using rule 19 (IDENTIFICADOR -> TkId .)
    TkNot           reduce using rule 19 (IDENTIFICADOR -> TkId .)


state 37

    (55) EXP_BOOL -> TkTrue .

    TkThen          reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkDo            reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkAsig          reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkOf            reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkArrow         reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkClosePar      reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkMod           reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkMult          reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkDiv           reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkPlus          reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkMinus         reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkSoForth       reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkCap           reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkAnd           reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkOr            reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkIn            reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkEqual         reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkNEqual        reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkGreater       reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkGeq           reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkLess          reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkLeq           reduce using rule 55 (EXP_BOOL -> TkTrue .)
    $end            reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkEnd           reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkSemicolon     reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkElse          reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkNum           reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkId            reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkOpenPar       reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkTrue          reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkFalse         reduce using rule 55 (EXP_BOOL -> TkTrue .)
    TkNot           reduce using rule 55 (EXP_BOOL -> TkTrue .)


state 38

    (56) EXP_BOOL -> TkFalse .

    TkThen          reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkDo            reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkAsig          reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkOf            reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkArrow         reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkClosePar      reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkMod           reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkMult          reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkDiv           reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkPlus          reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkMinus         reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkSoForth       reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkCap           reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkAnd           reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkOr            reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkIn            reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkEqual         reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkNEqual        reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkGreater       reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkGeq           reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkLess          reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkLeq           reduce using rule 56 (EXP_BOOL -> TkFalse .)
    $end            reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkEnd           reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkSemicolon     reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkElse          reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkNum           reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkId            reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkOpenPar       reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkTrue          reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkFalse         reduce using rule 56 (EXP_BOOL -> TkFalse .)
    TkNot           reduce using rule 56 (EXP_BOOL -> TkFalse .)


state 39

    (57) EXP_BOOL -> TkNot . EXP_BOOL
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION

    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39
    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36

    EXP_BOOL                       shift and go to state 79
    EXPRESION                      shift and go to state 72
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35

state 40

    (18) SECUENCIACION -> INSTRUCCION TkSemicolon . SECUENCIACION
    (17) SECUENCIACION -> . INSTRUCCION
    (18) SECUENCIACION -> . INSTRUCCION TkSemicolon SECUENCIACION
    (6) INSTRUCCION -> . POST
    (7) INSTRUCCION -> . ASIGNACION
    (8) INSTRUCCION -> . ENTRADA
    (9) INSTRUCCION -> . SALIDA
    (10) INSTRUCCION -> . CONVERTIR
    (11) INSTRUCCION -> . CONDICIONAL_IF
    (12) INSTRUCCION -> . CONDICIONAL_CASE
    (13) INSTRUCCION -> . ITERACION_FOR
    (14) INSTRUCCION -> . ITERACION_WHILE
    (15) INSTRUCCION -> . BLOQUE
    (16) INSTRUCCION -> . VACIO
    (71) POST -> . TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
    (20) ASIGNACION -> . EXPRESION TkAsig EXPRESION
    (21) ENTRADA -> . TkRead IDENTIFICADOR
    (22) SALIDA -> . TkPrint LISTA_VAR
    (23) SALIDA -> . TkPrintln LISTA_VAR
    (24) SALIDA -> . TkPrint CADENA
    (25) SALIDA -> . TkPrintln CADENA
    (67) CONVERTIR -> . TkItoi TkOpenPar IDENTIFICADOR TkClosePar
    (68) CONVERTIR -> . TkLen TkOpenPar IDENTIFICADOR TkClosePar
    (69) CONVERTIR -> . TkMax TkOpenPar IDENTIFICADOR TkClosePar
    (70) CONVERTIR -> . TkMin TkOpenPar IDENTIFICADOR TkClosePar
    (27) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION
    (28) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen SECUENCIACION
    (29) CONDICIONAL_CASE -> . TkCase EXPRESION TkOf LISTA_CASE TkEnd
    (32) ITERACION_FOR -> . TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION
    (33) ITERACION_WHILE -> . TkWhile EXP_BOOL TkDo SECUENCIACION
    (2) BLOQUE -> . TkBegin VACIO TkEnd
    (3) BLOQUE -> . TkBegin SECUENCIACION TkEnd VACIO
    (4) BLOQUE -> . TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd
    (5) BLOQUE -> . TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO
    (76) VACIO -> .
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

  ! shift/reduce conflict for TkNum resolved as shift
  ! shift/reduce conflict for TkOpenPar resolved as shift
  ! shift/reduce conflict for TkId resolved as shift
  ! shift/reduce conflict for TkTrue resolved as shift
  ! shift/reduce conflict for TkFalse resolved as shift
  ! shift/reduce conflict for TkNot resolved as shift
    TkOpenBra       shift and go to state 16
    TkRead          shift and go to state 18
    TkPrint         shift and go to state 20
    TkPrintln       shift and go to state 21
    TkItoi          shift and go to state 22
    TkLen           shift and go to state 24
    TkMax           shift and go to state 25
    TkMin           shift and go to state 26
    TkIf            shift and go to state 27
    TkCase          shift and go to state 29
    TkFor           shift and go to state 30
    TkWhile         shift and go to state 31
    TkBegin         shift and go to state 32
    TkEnd           reduce using rule 76 (VACIO -> .)
    $end            reduce using rule 76 (VACIO -> .)
    TkSemicolon     reduce using rule 76 (VACIO -> .)
    TkElse          reduce using rule 76 (VACIO -> .)
    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

  ! TkNum           [ reduce using rule 76 (VACIO -> .) ]
  ! TkId            [ reduce using rule 76 (VACIO -> .) ]
  ! TkOpenPar       [ reduce using rule 76 (VACIO -> .) ]
  ! TkTrue          [ reduce using rule 76 (VACIO -> .) ]
  ! TkFalse         [ reduce using rule 76 (VACIO -> .) ]
  ! TkNot           [ reduce using rule 76 (VACIO -> .) ]

    INSTRUCCION                    shift and go to state 4
    SECUENCIACION                  shift and go to state 80
    POST                           shift and go to state 5
    ASIGNACION                     shift and go to state 6
    ENTRADA                        shift and go to state 7
    SALIDA                         shift and go to state 8
    CONVERTIR                      shift and go to state 9
    CONDICIONAL_IF                 shift and go to state 10
    CONDICIONAL_CASE               shift and go to state 11
    ITERACION_FOR                  shift and go to state 12
    ITERACION_WHILE                shift and go to state 13
    BLOQUE                         shift and go to state 14
    VACIO                          shift and go to state 15
    EXPRESION                      shift and go to state 17
    IDENTIFICADOR                  shift and go to state 19
    EXP_BOOL                       shift and go to state 28
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35

state 41

    (71) POST -> TkOpenBra TkPost . TkTwoPoints EXP_CUANTIFICADOR TkCloseBra

    TkTwoPoints     shift and go to state 81


state 42

    (20) ASIGNACION -> EXPRESION TkAsig . EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 82
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 43

    (48) EXP_ENTEROS -> EXPRESION TkMod . EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 83
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 44

    (49) EXP_ENTEROS -> EXPRESION TkMult . EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 84
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 45

    (50) EXP_ENTEROS -> EXPRESION TkDiv . EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 85
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 46

    (51) EXP_ENTEROS -> EXPRESION TkPlus . EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 86
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 47

    (52) EXP_ENTEROS -> EXPRESION TkMinus . EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 87
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 48

    (53) EXP_INTERVALOS -> EXPRESION TkSoForth . EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 88
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 49

    (54) EXP_INTERVALOS -> EXPRESION TkCap . EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 89
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 50

    (58) EXP_BOOL -> EXPRESION TkAnd . EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 90
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 51

    (59) EXP_BOOL -> EXPRESION TkOr . EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 91
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 52

    (60) EXP_BOOL -> EXPRESION TkIn . EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 92
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 53

    (61) EXP_BOOL -> EXPRESION TkEqual . EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 93
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 54

    (62) EXP_BOOL -> EXPRESION TkNEqual . EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 94
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 55

    (63) EXP_BOOL -> EXPRESION TkGreater . EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 95
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 56

    (64) EXP_BOOL -> EXPRESION TkGeq . EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 96
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 57

    (65) EXP_BOOL -> EXPRESION TkLess . EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 97
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 58

    (66) EXP_BOOL -> EXPRESION TkLeq . EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 98
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 59

    (21) ENTRADA -> TkRead IDENTIFICADOR .

    $end            reduce using rule 21 (ENTRADA -> TkRead IDENTIFICADOR .)
    TkEnd           reduce using rule 21 (ENTRADA -> TkRead IDENTIFICADOR .)
    TkSemicolon     reduce using rule 21 (ENTRADA -> TkRead IDENTIFICADOR .)
    TkElse          reduce using rule 21 (ENTRADA -> TkRead IDENTIFICADOR .)
    TkNum           reduce using rule 21 (ENTRADA -> TkRead IDENTIFICADOR .)
    TkId            reduce using rule 21 (ENTRADA -> TkRead IDENTIFICADOR .)
    TkOpenPar       reduce using rule 21 (ENTRADA -> TkRead IDENTIFICADOR .)
    TkTrue          reduce using rule 21 (ENTRADA -> TkRead IDENTIFICADOR .)
    TkFalse         reduce using rule 21 (ENTRADA -> TkRead IDENTIFICADOR .)
    TkNot           reduce using rule 21 (ENTRADA -> TkRead IDENTIFICADOR .)


state 60

    (22) SALIDA -> TkPrint LISTA_VAR .

    $end            reduce using rule 22 (SALIDA -> TkPrint LISTA_VAR .)
    TkEnd           reduce using rule 22 (SALIDA -> TkPrint LISTA_VAR .)
    TkSemicolon     reduce using rule 22 (SALIDA -> TkPrint LISTA_VAR .)
    TkElse          reduce using rule 22 (SALIDA -> TkPrint LISTA_VAR .)
    TkNum           reduce using rule 22 (SALIDA -> TkPrint LISTA_VAR .)
    TkId            reduce using rule 22 (SALIDA -> TkPrint LISTA_VAR .)
    TkOpenPar       reduce using rule 22 (SALIDA -> TkPrint LISTA_VAR .)
    TkTrue          reduce using rule 22 (SALIDA -> TkPrint LISTA_VAR .)
    TkFalse         reduce using rule 22 (SALIDA -> TkPrint LISTA_VAR .)
    TkNot           reduce using rule 22 (SALIDA -> TkPrint LISTA_VAR .)


state 61

    (24) SALIDA -> TkPrint CADENA .

    $end            reduce using rule 24 (SALIDA -> TkPrint CADENA .)
    TkEnd           reduce using rule 24 (SALIDA -> TkPrint CADENA .)
    TkSemicolon     reduce using rule 24 (SALIDA -> TkPrint CADENA .)
    TkElse          reduce using rule 24 (SALIDA -> TkPrint CADENA .)
    TkNum           reduce using rule 24 (SALIDA -> TkPrint CADENA .)
    TkId            reduce using rule 24 (SALIDA -> TkPrint CADENA .)
    TkOpenPar       reduce using rule 24 (SALIDA -> TkPrint CADENA .)
    TkTrue          reduce using rule 24 (SALIDA -> TkPrint CADENA .)
    TkFalse         reduce using rule 24 (SALIDA -> TkPrint CADENA .)
    TkNot           reduce using rule 24 (SALIDA -> TkPrint CADENA .)


state 62

    (35) LISTA_VAR -> IDENTIFICADOR .
    (36) LISTA_VAR -> IDENTIFICADOR . TkComma LISTA_VAR

    TkAs            reduce using rule 35 (LISTA_VAR -> IDENTIFICADOR .)
    $end            reduce using rule 35 (LISTA_VAR -> IDENTIFICADOR .)
    TkEnd           reduce using rule 35 (LISTA_VAR -> IDENTIFICADOR .)
    TkSemicolon     reduce using rule 35 (LISTA_VAR -> IDENTIFICADOR .)
    TkElse          reduce using rule 35 (LISTA_VAR -> IDENTIFICADOR .)
    TkNum           reduce using rule 35 (LISTA_VAR -> IDENTIFICADOR .)
    TkId            reduce using rule 35 (LISTA_VAR -> IDENTIFICADOR .)
    TkOpenPar       reduce using rule 35 (LISTA_VAR -> IDENTIFICADOR .)
    TkTrue          reduce using rule 35 (LISTA_VAR -> IDENTIFICADOR .)
    TkFalse         reduce using rule 35 (LISTA_VAR -> IDENTIFICADOR .)
    TkNot           reduce using rule 35 (LISTA_VAR -> IDENTIFICADOR .)
    TkComma         shift and go to state 99


state 63

    (26) CADENA -> TkString .

    $end            reduce using rule 26 (CADENA -> TkString .)
    TkEnd           reduce using rule 26 (CADENA -> TkString .)
    TkSemicolon     reduce using rule 26 (CADENA -> TkString .)
    TkElse          reduce using rule 26 (CADENA -> TkString .)
    TkNum           reduce using rule 26 (CADENA -> TkString .)
    TkId            reduce using rule 26 (CADENA -> TkString .)
    TkOpenPar       reduce using rule 26 (CADENA -> TkString .)
    TkTrue          reduce using rule 26 (CADENA -> TkString .)
    TkFalse         reduce using rule 26 (CADENA -> TkString .)
    TkNot           reduce using rule 26 (CADENA -> TkString .)


state 64

    (23) SALIDA -> TkPrintln LISTA_VAR .

    $end            reduce using rule 23 (SALIDA -> TkPrintln LISTA_VAR .)
    TkEnd           reduce using rule 23 (SALIDA -> TkPrintln LISTA_VAR .)
    TkSemicolon     reduce using rule 23 (SALIDA -> TkPrintln LISTA_VAR .)
    TkElse          reduce using rule 23 (SALIDA -> TkPrintln LISTA_VAR .)
    TkNum           reduce using rule 23 (SALIDA -> TkPrintln LISTA_VAR .)
    TkId            reduce using rule 23 (SALIDA -> TkPrintln LISTA_VAR .)
    TkOpenPar       reduce using rule 23 (SALIDA -> TkPrintln LISTA_VAR .)
    TkTrue          reduce using rule 23 (SALIDA -> TkPrintln LISTA_VAR .)
    TkFalse         reduce using rule 23 (SALIDA -> TkPrintln LISTA_VAR .)
    TkNot           reduce using rule 23 (SALIDA -> TkPrintln LISTA_VAR .)


state 65

    (25) SALIDA -> TkPrintln CADENA .

    $end            reduce using rule 25 (SALIDA -> TkPrintln CADENA .)
    TkEnd           reduce using rule 25 (SALIDA -> TkPrintln CADENA .)
    TkSemicolon     reduce using rule 25 (SALIDA -> TkPrintln CADENA .)
    TkElse          reduce using rule 25 (SALIDA -> TkPrintln CADENA .)
    TkNum           reduce using rule 25 (SALIDA -> TkPrintln CADENA .)
    TkId            reduce using rule 25 (SALIDA -> TkPrintln CADENA .)
    TkOpenPar       reduce using rule 25 (SALIDA -> TkPrintln CADENA .)
    TkTrue          reduce using rule 25 (SALIDA -> TkPrintln CADENA .)
    TkFalse         reduce using rule 25 (SALIDA -> TkPrintln CADENA .)
    TkNot           reduce using rule 25 (SALIDA -> TkPrintln CADENA .)


state 66

    (67) CONVERTIR -> TkItoi TkOpenPar . IDENTIFICADOR TkClosePar
    (19) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 36

    IDENTIFICADOR                  shift and go to state 100

state 67

    (47) EXPRESION -> TkOpenPar EXPRESION . TkClosePar
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkClosePar      shift and go to state 101
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45
    TkPlus          shift and go to state 46
    TkMinus         shift and go to state 47
    TkSoForth       shift and go to state 48
    TkCap           shift and go to state 49
    TkAnd           shift and go to state 50
    TkOr            shift and go to state 51
    TkIn            shift and go to state 52
    TkEqual         shift and go to state 53
    TkNEqual        shift and go to state 54
    TkGreater       shift and go to state 55
    TkGeq           shift and go to state 56
    TkLess          shift and go to state 57
    TkLeq           shift and go to state 58


state 68

    (68) CONVERTIR -> TkLen TkOpenPar . IDENTIFICADOR TkClosePar
    (19) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 36

    IDENTIFICADOR                  shift and go to state 102

state 69

    (69) CONVERTIR -> TkMax TkOpenPar . IDENTIFICADOR TkClosePar
    (19) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 36

    IDENTIFICADOR                  shift and go to state 103

state 70

    (70) CONVERTIR -> TkMin TkOpenPar . IDENTIFICADOR TkClosePar
    (19) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 36

    IDENTIFICADOR                  shift and go to state 104

state 71

    (27) CONDICIONAL_IF -> TkIf EXP_BOOL . TkThen SECUENCIACION TkElse SECUENCIACION
    (28) CONDICIONAL_IF -> TkIf EXP_BOOL . TkThen SECUENCIACION
    (46) EXPRESION -> EXP_BOOL .

  ! shift/reduce conflict for TkThen resolved as shift
    TkThen          shift and go to state 105
    TkAsig          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkOf            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkArrow         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkDo            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkClosePar      reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkMod           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkMult          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkDiv           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkPlus          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkMinus         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkSoForth       reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkCap           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkAnd           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkOr            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkIn            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkEqual         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkNEqual        reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkGreater       reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkGeq           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkLess          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkLeq           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    $end            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkEnd           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkSemicolon     reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkElse          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkNum           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkId            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkOpenPar       reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkTrue          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkFalse         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkNot           reduce using rule 46 (EXPRESION -> EXP_BOOL .)

  ! TkThen          [ reduce using rule 46 (EXPRESION -> EXP_BOOL .) ]


state 72

    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION

    TkAnd           shift and go to state 50
    TkOr            shift and go to state 51
    TkIn            shift and go to state 52
    TkEqual         shift and go to state 53
    TkNEqual        shift and go to state 54
    TkGreater       shift and go to state 55
    TkGeq           shift and go to state 56
    TkLess          shift and go to state 57
    TkLeq           shift and go to state 58
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45
    TkPlus          shift and go to state 46
    TkMinus         shift and go to state 47
    TkSoForth       shift and go to state 48
    TkCap           shift and go to state 49


state 73

    (29) CONDICIONAL_CASE -> TkCase EXPRESION . TkOf LISTA_CASE TkEnd
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkOf            shift and go to state 106
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45
    TkPlus          shift and go to state 46
    TkMinus         shift and go to state 47
    TkSoForth       shift and go to state 48
    TkCap           shift and go to state 49
    TkAnd           shift and go to state 50
    TkOr            shift and go to state 51
    TkIn            shift and go to state 52
    TkEqual         shift and go to state 53
    TkNEqual        shift and go to state 54
    TkGreater       shift and go to state 55
    TkGeq           shift and go to state 56
    TkLess          shift and go to state 57
    TkLeq           shift and go to state 58


state 74

    (32) ITERACION_FOR -> TkFor IDENTIFICADOR . TkIn EXPRESION TkDo SECUENCIACION

    TkIn            shift and go to state 107


state 75

    (33) ITERACION_WHILE -> TkWhile EXP_BOOL . TkDo SECUENCIACION
    (46) EXPRESION -> EXP_BOOL .

  ! shift/reduce conflict for TkDo resolved as shift
    TkDo            shift and go to state 108
    TkAsig          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkOf            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkArrow         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkClosePar      reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkMod           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkMult          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkDiv           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkPlus          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkMinus         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkSoForth       reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkCap           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkAnd           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkThen          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkOr            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkIn            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkEqual         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkNEqual        reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkGreater       reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkGeq           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkLess          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkLeq           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    $end            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkEnd           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkSemicolon     reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkElse          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkNum           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkId            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkOpenPar       reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkTrue          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkFalse         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkNot           reduce using rule 46 (EXPRESION -> EXP_BOOL .)

  ! TkDo            [ reduce using rule 46 (EXPRESION -> EXP_BOOL .) ]


state 76

    (2) BLOQUE -> TkBegin VACIO . TkEnd
    (16) INSTRUCCION -> VACIO .

  ! shift/reduce conflict for TkEnd resolved as shift
    TkEnd           shift and go to state 109
    $end            reduce using rule 16 (INSTRUCCION -> VACIO .)
    TkSemicolon     reduce using rule 16 (INSTRUCCION -> VACIO .)
    TkElse          reduce using rule 16 (INSTRUCCION -> VACIO .)
    TkNum           reduce using rule 16 (INSTRUCCION -> VACIO .)
    TkId            reduce using rule 16 (INSTRUCCION -> VACIO .)
    TkOpenPar       reduce using rule 16 (INSTRUCCION -> VACIO .)
    TkTrue          reduce using rule 16 (INSTRUCCION -> VACIO .)
    TkFalse         reduce using rule 16 (INSTRUCCION -> VACIO .)
    TkNot           reduce using rule 16 (INSTRUCCION -> VACIO .)

  ! TkEnd           [ reduce using rule 16 (INSTRUCCION -> VACIO .) ]


state 77

    (3) BLOQUE -> TkBegin SECUENCIACION . TkEnd VACIO

    TkEnd           shift and go to state 110


state 78

    (4) BLOQUE -> TkBegin TkDeclare . DECL_VAR SECUENCIACION TkEnd
    (5) BLOQUE -> TkBegin TkDeclare . DECL_VAR SECUENCIACION TkEnd VACIO
    (34) DECL_VAR -> . LISTA_VAR TkAs LISTA_TIPO
    (35) LISTA_VAR -> . IDENTIFICADOR
    (36) LISTA_VAR -> . IDENTIFICADOR TkComma LISTA_VAR
    (19) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 36

    DECL_VAR                       shift and go to state 111
    LISTA_VAR                      shift and go to state 112
    IDENTIFICADOR                  shift and go to state 62

state 79

    (57) EXP_BOOL -> TkNot EXP_BOOL .
    (46) EXPRESION -> EXP_BOOL .

  ! reduce/reduce conflict for TkAsig resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkOf resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkArrow resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkDo resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkClosePar resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkMod resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkMult resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkDiv resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkPlus resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkMinus resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkSoForth resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkCap resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkAnd resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkThen resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkOr resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkIn resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkEqual resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkNEqual resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkGreater resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkGeq resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkLess resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkLeq resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for $end resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkEnd resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkSemicolon resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkElse resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkNum resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkId resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkOpenPar resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkTrue resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkFalse resolved using rule 46 (EXPRESION -> EXP_BOOL .)
  ! reduce/reduce conflict for TkNot resolved using rule 46 (EXPRESION -> EXP_BOOL .)
    TkAsig          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkOf            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkArrow         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkDo            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkClosePar      reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkMod           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkMult          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkDiv           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkPlus          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkMinus         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkSoForth       reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkCap           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkAnd           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkThen          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkOr            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkIn            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkEqual         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkNEqual        reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkGreater       reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkGeq           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkLess          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkLeq           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    $end            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkEnd           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkSemicolon     reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkElse          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkNum           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkId            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkOpenPar       reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkTrue          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkFalse         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkNot           reduce using rule 46 (EXPRESION -> EXP_BOOL .)

  ! TkThen          [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkDo            [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkAsig          [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkOf            [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkArrow         [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkClosePar      [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkMod           [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkMult          [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkDiv           [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkPlus          [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkMinus         [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkSoForth       [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkCap           [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkAnd           [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkOr            [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkIn            [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkEqual         [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkNEqual        [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkGreater       [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkGeq           [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkLess          [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkLeq           [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! $end            [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkEnd           [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkSemicolon     [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkElse          [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkNum           [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkId            [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkOpenPar       [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkTrue          [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkFalse         [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]
  ! TkNot           [ reduce using rule 57 (EXP_BOOL -> TkNot EXP_BOOL .) ]


state 80

    (18) SECUENCIACION -> INSTRUCCION TkSemicolon SECUENCIACION .

    $end            reduce using rule 18 (SECUENCIACION -> INSTRUCCION TkSemicolon SECUENCIACION .)
    TkEnd           reduce using rule 18 (SECUENCIACION -> INSTRUCCION TkSemicolon SECUENCIACION .)
    TkElse          reduce using rule 18 (SECUENCIACION -> INSTRUCCION TkSemicolon SECUENCIACION .)
    TkNum           reduce using rule 18 (SECUENCIACION -> INSTRUCCION TkSemicolon SECUENCIACION .)
    TkId            reduce using rule 18 (SECUENCIACION -> INSTRUCCION TkSemicolon SECUENCIACION .)
    TkOpenPar       reduce using rule 18 (SECUENCIACION -> INSTRUCCION TkSemicolon SECUENCIACION .)
    TkTrue          reduce using rule 18 (SECUENCIACION -> INSTRUCCION TkSemicolon SECUENCIACION .)
    TkFalse         reduce using rule 18 (SECUENCIACION -> INSTRUCCION TkSemicolon SECUENCIACION .)
    TkNot           reduce using rule 18 (SECUENCIACION -> INSTRUCCION TkSemicolon SECUENCIACION .)
    TkSemicolon     reduce using rule 18 (SECUENCIACION -> INSTRUCCION TkSemicolon SECUENCIACION .)


state 81

    (71) POST -> TkOpenBra TkPost TkTwoPoints . EXP_CUANTIFICADOR TkCloseBra
    (72) EXP_CUANTIFICADOR -> . TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> . TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (74) EXP_CUANTIFICADOR -> . TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (75) EXP_CUANTIFICADOR -> . TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar

    TkOpenPar       shift and go to state 114

    EXP_CUANTIFICADOR              shift and go to state 113

state 82

    (20) ASIGNACION -> EXPRESION TkAsig EXPRESION .
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    $end            reduce using rule 20 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkEnd           reduce using rule 20 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkSemicolon     reduce using rule 20 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkElse          reduce using rule 20 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkNum           reduce using rule 20 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkId            reduce using rule 20 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkOpenPar       reduce using rule 20 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkTrue          reduce using rule 20 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkFalse         reduce using rule 20 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkNot           reduce using rule 20 (ASIGNACION -> EXPRESION TkAsig EXPRESION .)
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45
    TkPlus          shift and go to state 46
    TkMinus         shift and go to state 47
    TkSoForth       shift and go to state 48
    TkCap           shift and go to state 49
    TkAnd           shift and go to state 50
    TkOr            shift and go to state 51
    TkIn            shift and go to state 52
    TkEqual         shift and go to state 53
    TkNEqual        shift and go to state 54
    TkGreater       shift and go to state 55
    TkGeq           shift and go to state 56
    TkLess          shift and go to state 57
    TkLeq           shift and go to state 58


state 83

    (48) EXP_ENTEROS -> EXPRESION TkMod EXPRESION .
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkOf            reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkArrow         reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkDo            reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkClosePar      reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkMod           reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkMult          reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkDiv           reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkPlus          reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkMinus         reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkSoForth       reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkCap           reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkAnd           reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkThen          reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkOr            reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkIn            reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkEqual         reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkNEqual        reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkGreater       reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkGeq           reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkLess          reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkLeq           reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    $end            reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkEnd           reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkSemicolon     reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkElse          reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkNum           reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkId            reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkOpenPar       reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkTrue          reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkFalse         reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)
    TkNot           reduce using rule 48 (EXP_ENTEROS -> EXPRESION TkMod EXPRESION .)

  ! TkMod           [ shift and go to state 43 ]
  ! TkMult          [ shift and go to state 44 ]
  ! TkDiv           [ shift and go to state 45 ]
  ! TkPlus          [ shift and go to state 46 ]
  ! TkMinus         [ shift and go to state 47 ]
  ! TkSoForth       [ shift and go to state 48 ]
  ! TkCap           [ shift and go to state 49 ]
  ! TkAnd           [ shift and go to state 50 ]
  ! TkOr            [ shift and go to state 51 ]
  ! TkIn            [ shift and go to state 52 ]
  ! TkEqual         [ shift and go to state 53 ]
  ! TkNEqual        [ shift and go to state 54 ]
  ! TkGreater       [ shift and go to state 55 ]
  ! TkGeq           [ shift and go to state 56 ]
  ! TkLess          [ shift and go to state 57 ]
  ! TkLeq           [ shift and go to state 58 ]


state 84

    (49) EXP_ENTEROS -> EXPRESION TkMult EXPRESION .
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkOf            reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkArrow         reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkDo            reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkClosePar      reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkMod           reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkMult          reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkDiv           reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkPlus          reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkMinus         reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkSoForth       reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkCap           reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkAnd           reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkThen          reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkOr            reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkIn            reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkEqual         reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkNEqual        reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkGreater       reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkGeq           reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkLess          reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkLeq           reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    $end            reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkEnd           reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkSemicolon     reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkElse          reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkNum           reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkId            reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkOpenPar       reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkTrue          reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkFalse         reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)
    TkNot           reduce using rule 49 (EXP_ENTEROS -> EXPRESION TkMult EXPRESION .)

  ! TkMod           [ shift and go to state 43 ]
  ! TkMult          [ shift and go to state 44 ]
  ! TkDiv           [ shift and go to state 45 ]
  ! TkPlus          [ shift and go to state 46 ]
  ! TkMinus         [ shift and go to state 47 ]
  ! TkSoForth       [ shift and go to state 48 ]
  ! TkCap           [ shift and go to state 49 ]
  ! TkAnd           [ shift and go to state 50 ]
  ! TkOr            [ shift and go to state 51 ]
  ! TkIn            [ shift and go to state 52 ]
  ! TkEqual         [ shift and go to state 53 ]
  ! TkNEqual        [ shift and go to state 54 ]
  ! TkGreater       [ shift and go to state 55 ]
  ! TkGeq           [ shift and go to state 56 ]
  ! TkLess          [ shift and go to state 57 ]
  ! TkLeq           [ shift and go to state 58 ]


state 85

    (50) EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkOf            reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkArrow         reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkDo            reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkClosePar      reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkMod           reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkMult          reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkDiv           reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkPlus          reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkMinus         reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkSoForth       reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkCap           reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkAnd           reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkThen          reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkOr            reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkIn            reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkEqual         reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkNEqual        reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkGreater       reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkGeq           reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkLess          reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkLeq           reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    $end            reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkEnd           reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkSemicolon     reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkElse          reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkNum           reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkId            reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkOpenPar       reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkTrue          reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkFalse         reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)
    TkNot           reduce using rule 50 (EXP_ENTEROS -> EXPRESION TkDiv EXPRESION .)

  ! TkMod           [ shift and go to state 43 ]
  ! TkMult          [ shift and go to state 44 ]
  ! TkDiv           [ shift and go to state 45 ]
  ! TkPlus          [ shift and go to state 46 ]
  ! TkMinus         [ shift and go to state 47 ]
  ! TkSoForth       [ shift and go to state 48 ]
  ! TkCap           [ shift and go to state 49 ]
  ! TkAnd           [ shift and go to state 50 ]
  ! TkOr            [ shift and go to state 51 ]
  ! TkIn            [ shift and go to state 52 ]
  ! TkEqual         [ shift and go to state 53 ]
  ! TkNEqual        [ shift and go to state 54 ]
  ! TkGreater       [ shift and go to state 55 ]
  ! TkGeq           [ shift and go to state 56 ]
  ! TkLess          [ shift and go to state 57 ]
  ! TkLeq           [ shift and go to state 58 ]


state 86

    (51) EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkOf            reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkArrow         reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkDo            reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkClosePar      reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkPlus          reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkMinus         reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkSoForth       reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkCap           reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkAnd           reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkThen          reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkOr            reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkIn            reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkEqual         reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkNEqual        reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkGreater       reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkGeq           reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkLess          reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkLeq           reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    $end            reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkEnd           reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkSemicolon     reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkElse          reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkNum           reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkId            reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkOpenPar       reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkTrue          reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkFalse         reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkNot           reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .)
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45

  ! TkMod           [ reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .) ]
  ! TkMult          [ reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .) ]
  ! TkDiv           [ reduce using rule 51 (EXP_ENTEROS -> EXPRESION TkPlus EXPRESION .) ]
  ! TkPlus          [ shift and go to state 46 ]
  ! TkMinus         [ shift and go to state 47 ]
  ! TkSoForth       [ shift and go to state 48 ]
  ! TkCap           [ shift and go to state 49 ]
  ! TkAnd           [ shift and go to state 50 ]
  ! TkOr            [ shift and go to state 51 ]
  ! TkIn            [ shift and go to state 52 ]
  ! TkEqual         [ shift and go to state 53 ]
  ! TkNEqual        [ shift and go to state 54 ]
  ! TkGreater       [ shift and go to state 55 ]
  ! TkGeq           [ shift and go to state 56 ]
  ! TkLess          [ shift and go to state 57 ]
  ! TkLeq           [ shift and go to state 58 ]


state 87

    (52) EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkAsig          reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkOf            reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkArrow         reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkDo            reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkClosePar      reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkMod           reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkMult          reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkDiv           reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkPlus          reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkMinus         reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkSoForth       reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkCap           reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkAnd           reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkThen          reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkOr            reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkIn            reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkEqual         reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkNEqual        reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkGreater       reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkGeq           reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkLess          reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkLeq           reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    $end            reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkEnd           reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkSemicolon     reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkElse          reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkNum           reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkId            reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkOpenPar       reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkTrue          reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkFalse         reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)
    TkNot           reduce using rule 52 (EXP_ENTEROS -> EXPRESION TkMinus EXPRESION .)

  ! TkMod           [ shift and go to state 43 ]
  ! TkMult          [ shift and go to state 44 ]
  ! TkDiv           [ shift and go to state 45 ]
  ! TkPlus          [ shift and go to state 46 ]
  ! TkMinus         [ shift and go to state 47 ]
  ! TkSoForth       [ shift and go to state 48 ]
  ! TkCap           [ shift and go to state 49 ]
  ! TkAnd           [ shift and go to state 50 ]
  ! TkOr            [ shift and go to state 51 ]
  ! TkIn            [ shift and go to state 52 ]
  ! TkEqual         [ shift and go to state 53 ]
  ! TkNEqual        [ shift and go to state 54 ]
  ! TkGreater       [ shift and go to state 55 ]
  ! TkGeq           [ shift and go to state 56 ]
  ! TkLess          [ shift and go to state 57 ]
  ! TkLeq           [ shift and go to state 58 ]


state 88

    (53) EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

  ! shift/reduce conflict for TkMod resolved as shift
  ! shift/reduce conflict for TkMult resolved as shift
  ! shift/reduce conflict for TkDiv resolved as shift
  ! shift/reduce conflict for TkPlus resolved as shift
  ! shift/reduce conflict for TkMinus resolved as shift
  ! shift/reduce conflict for TkSoForth resolved as shift
  ! shift/reduce conflict for TkCap resolved as shift
  ! shift/reduce conflict for TkAnd resolved as shift
  ! shift/reduce conflict for TkOr resolved as shift
  ! shift/reduce conflict for TkIn resolved as shift
  ! shift/reduce conflict for TkEqual resolved as shift
  ! shift/reduce conflict for TkNEqual resolved as shift
  ! shift/reduce conflict for TkGreater resolved as shift
  ! shift/reduce conflict for TkGeq resolved as shift
  ! shift/reduce conflict for TkLess resolved as shift
  ! shift/reduce conflict for TkLeq resolved as shift
    TkAsig          reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkOf            reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkArrow         reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkDo            reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkClosePar      reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkThen          reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    $end            reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkEnd           reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkSemicolon     reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkElse          reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkNum           reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkId            reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkOpenPar       reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkTrue          reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkFalse         reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkNot           reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .)
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45
    TkPlus          shift and go to state 46
    TkMinus         shift and go to state 47
    TkSoForth       shift and go to state 48
    TkCap           shift and go to state 49
    TkAnd           shift and go to state 50
    TkOr            shift and go to state 51
    TkIn            shift and go to state 52
    TkEqual         shift and go to state 53
    TkNEqual        shift and go to state 54
    TkGreater       shift and go to state 55
    TkGeq           shift and go to state 56
    TkLess          shift and go to state 57
    TkLeq           shift and go to state 58

  ! TkMod           [ reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkMult          [ reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkDiv           [ reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkPlus          [ reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkMinus         [ reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkSoForth       [ reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkCap           [ reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkAnd           [ reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkOr            [ reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkIn            [ reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkEqual         [ reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkNEqual        [ reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkGreater       [ reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkGeq           [ reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkLess          [ reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]
  ! TkLeq           [ reduce using rule 53 (EXP_INTERVALOS -> EXPRESION TkSoForth EXPRESION .) ]


state 89

    (54) EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

  ! shift/reduce conflict for TkMod resolved as shift
  ! shift/reduce conflict for TkMult resolved as shift
  ! shift/reduce conflict for TkDiv resolved as shift
  ! shift/reduce conflict for TkPlus resolved as shift
  ! shift/reduce conflict for TkMinus resolved as shift
  ! shift/reduce conflict for TkSoForth resolved as shift
  ! shift/reduce conflict for TkCap resolved as shift
  ! shift/reduce conflict for TkAnd resolved as shift
  ! shift/reduce conflict for TkOr resolved as shift
  ! shift/reduce conflict for TkIn resolved as shift
  ! shift/reduce conflict for TkEqual resolved as shift
  ! shift/reduce conflict for TkNEqual resolved as shift
  ! shift/reduce conflict for TkGreater resolved as shift
  ! shift/reduce conflict for TkGeq resolved as shift
  ! shift/reduce conflict for TkLess resolved as shift
  ! shift/reduce conflict for TkLeq resolved as shift
    TkAsig          reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkOf            reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkArrow         reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkDo            reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkClosePar      reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkThen          reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    $end            reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkEnd           reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkSemicolon     reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkElse          reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkNum           reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkId            reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkOpenPar       reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkTrue          reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkFalse         reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkNot           reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .)
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45
    TkPlus          shift and go to state 46
    TkMinus         shift and go to state 47
    TkSoForth       shift and go to state 48
    TkCap           shift and go to state 49
    TkAnd           shift and go to state 50
    TkOr            shift and go to state 51
    TkIn            shift and go to state 52
    TkEqual         shift and go to state 53
    TkNEqual        shift and go to state 54
    TkGreater       shift and go to state 55
    TkGeq           shift and go to state 56
    TkLess          shift and go to state 57
    TkLeq           shift and go to state 58

  ! TkMod           [ reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkMult          [ reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkDiv           [ reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkPlus          [ reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkMinus         [ reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkSoForth       [ reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkCap           [ reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkAnd           [ reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkOr            [ reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkIn            [ reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkEqual         [ reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkNEqual        [ reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkGreater       [ reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkGeq           [ reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkLess          [ reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]
  ! TkLeq           [ reduce using rule 54 (EXP_INTERVALOS -> EXPRESION TkCap EXPRESION .) ]


state 90

    (58) EXP_BOOL -> EXPRESION TkAnd EXPRESION .
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkThen          reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkDo            reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkAsig          reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkOf            reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkArrow         reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkClosePar      reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkSoForth       reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkCap           reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkAnd           reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkIn            reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkNEqual        reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    $end            reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkEnd           reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkSemicolon     reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkElse          reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkNum           reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkId            reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkOpenPar       reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkTrue          reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkFalse         reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkNot           reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .)
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45
    TkPlus          shift and go to state 46
    TkMinus         shift and go to state 47
    TkOr            shift and go to state 51
    TkEqual         shift and go to state 53
    TkGreater       shift and go to state 55
    TkGeq           shift and go to state 56
    TkLess          shift and go to state 57
    TkLeq           shift and go to state 58

  ! TkMod           [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkMult          [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkDiv           [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkPlus          [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkMinus         [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkOr            [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkEqual         [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkGreater       [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkGeq           [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkLess          [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkLeq           [ reduce using rule 58 (EXP_BOOL -> EXPRESION TkAnd EXPRESION .) ]
  ! TkSoForth       [ shift and go to state 48 ]
  ! TkCap           [ shift and go to state 49 ]
  ! TkAnd           [ shift and go to state 50 ]
  ! TkIn            [ shift and go to state 52 ]
  ! TkNEqual        [ shift and go to state 54 ]


state 91

    (59) EXP_BOOL -> EXPRESION TkOr EXPRESION .
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkThen          reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkDo            reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkAsig          reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkOf            reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkArrow         reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkClosePar      reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkSoForth       reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkCap           reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkAnd           reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkOr            reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkIn            reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkNEqual        reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    $end            reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkEnd           reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkSemicolon     reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkElse          reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkNum           reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkId            reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkOpenPar       reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkTrue          reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkFalse         reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkNot           reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .)
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45
    TkPlus          shift and go to state 46
    TkMinus         shift and go to state 47
    TkEqual         shift and go to state 53
    TkGreater       shift and go to state 55
    TkGeq           shift and go to state 56
    TkLess          shift and go to state 57
    TkLeq           shift and go to state 58

  ! TkMod           [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkMult          [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkDiv           [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkPlus          [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkMinus         [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkEqual         [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkGreater       [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkGeq           [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkLess          [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkLeq           [ reduce using rule 59 (EXP_BOOL -> EXPRESION TkOr EXPRESION .) ]
  ! TkSoForth       [ shift and go to state 48 ]
  ! TkCap           [ shift and go to state 49 ]
  ! TkAnd           [ shift and go to state 50 ]
  ! TkOr            [ shift and go to state 51 ]
  ! TkIn            [ shift and go to state 52 ]
  ! TkNEqual        [ shift and go to state 54 ]


state 92

    (60) EXP_BOOL -> EXPRESION TkIn EXPRESION .
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

  ! shift/reduce conflict for TkMod resolved as shift
  ! shift/reduce conflict for TkMult resolved as shift
  ! shift/reduce conflict for TkDiv resolved as shift
  ! shift/reduce conflict for TkPlus resolved as shift
  ! shift/reduce conflict for TkMinus resolved as shift
  ! shift/reduce conflict for TkSoForth resolved as shift
  ! shift/reduce conflict for TkCap resolved as shift
  ! shift/reduce conflict for TkAnd resolved as shift
  ! shift/reduce conflict for TkOr resolved as shift
  ! shift/reduce conflict for TkIn resolved as shift
  ! shift/reduce conflict for TkEqual resolved as shift
  ! shift/reduce conflict for TkNEqual resolved as shift
  ! shift/reduce conflict for TkGreater resolved as shift
  ! shift/reduce conflict for TkGeq resolved as shift
  ! shift/reduce conflict for TkLess resolved as shift
  ! shift/reduce conflict for TkLeq resolved as shift
    TkThen          reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkDo            reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkAsig          reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkOf            reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkArrow         reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkClosePar      reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    $end            reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkEnd           reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkSemicolon     reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkElse          reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkNum           reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkId            reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkOpenPar       reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkTrue          reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkFalse         reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkNot           reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .)
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45
    TkPlus          shift and go to state 46
    TkMinus         shift and go to state 47
    TkSoForth       shift and go to state 48
    TkCap           shift and go to state 49
    TkAnd           shift and go to state 50
    TkOr            shift and go to state 51
    TkIn            shift and go to state 52
    TkEqual         shift and go to state 53
    TkNEqual        shift and go to state 54
    TkGreater       shift and go to state 55
    TkGeq           shift and go to state 56
    TkLess          shift and go to state 57
    TkLeq           shift and go to state 58

  ! TkMod           [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkMult          [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkDiv           [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkPlus          [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkMinus         [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkSoForth       [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkCap           [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkAnd           [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkOr            [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkIn            [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkEqual         [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkNEqual        [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkGreater       [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkGeq           [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkLess          [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]
  ! TkLeq           [ reduce using rule 60 (EXP_BOOL -> EXPRESION TkIn EXPRESION .) ]


state 93

    (61) EXP_BOOL -> EXPRESION TkEqual EXPRESION .
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkThen          reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkDo            reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkAsig          reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkOf            reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkArrow         reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkClosePar      reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkSoForth       reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkCap           reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkAnd           reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkOr            reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkIn            reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkEqual         reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkNEqual        reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    $end            reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkEnd           reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkSemicolon     reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkElse          reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkNum           reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkId            reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkOpenPar       reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkTrue          reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkFalse         reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkNot           reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .)
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45
    TkPlus          shift and go to state 46
    TkMinus         shift and go to state 47
    TkGreater       shift and go to state 55
    TkGeq           shift and go to state 56
    TkLess          shift and go to state 57
    TkLeq           shift and go to state 58

  ! TkMod           [ reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .) ]
  ! TkMult          [ reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .) ]
  ! TkDiv           [ reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .) ]
  ! TkPlus          [ reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .) ]
  ! TkMinus         [ reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .) ]
  ! TkGreater       [ reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .) ]
  ! TkGeq           [ reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .) ]
  ! TkLess          [ reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .) ]
  ! TkLeq           [ reduce using rule 61 (EXP_BOOL -> EXPRESION TkEqual EXPRESION .) ]
  ! TkSoForth       [ shift and go to state 48 ]
  ! TkCap           [ shift and go to state 49 ]
  ! TkAnd           [ shift and go to state 50 ]
  ! TkOr            [ shift and go to state 51 ]
  ! TkIn            [ shift and go to state 52 ]
  ! TkEqual         [ shift and go to state 53 ]
  ! TkNEqual        [ shift and go to state 54 ]


state 94

    (62) EXP_BOOL -> EXPRESION TkNEqual EXPRESION .
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

  ! shift/reduce conflict for TkMod resolved as shift
  ! shift/reduce conflict for TkMult resolved as shift
  ! shift/reduce conflict for TkDiv resolved as shift
  ! shift/reduce conflict for TkPlus resolved as shift
  ! shift/reduce conflict for TkMinus resolved as shift
  ! shift/reduce conflict for TkSoForth resolved as shift
  ! shift/reduce conflict for TkCap resolved as shift
  ! shift/reduce conflict for TkAnd resolved as shift
  ! shift/reduce conflict for TkOr resolved as shift
  ! shift/reduce conflict for TkIn resolved as shift
  ! shift/reduce conflict for TkEqual resolved as shift
  ! shift/reduce conflict for TkNEqual resolved as shift
  ! shift/reduce conflict for TkGreater resolved as shift
  ! shift/reduce conflict for TkGeq resolved as shift
  ! shift/reduce conflict for TkLess resolved as shift
  ! shift/reduce conflict for TkLeq resolved as shift
    TkThen          reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkDo            reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkAsig          reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkOf            reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkArrow         reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkClosePar      reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    $end            reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkEnd           reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkSemicolon     reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkElse          reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkNum           reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkId            reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkOpenPar       reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkTrue          reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkFalse         reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkNot           reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .)
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45
    TkPlus          shift and go to state 46
    TkMinus         shift and go to state 47
    TkSoForth       shift and go to state 48
    TkCap           shift and go to state 49
    TkAnd           shift and go to state 50
    TkOr            shift and go to state 51
    TkIn            shift and go to state 52
    TkEqual         shift and go to state 53
    TkNEqual        shift and go to state 54
    TkGreater       shift and go to state 55
    TkGeq           shift and go to state 56
    TkLess          shift and go to state 57
    TkLeq           shift and go to state 58

  ! TkMod           [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkMult          [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkDiv           [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkPlus          [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkMinus         [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkSoForth       [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkCap           [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkAnd           [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkOr            [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkIn            [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkEqual         [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkNEqual        [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkGreater       [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkGeq           [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkLess          [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]
  ! TkLeq           [ reduce using rule 62 (EXP_BOOL -> EXPRESION TkNEqual EXPRESION .) ]


state 95

    (63) EXP_BOOL -> EXPRESION TkGreater EXPRESION .
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkThen          reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkDo            reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkAsig          reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkOf            reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkArrow         reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkClosePar      reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkSoForth       reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkCap           reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkAnd           reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkOr            reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkIn            reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkEqual         reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkNEqual        reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkGreater       reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkGeq           reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkLess          reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkLeq           reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    $end            reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkEnd           reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkSemicolon     reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkElse          reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkNum           reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkId            reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkOpenPar       reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkTrue          reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkFalse         reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkNot           reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .)
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45
    TkPlus          shift and go to state 46
    TkMinus         shift and go to state 47

  ! TkMod           [ reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .) ]
  ! TkMult          [ reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .) ]
  ! TkDiv           [ reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .) ]
  ! TkPlus          [ reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .) ]
  ! TkMinus         [ reduce using rule 63 (EXP_BOOL -> EXPRESION TkGreater EXPRESION .) ]
  ! TkSoForth       [ shift and go to state 48 ]
  ! TkCap           [ shift and go to state 49 ]
  ! TkAnd           [ shift and go to state 50 ]
  ! TkOr            [ shift and go to state 51 ]
  ! TkIn            [ shift and go to state 52 ]
  ! TkEqual         [ shift and go to state 53 ]
  ! TkNEqual        [ shift and go to state 54 ]
  ! TkGreater       [ shift and go to state 55 ]
  ! TkGeq           [ shift and go to state 56 ]
  ! TkLess          [ shift and go to state 57 ]
  ! TkLeq           [ shift and go to state 58 ]


state 96

    (64) EXP_BOOL -> EXPRESION TkGeq EXPRESION .
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkThen          reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkDo            reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkAsig          reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkOf            reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkArrow         reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkClosePar      reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkSoForth       reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkCap           reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkAnd           reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkOr            reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkIn            reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkEqual         reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkNEqual        reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkGreater       reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkGeq           reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkLess          reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkLeq           reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    $end            reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkEnd           reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkSemicolon     reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkElse          reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkNum           reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkId            reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkOpenPar       reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkTrue          reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkFalse         reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkNot           reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .)
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45
    TkPlus          shift and go to state 46
    TkMinus         shift and go to state 47

  ! TkMod           [ reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .) ]
  ! TkMult          [ reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .) ]
  ! TkDiv           [ reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .) ]
  ! TkPlus          [ reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .) ]
  ! TkMinus         [ reduce using rule 64 (EXP_BOOL -> EXPRESION TkGeq EXPRESION .) ]
  ! TkSoForth       [ shift and go to state 48 ]
  ! TkCap           [ shift and go to state 49 ]
  ! TkAnd           [ shift and go to state 50 ]
  ! TkOr            [ shift and go to state 51 ]
  ! TkIn            [ shift and go to state 52 ]
  ! TkEqual         [ shift and go to state 53 ]
  ! TkNEqual        [ shift and go to state 54 ]
  ! TkGreater       [ shift and go to state 55 ]
  ! TkGeq           [ shift and go to state 56 ]
  ! TkLess          [ shift and go to state 57 ]
  ! TkLeq           [ shift and go to state 58 ]


state 97

    (65) EXP_BOOL -> EXPRESION TkLess EXPRESION .
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkThen          reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkDo            reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkAsig          reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkOf            reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkArrow         reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkClosePar      reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkSoForth       reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkCap           reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkAnd           reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkOr            reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkIn            reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkEqual         reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkNEqual        reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkGreater       reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkGeq           reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkLess          reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkLeq           reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    $end            reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkEnd           reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkSemicolon     reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkElse          reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkNum           reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkId            reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkOpenPar       reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkTrue          reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkFalse         reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkNot           reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .)
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45
    TkPlus          shift and go to state 46
    TkMinus         shift and go to state 47

  ! TkMod           [ reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .) ]
  ! TkMult          [ reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .) ]
  ! TkDiv           [ reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .) ]
  ! TkPlus          [ reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .) ]
  ! TkMinus         [ reduce using rule 65 (EXP_BOOL -> EXPRESION TkLess EXPRESION .) ]
  ! TkSoForth       [ shift and go to state 48 ]
  ! TkCap           [ shift and go to state 49 ]
  ! TkAnd           [ shift and go to state 50 ]
  ! TkOr            [ shift and go to state 51 ]
  ! TkIn            [ shift and go to state 52 ]
  ! TkEqual         [ shift and go to state 53 ]
  ! TkNEqual        [ shift and go to state 54 ]
  ! TkGreater       [ shift and go to state 55 ]
  ! TkGeq           [ shift and go to state 56 ]
  ! TkLess          [ shift and go to state 57 ]
  ! TkLeq           [ shift and go to state 58 ]


state 98

    (66) EXP_BOOL -> EXPRESION TkLeq EXPRESION .
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkThen          reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkDo            reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkAsig          reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkOf            reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkArrow         reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkClosePar      reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkSoForth       reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkCap           reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkAnd           reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkOr            reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkIn            reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkEqual         reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkNEqual        reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkGreater       reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkGeq           reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkLess          reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkLeq           reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    $end            reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkEnd           reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkSemicolon     reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkElse          reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkNum           reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkId            reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkOpenPar       reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkTrue          reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkFalse         reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkNot           reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .)
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45
    TkPlus          shift and go to state 46
    TkMinus         shift and go to state 47

  ! TkMod           [ reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .) ]
  ! TkMult          [ reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .) ]
  ! TkDiv           [ reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .) ]
  ! TkPlus          [ reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .) ]
  ! TkMinus         [ reduce using rule 66 (EXP_BOOL -> EXPRESION TkLeq EXPRESION .) ]
  ! TkSoForth       [ shift and go to state 48 ]
  ! TkCap           [ shift and go to state 49 ]
  ! TkAnd           [ shift and go to state 50 ]
  ! TkOr            [ shift and go to state 51 ]
  ! TkIn            [ shift and go to state 52 ]
  ! TkEqual         [ shift and go to state 53 ]
  ! TkNEqual        [ shift and go to state 54 ]
  ! TkGreater       [ shift and go to state 55 ]
  ! TkGeq           [ shift and go to state 56 ]
  ! TkLess          [ shift and go to state 57 ]
  ! TkLeq           [ shift and go to state 58 ]


state 99

    (36) LISTA_VAR -> IDENTIFICADOR TkComma . LISTA_VAR
    (35) LISTA_VAR -> . IDENTIFICADOR
    (36) LISTA_VAR -> . IDENTIFICADOR TkComma LISTA_VAR
    (19) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 36

    IDENTIFICADOR                  shift and go to state 62
    LISTA_VAR                      shift and go to state 115

state 100

    (67) CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR . TkClosePar

    TkClosePar      shift and go to state 116


state 101

    (47) EXPRESION -> TkOpenPar EXPRESION TkClosePar .

    TkAsig          reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkOf            reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkArrow         reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkDo            reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkClosePar      reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkMod           reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkMult          reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkDiv           reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkPlus          reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkMinus         reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkSoForth       reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkCap           reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkAnd           reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkThen          reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkOr            reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkIn            reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkEqual         reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkNEqual        reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkGreater       reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkGeq           reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkLess          reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkLeq           reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    $end            reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkEnd           reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkSemicolon     reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkElse          reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkNum           reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkId            reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkOpenPar       reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkTrue          reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkFalse         reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)
    TkNot           reduce using rule 47 (EXPRESION -> TkOpenPar EXPRESION TkClosePar .)


state 102

    (68) CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR . TkClosePar

    TkClosePar      shift and go to state 117


state 103

    (69) CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR . TkClosePar

    TkClosePar      shift and go to state 118


state 104

    (70) CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR . TkClosePar

    TkClosePar      shift and go to state 119


state 105

    (27) CONDICIONAL_IF -> TkIf EXP_BOOL TkThen . SECUENCIACION TkElse SECUENCIACION
    (28) CONDICIONAL_IF -> TkIf EXP_BOOL TkThen . SECUENCIACION
    (17) SECUENCIACION -> . INSTRUCCION
    (18) SECUENCIACION -> . INSTRUCCION TkSemicolon SECUENCIACION
    (6) INSTRUCCION -> . POST
    (7) INSTRUCCION -> . ASIGNACION
    (8) INSTRUCCION -> . ENTRADA
    (9) INSTRUCCION -> . SALIDA
    (10) INSTRUCCION -> . CONVERTIR
    (11) INSTRUCCION -> . CONDICIONAL_IF
    (12) INSTRUCCION -> . CONDICIONAL_CASE
    (13) INSTRUCCION -> . ITERACION_FOR
    (14) INSTRUCCION -> . ITERACION_WHILE
    (15) INSTRUCCION -> . BLOQUE
    (16) INSTRUCCION -> . VACIO
    (71) POST -> . TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
    (20) ASIGNACION -> . EXPRESION TkAsig EXPRESION
    (21) ENTRADA -> . TkRead IDENTIFICADOR
    (22) SALIDA -> . TkPrint LISTA_VAR
    (23) SALIDA -> . TkPrintln LISTA_VAR
    (24) SALIDA -> . TkPrint CADENA
    (25) SALIDA -> . TkPrintln CADENA
    (67) CONVERTIR -> . TkItoi TkOpenPar IDENTIFICADOR TkClosePar
    (68) CONVERTIR -> . TkLen TkOpenPar IDENTIFICADOR TkClosePar
    (69) CONVERTIR -> . TkMax TkOpenPar IDENTIFICADOR TkClosePar
    (70) CONVERTIR -> . TkMin TkOpenPar IDENTIFICADOR TkClosePar
    (27) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION
    (28) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen SECUENCIACION
    (29) CONDICIONAL_CASE -> . TkCase EXPRESION TkOf LISTA_CASE TkEnd
    (32) ITERACION_FOR -> . TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION
    (33) ITERACION_WHILE -> . TkWhile EXP_BOOL TkDo SECUENCIACION
    (2) BLOQUE -> . TkBegin VACIO TkEnd
    (3) BLOQUE -> . TkBegin SECUENCIACION TkEnd VACIO
    (4) BLOQUE -> . TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd
    (5) BLOQUE -> . TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO
    (76) VACIO -> .
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

  ! shift/reduce conflict for TkNum resolved as shift
  ! shift/reduce conflict for TkOpenPar resolved as shift
  ! shift/reduce conflict for TkId resolved as shift
  ! shift/reduce conflict for TkTrue resolved as shift
  ! shift/reduce conflict for TkFalse resolved as shift
  ! shift/reduce conflict for TkNot resolved as shift
    TkOpenBra       shift and go to state 16
    TkRead          shift and go to state 18
    TkPrint         shift and go to state 20
    TkPrintln       shift and go to state 21
    TkItoi          shift and go to state 22
    TkLen           shift and go to state 24
    TkMax           shift and go to state 25
    TkMin           shift and go to state 26
    TkIf            shift and go to state 27
    TkCase          shift and go to state 29
    TkFor           shift and go to state 30
    TkWhile         shift and go to state 31
    TkBegin         shift and go to state 32
    TkEnd           reduce using rule 76 (VACIO -> .)
    $end            reduce using rule 76 (VACIO -> .)
    TkSemicolon     reduce using rule 76 (VACIO -> .)
    TkElse          reduce using rule 76 (VACIO -> .)
    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

  ! TkNum           [ reduce using rule 76 (VACIO -> .) ]
  ! TkId            [ reduce using rule 76 (VACIO -> .) ]
  ! TkOpenPar       [ reduce using rule 76 (VACIO -> .) ]
  ! TkTrue          [ reduce using rule 76 (VACIO -> .) ]
  ! TkFalse         [ reduce using rule 76 (VACIO -> .) ]
  ! TkNot           [ reduce using rule 76 (VACIO -> .) ]

    EXP_BOOL                       shift and go to state 28
    SECUENCIACION                  shift and go to state 120
    INSTRUCCION                    shift and go to state 4
    POST                           shift and go to state 5
    ASIGNACION                     shift and go to state 6
    ENTRADA                        shift and go to state 7
    SALIDA                         shift and go to state 8
    CONVERTIR                      shift and go to state 9
    CONDICIONAL_IF                 shift and go to state 10
    CONDICIONAL_CASE               shift and go to state 11
    ITERACION_FOR                  shift and go to state 12
    ITERACION_WHILE                shift and go to state 13
    BLOQUE                         shift and go to state 14
    VACIO                          shift and go to state 15
    EXPRESION                      shift and go to state 17
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35

state 106

    (29) CONDICIONAL_CASE -> TkCase EXPRESION TkOf . LISTA_CASE TkEnd
    (30) LISTA_CASE -> . EXPRESION TkArrow SECUENCIACION
    (31) LISTA_CASE -> . EXPRESION TkArrow SECUENCIACION LISTA_CASE
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 121
    LISTA_CASE                     shift and go to state 122
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 107

    (32) ITERACION_FOR -> TkFor IDENTIFICADOR TkIn . EXPRESION TkDo SECUENCIACION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    IDENTIFICADOR                  shift and go to state 19
    EXPRESION                      shift and go to state 123
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 108

    (33) ITERACION_WHILE -> TkWhile EXP_BOOL TkDo . SECUENCIACION
    (17) SECUENCIACION -> . INSTRUCCION
    (18) SECUENCIACION -> . INSTRUCCION TkSemicolon SECUENCIACION
    (6) INSTRUCCION -> . POST
    (7) INSTRUCCION -> . ASIGNACION
    (8) INSTRUCCION -> . ENTRADA
    (9) INSTRUCCION -> . SALIDA
    (10) INSTRUCCION -> . CONVERTIR
    (11) INSTRUCCION -> . CONDICIONAL_IF
    (12) INSTRUCCION -> . CONDICIONAL_CASE
    (13) INSTRUCCION -> . ITERACION_FOR
    (14) INSTRUCCION -> . ITERACION_WHILE
    (15) INSTRUCCION -> . BLOQUE
    (16) INSTRUCCION -> . VACIO
    (71) POST -> . TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
    (20) ASIGNACION -> . EXPRESION TkAsig EXPRESION
    (21) ENTRADA -> . TkRead IDENTIFICADOR
    (22) SALIDA -> . TkPrint LISTA_VAR
    (23) SALIDA -> . TkPrintln LISTA_VAR
    (24) SALIDA -> . TkPrint CADENA
    (25) SALIDA -> . TkPrintln CADENA
    (67) CONVERTIR -> . TkItoi TkOpenPar IDENTIFICADOR TkClosePar
    (68) CONVERTIR -> . TkLen TkOpenPar IDENTIFICADOR TkClosePar
    (69) CONVERTIR -> . TkMax TkOpenPar IDENTIFICADOR TkClosePar
    (70) CONVERTIR -> . TkMin TkOpenPar IDENTIFICADOR TkClosePar
    (27) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION
    (28) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen SECUENCIACION
    (29) CONDICIONAL_CASE -> . TkCase EXPRESION TkOf LISTA_CASE TkEnd
    (32) ITERACION_FOR -> . TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION
    (33) ITERACION_WHILE -> . TkWhile EXP_BOOL TkDo SECUENCIACION
    (2) BLOQUE -> . TkBegin VACIO TkEnd
    (3) BLOQUE -> . TkBegin SECUENCIACION TkEnd VACIO
    (4) BLOQUE -> . TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd
    (5) BLOQUE -> . TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO
    (76) VACIO -> .
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

  ! shift/reduce conflict for TkNum resolved as shift
  ! shift/reduce conflict for TkOpenPar resolved as shift
  ! shift/reduce conflict for TkId resolved as shift
  ! shift/reduce conflict for TkTrue resolved as shift
  ! shift/reduce conflict for TkFalse resolved as shift
  ! shift/reduce conflict for TkNot resolved as shift
    TkOpenBra       shift and go to state 16
    TkRead          shift and go to state 18
    TkPrint         shift and go to state 20
    TkPrintln       shift and go to state 21
    TkItoi          shift and go to state 22
    TkLen           shift and go to state 24
    TkMax           shift and go to state 25
    TkMin           shift and go to state 26
    TkIf            shift and go to state 27
    TkCase          shift and go to state 29
    TkFor           shift and go to state 30
    TkWhile         shift and go to state 31
    TkBegin         shift and go to state 32
    TkEnd           reduce using rule 76 (VACIO -> .)
    $end            reduce using rule 76 (VACIO -> .)
    TkSemicolon     reduce using rule 76 (VACIO -> .)
    TkElse          reduce using rule 76 (VACIO -> .)
    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

  ! TkNum           [ reduce using rule 76 (VACIO -> .) ]
  ! TkId            [ reduce using rule 76 (VACIO -> .) ]
  ! TkOpenPar       [ reduce using rule 76 (VACIO -> .) ]
  ! TkTrue          [ reduce using rule 76 (VACIO -> .) ]
  ! TkFalse         [ reduce using rule 76 (VACIO -> .) ]
  ! TkNot           [ reduce using rule 76 (VACIO -> .) ]

    EXP_BOOL                       shift and go to state 28
    SECUENCIACION                  shift and go to state 124
    INSTRUCCION                    shift and go to state 4
    POST                           shift and go to state 5
    ASIGNACION                     shift and go to state 6
    ENTRADA                        shift and go to state 7
    SALIDA                         shift and go to state 8
    CONVERTIR                      shift and go to state 9
    CONDICIONAL_IF                 shift and go to state 10
    CONDICIONAL_CASE               shift and go to state 11
    ITERACION_FOR                  shift and go to state 12
    ITERACION_WHILE                shift and go to state 13
    BLOQUE                         shift and go to state 14
    VACIO                          shift and go to state 15
    EXPRESION                      shift and go to state 17
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35

state 109

    (2) BLOQUE -> TkBegin VACIO TkEnd .

    $end            reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)
    TkEnd           reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)
    TkSemicolon     reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)
    TkElse          reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)
    TkNum           reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)
    TkId            reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)
    TkOpenPar       reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)
    TkTrue          reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)
    TkFalse         reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)
    TkNot           reduce using rule 2 (BLOQUE -> TkBegin VACIO TkEnd .)


state 110

    (3) BLOQUE -> TkBegin SECUENCIACION TkEnd . VACIO
    (76) VACIO -> .

    TkEnd           reduce using rule 76 (VACIO -> .)
    $end            reduce using rule 76 (VACIO -> .)
    TkSemicolon     reduce using rule 76 (VACIO -> .)
    TkElse          reduce using rule 76 (VACIO -> .)
    TkNum           reduce using rule 76 (VACIO -> .)
    TkId            reduce using rule 76 (VACIO -> .)
    TkOpenPar       reduce using rule 76 (VACIO -> .)
    TkTrue          reduce using rule 76 (VACIO -> .)
    TkFalse         reduce using rule 76 (VACIO -> .)
    TkNot           reduce using rule 76 (VACIO -> .)

    VACIO                          shift and go to state 125

state 111

    (4) BLOQUE -> TkBegin TkDeclare DECL_VAR . SECUENCIACION TkEnd
    (5) BLOQUE -> TkBegin TkDeclare DECL_VAR . SECUENCIACION TkEnd VACIO
    (17) SECUENCIACION -> . INSTRUCCION
    (18) SECUENCIACION -> . INSTRUCCION TkSemicolon SECUENCIACION
    (6) INSTRUCCION -> . POST
    (7) INSTRUCCION -> . ASIGNACION
    (8) INSTRUCCION -> . ENTRADA
    (9) INSTRUCCION -> . SALIDA
    (10) INSTRUCCION -> . CONVERTIR
    (11) INSTRUCCION -> . CONDICIONAL_IF
    (12) INSTRUCCION -> . CONDICIONAL_CASE
    (13) INSTRUCCION -> . ITERACION_FOR
    (14) INSTRUCCION -> . ITERACION_WHILE
    (15) INSTRUCCION -> . BLOQUE
    (16) INSTRUCCION -> . VACIO
    (71) POST -> . TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
    (20) ASIGNACION -> . EXPRESION TkAsig EXPRESION
    (21) ENTRADA -> . TkRead IDENTIFICADOR
    (22) SALIDA -> . TkPrint LISTA_VAR
    (23) SALIDA -> . TkPrintln LISTA_VAR
    (24) SALIDA -> . TkPrint CADENA
    (25) SALIDA -> . TkPrintln CADENA
    (67) CONVERTIR -> . TkItoi TkOpenPar IDENTIFICADOR TkClosePar
    (68) CONVERTIR -> . TkLen TkOpenPar IDENTIFICADOR TkClosePar
    (69) CONVERTIR -> . TkMax TkOpenPar IDENTIFICADOR TkClosePar
    (70) CONVERTIR -> . TkMin TkOpenPar IDENTIFICADOR TkClosePar
    (27) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION
    (28) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen SECUENCIACION
    (29) CONDICIONAL_CASE -> . TkCase EXPRESION TkOf LISTA_CASE TkEnd
    (32) ITERACION_FOR -> . TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION
    (33) ITERACION_WHILE -> . TkWhile EXP_BOOL TkDo SECUENCIACION
    (2) BLOQUE -> . TkBegin VACIO TkEnd
    (3) BLOQUE -> . TkBegin SECUENCIACION TkEnd VACIO
    (4) BLOQUE -> . TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd
    (5) BLOQUE -> . TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO
    (76) VACIO -> .
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

  ! shift/reduce conflict for TkNum resolved as shift
  ! shift/reduce conflict for TkOpenPar resolved as shift
  ! shift/reduce conflict for TkId resolved as shift
  ! shift/reduce conflict for TkTrue resolved as shift
  ! shift/reduce conflict for TkFalse resolved as shift
  ! shift/reduce conflict for TkNot resolved as shift
    TkOpenBra       shift and go to state 16
    TkRead          shift and go to state 18
    TkPrint         shift and go to state 20
    TkPrintln       shift and go to state 21
    TkItoi          shift and go to state 22
    TkLen           shift and go to state 24
    TkMax           shift and go to state 25
    TkMin           shift and go to state 26
    TkIf            shift and go to state 27
    TkCase          shift and go to state 29
    TkFor           shift and go to state 30
    TkWhile         shift and go to state 31
    TkBegin         shift and go to state 32
    TkEnd           reduce using rule 76 (VACIO -> .)
    $end            reduce using rule 76 (VACIO -> .)
    TkSemicolon     reduce using rule 76 (VACIO -> .)
    TkElse          reduce using rule 76 (VACIO -> .)
    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

  ! TkNum           [ reduce using rule 76 (VACIO -> .) ]
  ! TkId            [ reduce using rule 76 (VACIO -> .) ]
  ! TkOpenPar       [ reduce using rule 76 (VACIO -> .) ]
  ! TkTrue          [ reduce using rule 76 (VACIO -> .) ]
  ! TkFalse         [ reduce using rule 76 (VACIO -> .) ]
  ! TkNot           [ reduce using rule 76 (VACIO -> .) ]

    SECUENCIACION                  shift and go to state 126
    VACIO                          shift and go to state 15
    INSTRUCCION                    shift and go to state 4
    POST                           shift and go to state 5
    ASIGNACION                     shift and go to state 6
    ENTRADA                        shift and go to state 7
    SALIDA                         shift and go to state 8
    CONVERTIR                      shift and go to state 9
    CONDICIONAL_IF                 shift and go to state 10
    CONDICIONAL_CASE               shift and go to state 11
    ITERACION_FOR                  shift and go to state 12
    ITERACION_WHILE                shift and go to state 13
    BLOQUE                         shift and go to state 14
    EXPRESION                      shift and go to state 17
    IDENTIFICADOR                  shift and go to state 19
    EXP_BOOL                       shift and go to state 28
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35

state 112

    (34) DECL_VAR -> LISTA_VAR . TkAs LISTA_TIPO

    TkAs            shift and go to state 127


state 113

    (71) POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR . TkCloseBra

    TkCloseBra      shift and go to state 128


state 114

    (72) EXP_CUANTIFICADOR -> TkOpenPar . TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> TkOpenPar . TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (74) EXP_CUANTIFICADOR -> TkOpenPar . TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (75) EXP_CUANTIFICADOR -> TkOpenPar . TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar

    TkForall        shift and go to state 129
    TkExists        shift and go to state 130


state 115

    (36) LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .

    TkAs            reduce using rule 36 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    $end            reduce using rule 36 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    TkEnd           reduce using rule 36 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    TkSemicolon     reduce using rule 36 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    TkElse          reduce using rule 36 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    TkNum           reduce using rule 36 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    TkId            reduce using rule 36 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    TkOpenPar       reduce using rule 36 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    TkTrue          reduce using rule 36 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    TkFalse         reduce using rule 36 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)
    TkNot           reduce using rule 36 (LISTA_VAR -> IDENTIFICADOR TkComma LISTA_VAR .)


state 116

    (67) CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .

    $end            reduce using rule 67 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)
    TkEnd           reduce using rule 67 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)
    TkSemicolon     reduce using rule 67 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)
    TkElse          reduce using rule 67 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)
    TkNum           reduce using rule 67 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)
    TkId            reduce using rule 67 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)
    TkOpenPar       reduce using rule 67 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)
    TkTrue          reduce using rule 67 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)
    TkFalse         reduce using rule 67 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)
    TkNot           reduce using rule 67 (CONVERTIR -> TkItoi TkOpenPar IDENTIFICADOR TkClosePar .)


state 117

    (68) CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .

    $end            reduce using rule 68 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)
    TkEnd           reduce using rule 68 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)
    TkSemicolon     reduce using rule 68 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)
    TkElse          reduce using rule 68 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)
    TkNum           reduce using rule 68 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)
    TkId            reduce using rule 68 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)
    TkOpenPar       reduce using rule 68 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)
    TkTrue          reduce using rule 68 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)
    TkFalse         reduce using rule 68 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)
    TkNot           reduce using rule 68 (CONVERTIR -> TkLen TkOpenPar IDENTIFICADOR TkClosePar .)


state 118

    (69) CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .

    $end            reduce using rule 69 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)
    TkEnd           reduce using rule 69 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)
    TkSemicolon     reduce using rule 69 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)
    TkElse          reduce using rule 69 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)
    TkNum           reduce using rule 69 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)
    TkId            reduce using rule 69 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)
    TkOpenPar       reduce using rule 69 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)
    TkTrue          reduce using rule 69 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)
    TkFalse         reduce using rule 69 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)
    TkNot           reduce using rule 69 (CONVERTIR -> TkMax TkOpenPar IDENTIFICADOR TkClosePar .)


state 119

    (70) CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .

    $end            reduce using rule 70 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)
    TkEnd           reduce using rule 70 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)
    TkSemicolon     reduce using rule 70 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)
    TkElse          reduce using rule 70 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)
    TkNum           reduce using rule 70 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)
    TkId            reduce using rule 70 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)
    TkOpenPar       reduce using rule 70 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)
    TkTrue          reduce using rule 70 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)
    TkFalse         reduce using rule 70 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)
    TkNot           reduce using rule 70 (CONVERTIR -> TkMin TkOpenPar IDENTIFICADOR TkClosePar .)


state 120

    (27) CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION . TkElse SECUENCIACION
    (28) CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION .

  ! shift/reduce conflict for TkElse resolved as shift
    TkElse          shift and go to state 131
    $end            reduce using rule 28 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION .)
    TkEnd           reduce using rule 28 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION .)
    TkSemicolon     reduce using rule 28 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION .)
    TkNum           reduce using rule 28 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION .)
    TkId            reduce using rule 28 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION .)
    TkOpenPar       reduce using rule 28 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION .)
    TkTrue          reduce using rule 28 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION .)
    TkFalse         reduce using rule 28 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION .)
    TkNot           reduce using rule 28 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION .)

  ! TkElse          [ reduce using rule 28 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION .) ]


state 121

    (30) LISTA_CASE -> EXPRESION . TkArrow SECUENCIACION
    (31) LISTA_CASE -> EXPRESION . TkArrow SECUENCIACION LISTA_CASE
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkArrow         shift and go to state 132
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45
    TkPlus          shift and go to state 46
    TkMinus         shift and go to state 47
    TkSoForth       shift and go to state 48
    TkCap           shift and go to state 49
    TkAnd           shift and go to state 50
    TkOr            shift and go to state 51
    TkIn            shift and go to state 52
    TkEqual         shift and go to state 53
    TkNEqual        shift and go to state 54
    TkGreater       shift and go to state 55
    TkGeq           shift and go to state 56
    TkLess          shift and go to state 57
    TkLeq           shift and go to state 58


state 122

    (29) CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE . TkEnd

    TkEnd           shift and go to state 133


state 123

    (32) ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION . TkDo SECUENCIACION
    (48) EXP_ENTEROS -> EXPRESION . TkMod EXPRESION
    (49) EXP_ENTEROS -> EXPRESION . TkMult EXPRESION
    (50) EXP_ENTEROS -> EXPRESION . TkDiv EXPRESION
    (51) EXP_ENTEROS -> EXPRESION . TkPlus EXPRESION
    (52) EXP_ENTEROS -> EXPRESION . TkMinus EXPRESION
    (53) EXP_INTERVALOS -> EXPRESION . TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> EXPRESION . TkCap EXPRESION
    (58) EXP_BOOL -> EXPRESION . TkAnd EXPRESION
    (59) EXP_BOOL -> EXPRESION . TkOr EXPRESION
    (60) EXP_BOOL -> EXPRESION . TkIn EXPRESION
    (61) EXP_BOOL -> EXPRESION . TkEqual EXPRESION
    (62) EXP_BOOL -> EXPRESION . TkNEqual EXPRESION
    (63) EXP_BOOL -> EXPRESION . TkGreater EXPRESION
    (64) EXP_BOOL -> EXPRESION . TkGeq EXPRESION
    (65) EXP_BOOL -> EXPRESION . TkLess EXPRESION
    (66) EXP_BOOL -> EXPRESION . TkLeq EXPRESION

    TkDo            shift and go to state 134
    TkMod           shift and go to state 43
    TkMult          shift and go to state 44
    TkDiv           shift and go to state 45
    TkPlus          shift and go to state 46
    TkMinus         shift and go to state 47
    TkSoForth       shift and go to state 48
    TkCap           shift and go to state 49
    TkAnd           shift and go to state 50
    TkOr            shift and go to state 51
    TkIn            shift and go to state 52
    TkEqual         shift and go to state 53
    TkNEqual        shift and go to state 54
    TkGreater       shift and go to state 55
    TkGeq           shift and go to state 56
    TkLess          shift and go to state 57
    TkLeq           shift and go to state 58


state 124

    (33) ITERACION_WHILE -> TkWhile EXP_BOOL TkDo SECUENCIACION .

    $end            reduce using rule 33 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo SECUENCIACION .)
    TkEnd           reduce using rule 33 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo SECUENCIACION .)
    TkSemicolon     reduce using rule 33 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo SECUENCIACION .)
    TkElse          reduce using rule 33 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo SECUENCIACION .)
    TkNum           reduce using rule 33 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo SECUENCIACION .)
    TkId            reduce using rule 33 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo SECUENCIACION .)
    TkOpenPar       reduce using rule 33 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo SECUENCIACION .)
    TkTrue          reduce using rule 33 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo SECUENCIACION .)
    TkFalse         reduce using rule 33 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo SECUENCIACION .)
    TkNot           reduce using rule 33 (ITERACION_WHILE -> TkWhile EXP_BOOL TkDo SECUENCIACION .)


state 125

    (3) BLOQUE -> TkBegin SECUENCIACION TkEnd VACIO .

    $end            reduce using rule 3 (BLOQUE -> TkBegin SECUENCIACION TkEnd VACIO .)
    TkEnd           reduce using rule 3 (BLOQUE -> TkBegin SECUENCIACION TkEnd VACIO .)
    TkSemicolon     reduce using rule 3 (BLOQUE -> TkBegin SECUENCIACION TkEnd VACIO .)
    TkElse          reduce using rule 3 (BLOQUE -> TkBegin SECUENCIACION TkEnd VACIO .)
    TkNum           reduce using rule 3 (BLOQUE -> TkBegin SECUENCIACION TkEnd VACIO .)
    TkId            reduce using rule 3 (BLOQUE -> TkBegin SECUENCIACION TkEnd VACIO .)
    TkOpenPar       reduce using rule 3 (BLOQUE -> TkBegin SECUENCIACION TkEnd VACIO .)
    TkTrue          reduce using rule 3 (BLOQUE -> TkBegin SECUENCIACION TkEnd VACIO .)
    TkFalse         reduce using rule 3 (BLOQUE -> TkBegin SECUENCIACION TkEnd VACIO .)
    TkNot           reduce using rule 3 (BLOQUE -> TkBegin SECUENCIACION TkEnd VACIO .)


state 126

    (4) BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION . TkEnd
    (5) BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION . TkEnd VACIO

    TkEnd           shift and go to state 135


state 127

    (34) DECL_VAR -> LISTA_VAR TkAs . LISTA_TIPO
    (37) LISTA_TIPO -> . DATO
    (38) LISTA_TIPO -> . DATO TkComma LISTA_TIPO
    (39) DATO -> . TkInt
    (40) DATO -> . TkBool
    (41) DATO -> . TkInter

    TkInt           shift and go to state 138
    TkBool          shift and go to state 139
    TkInter         shift and go to state 140

    LISTA_TIPO                     shift and go to state 136
    DATO                           shift and go to state 137

state 128

    (71) POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .

    $end            reduce using rule 71 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)
    TkEnd           reduce using rule 71 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)
    TkSemicolon     reduce using rule 71 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)
    TkElse          reduce using rule 71 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)
    TkNum           reduce using rule 71 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)
    TkId            reduce using rule 71 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)
    TkOpenPar       reduce using rule 71 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)
    TkTrue          reduce using rule 71 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)
    TkFalse         reduce using rule 71 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)
    TkNot           reduce using rule 71 (POST -> TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra .)


state 129

    (72) EXP_CUANTIFICADOR -> TkOpenPar TkForall . IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> TkOpenPar TkForall . IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (19) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 36

    IDENTIFICADOR                  shift and go to state 141

state 130

    (74) EXP_CUANTIFICADOR -> TkOpenPar TkExists . IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (75) EXP_CUANTIFICADOR -> TkOpenPar TkExists . IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (19) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 36

    IDENTIFICADOR                  shift and go to state 142

state 131

    (27) CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION TkElse . SECUENCIACION
    (17) SECUENCIACION -> . INSTRUCCION
    (18) SECUENCIACION -> . INSTRUCCION TkSemicolon SECUENCIACION
    (6) INSTRUCCION -> . POST
    (7) INSTRUCCION -> . ASIGNACION
    (8) INSTRUCCION -> . ENTRADA
    (9) INSTRUCCION -> . SALIDA
    (10) INSTRUCCION -> . CONVERTIR
    (11) INSTRUCCION -> . CONDICIONAL_IF
    (12) INSTRUCCION -> . CONDICIONAL_CASE
    (13) INSTRUCCION -> . ITERACION_FOR
    (14) INSTRUCCION -> . ITERACION_WHILE
    (15) INSTRUCCION -> . BLOQUE
    (16) INSTRUCCION -> . VACIO
    (71) POST -> . TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
    (20) ASIGNACION -> . EXPRESION TkAsig EXPRESION
    (21) ENTRADA -> . TkRead IDENTIFICADOR
    (22) SALIDA -> . TkPrint LISTA_VAR
    (23) SALIDA -> . TkPrintln LISTA_VAR
    (24) SALIDA -> . TkPrint CADENA
    (25) SALIDA -> . TkPrintln CADENA
    (67) CONVERTIR -> . TkItoi TkOpenPar IDENTIFICADOR TkClosePar
    (68) CONVERTIR -> . TkLen TkOpenPar IDENTIFICADOR TkClosePar
    (69) CONVERTIR -> . TkMax TkOpenPar IDENTIFICADOR TkClosePar
    (70) CONVERTIR -> . TkMin TkOpenPar IDENTIFICADOR TkClosePar
    (27) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION
    (28) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen SECUENCIACION
    (29) CONDICIONAL_CASE -> . TkCase EXPRESION TkOf LISTA_CASE TkEnd
    (32) ITERACION_FOR -> . TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION
    (33) ITERACION_WHILE -> . TkWhile EXP_BOOL TkDo SECUENCIACION
    (2) BLOQUE -> . TkBegin VACIO TkEnd
    (3) BLOQUE -> . TkBegin SECUENCIACION TkEnd VACIO
    (4) BLOQUE -> . TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd
    (5) BLOQUE -> . TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO
    (76) VACIO -> .
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

  ! shift/reduce conflict for TkNum resolved as shift
  ! shift/reduce conflict for TkOpenPar resolved as shift
  ! shift/reduce conflict for TkId resolved as shift
  ! shift/reduce conflict for TkTrue resolved as shift
  ! shift/reduce conflict for TkFalse resolved as shift
  ! shift/reduce conflict for TkNot resolved as shift
    TkOpenBra       shift and go to state 16
    TkRead          shift and go to state 18
    TkPrint         shift and go to state 20
    TkPrintln       shift and go to state 21
    TkItoi          shift and go to state 22
    TkLen           shift and go to state 24
    TkMax           shift and go to state 25
    TkMin           shift and go to state 26
    TkIf            shift and go to state 27
    TkCase          shift and go to state 29
    TkFor           shift and go to state 30
    TkWhile         shift and go to state 31
    TkBegin         shift and go to state 32
    TkEnd           reduce using rule 76 (VACIO -> .)
    $end            reduce using rule 76 (VACIO -> .)
    TkSemicolon     reduce using rule 76 (VACIO -> .)
    TkElse          reduce using rule 76 (VACIO -> .)
    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

  ! TkNum           [ reduce using rule 76 (VACIO -> .) ]
  ! TkId            [ reduce using rule 76 (VACIO -> .) ]
  ! TkOpenPar       [ reduce using rule 76 (VACIO -> .) ]
  ! TkTrue          [ reduce using rule 76 (VACIO -> .) ]
  ! TkFalse         [ reduce using rule 76 (VACIO -> .) ]
  ! TkNot           [ reduce using rule 76 (VACIO -> .) ]

    EXP_BOOL                       shift and go to state 28
    SECUENCIACION                  shift and go to state 143
    INSTRUCCION                    shift and go to state 4
    POST                           shift and go to state 5
    ASIGNACION                     shift and go to state 6
    ENTRADA                        shift and go to state 7
    SALIDA                         shift and go to state 8
    CONVERTIR                      shift and go to state 9
    CONDICIONAL_IF                 shift and go to state 10
    CONDICIONAL_CASE               shift and go to state 11
    ITERACION_FOR                  shift and go to state 12
    ITERACION_WHILE                shift and go to state 13
    BLOQUE                         shift and go to state 14
    VACIO                          shift and go to state 15
    EXPRESION                      shift and go to state 17
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35

state 132

    (30) LISTA_CASE -> EXPRESION TkArrow . SECUENCIACION
    (31) LISTA_CASE -> EXPRESION TkArrow . SECUENCIACION LISTA_CASE
    (17) SECUENCIACION -> . INSTRUCCION
    (18) SECUENCIACION -> . INSTRUCCION TkSemicolon SECUENCIACION
    (6) INSTRUCCION -> . POST
    (7) INSTRUCCION -> . ASIGNACION
    (8) INSTRUCCION -> . ENTRADA
    (9) INSTRUCCION -> . SALIDA
    (10) INSTRUCCION -> . CONVERTIR
    (11) INSTRUCCION -> . CONDICIONAL_IF
    (12) INSTRUCCION -> . CONDICIONAL_CASE
    (13) INSTRUCCION -> . ITERACION_FOR
    (14) INSTRUCCION -> . ITERACION_WHILE
    (15) INSTRUCCION -> . BLOQUE
    (16) INSTRUCCION -> . VACIO
    (71) POST -> . TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
    (20) ASIGNACION -> . EXPRESION TkAsig EXPRESION
    (21) ENTRADA -> . TkRead IDENTIFICADOR
    (22) SALIDA -> . TkPrint LISTA_VAR
    (23) SALIDA -> . TkPrintln LISTA_VAR
    (24) SALIDA -> . TkPrint CADENA
    (25) SALIDA -> . TkPrintln CADENA
    (67) CONVERTIR -> . TkItoi TkOpenPar IDENTIFICADOR TkClosePar
    (68) CONVERTIR -> . TkLen TkOpenPar IDENTIFICADOR TkClosePar
    (69) CONVERTIR -> . TkMax TkOpenPar IDENTIFICADOR TkClosePar
    (70) CONVERTIR -> . TkMin TkOpenPar IDENTIFICADOR TkClosePar
    (27) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION
    (28) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen SECUENCIACION
    (29) CONDICIONAL_CASE -> . TkCase EXPRESION TkOf LISTA_CASE TkEnd
    (32) ITERACION_FOR -> . TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION
    (33) ITERACION_WHILE -> . TkWhile EXP_BOOL TkDo SECUENCIACION
    (2) BLOQUE -> . TkBegin VACIO TkEnd
    (3) BLOQUE -> . TkBegin SECUENCIACION TkEnd VACIO
    (4) BLOQUE -> . TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd
    (5) BLOQUE -> . TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO
    (76) VACIO -> .
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

  ! shift/reduce conflict for TkNum resolved as shift
  ! shift/reduce conflict for TkOpenPar resolved as shift
  ! shift/reduce conflict for TkId resolved as shift
  ! shift/reduce conflict for TkTrue resolved as shift
  ! shift/reduce conflict for TkFalse resolved as shift
  ! shift/reduce conflict for TkNot resolved as shift
    TkOpenBra       shift and go to state 16
    TkRead          shift and go to state 18
    TkPrint         shift and go to state 20
    TkPrintln       shift and go to state 21
    TkItoi          shift and go to state 22
    TkLen           shift and go to state 24
    TkMax           shift and go to state 25
    TkMin           shift and go to state 26
    TkIf            shift and go to state 27
    TkCase          shift and go to state 29
    TkFor           shift and go to state 30
    TkWhile         shift and go to state 31
    TkBegin         shift and go to state 32
    TkEnd           reduce using rule 76 (VACIO -> .)
    $end            reduce using rule 76 (VACIO -> .)
    TkSemicolon     reduce using rule 76 (VACIO -> .)
    TkElse          reduce using rule 76 (VACIO -> .)
    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

  ! TkNum           [ reduce using rule 76 (VACIO -> .) ]
  ! TkId            [ reduce using rule 76 (VACIO -> .) ]
  ! TkOpenPar       [ reduce using rule 76 (VACIO -> .) ]
  ! TkTrue          [ reduce using rule 76 (VACIO -> .) ]
  ! TkFalse         [ reduce using rule 76 (VACIO -> .) ]
  ! TkNot           [ reduce using rule 76 (VACIO -> .) ]

    EXPRESION                      shift and go to state 17
    SECUENCIACION                  shift and go to state 144
    INSTRUCCION                    shift and go to state 4
    POST                           shift and go to state 5
    ASIGNACION                     shift and go to state 6
    ENTRADA                        shift and go to state 7
    SALIDA                         shift and go to state 8
    CONVERTIR                      shift and go to state 9
    CONDICIONAL_IF                 shift and go to state 10
    CONDICIONAL_CASE               shift and go to state 11
    ITERACION_FOR                  shift and go to state 12
    ITERACION_WHILE                shift and go to state 13
    BLOQUE                         shift and go to state 14
    VACIO                          shift and go to state 15
    IDENTIFICADOR                  shift and go to state 19
    EXP_BOOL                       shift and go to state 28
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35

state 133

    (29) CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .

    $end            reduce using rule 29 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)
    TkEnd           reduce using rule 29 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)
    TkSemicolon     reduce using rule 29 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)
    TkElse          reduce using rule 29 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)
    TkNum           reduce using rule 29 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)
    TkId            reduce using rule 29 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)
    TkOpenPar       reduce using rule 29 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)
    TkTrue          reduce using rule 29 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)
    TkFalse         reduce using rule 29 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)
    TkNot           reduce using rule 29 (CONDICIONAL_CASE -> TkCase EXPRESION TkOf LISTA_CASE TkEnd .)


state 134

    (32) ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo . SECUENCIACION
    (17) SECUENCIACION -> . INSTRUCCION
    (18) SECUENCIACION -> . INSTRUCCION TkSemicolon SECUENCIACION
    (6) INSTRUCCION -> . POST
    (7) INSTRUCCION -> . ASIGNACION
    (8) INSTRUCCION -> . ENTRADA
    (9) INSTRUCCION -> . SALIDA
    (10) INSTRUCCION -> . CONVERTIR
    (11) INSTRUCCION -> . CONDICIONAL_IF
    (12) INSTRUCCION -> . CONDICIONAL_CASE
    (13) INSTRUCCION -> . ITERACION_FOR
    (14) INSTRUCCION -> . ITERACION_WHILE
    (15) INSTRUCCION -> . BLOQUE
    (16) INSTRUCCION -> . VACIO
    (71) POST -> . TkOpenBra TkPost TkTwoPoints EXP_CUANTIFICADOR TkCloseBra
    (20) ASIGNACION -> . EXPRESION TkAsig EXPRESION
    (21) ENTRADA -> . TkRead IDENTIFICADOR
    (22) SALIDA -> . TkPrint LISTA_VAR
    (23) SALIDA -> . TkPrintln LISTA_VAR
    (24) SALIDA -> . TkPrint CADENA
    (25) SALIDA -> . TkPrintln CADENA
    (67) CONVERTIR -> . TkItoi TkOpenPar IDENTIFICADOR TkClosePar
    (68) CONVERTIR -> . TkLen TkOpenPar IDENTIFICADOR TkClosePar
    (69) CONVERTIR -> . TkMax TkOpenPar IDENTIFICADOR TkClosePar
    (70) CONVERTIR -> . TkMin TkOpenPar IDENTIFICADOR TkClosePar
    (27) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION
    (28) CONDICIONAL_IF -> . TkIf EXP_BOOL TkThen SECUENCIACION
    (29) CONDICIONAL_CASE -> . TkCase EXPRESION TkOf LISTA_CASE TkEnd
    (32) ITERACION_FOR -> . TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION
    (33) ITERACION_WHILE -> . TkWhile EXP_BOOL TkDo SECUENCIACION
    (2) BLOQUE -> . TkBegin VACIO TkEnd
    (3) BLOQUE -> . TkBegin SECUENCIACION TkEnd VACIO
    (4) BLOQUE -> . TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd
    (5) BLOQUE -> . TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO
    (76) VACIO -> .
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

  ! shift/reduce conflict for TkNum resolved as shift
  ! shift/reduce conflict for TkOpenPar resolved as shift
  ! shift/reduce conflict for TkId resolved as shift
  ! shift/reduce conflict for TkTrue resolved as shift
  ! shift/reduce conflict for TkFalse resolved as shift
  ! shift/reduce conflict for TkNot resolved as shift
    TkOpenBra       shift and go to state 16
    TkRead          shift and go to state 18
    TkPrint         shift and go to state 20
    TkPrintln       shift and go to state 21
    TkItoi          shift and go to state 22
    TkLen           shift and go to state 24
    TkMax           shift and go to state 25
    TkMin           shift and go to state 26
    TkIf            shift and go to state 27
    TkCase          shift and go to state 29
    TkFor           shift and go to state 30
    TkWhile         shift and go to state 31
    TkBegin         shift and go to state 32
    TkEnd           reduce using rule 76 (VACIO -> .)
    $end            reduce using rule 76 (VACIO -> .)
    TkSemicolon     reduce using rule 76 (VACIO -> .)
    TkElse          reduce using rule 76 (VACIO -> .)
    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

  ! TkNum           [ reduce using rule 76 (VACIO -> .) ]
  ! TkId            [ reduce using rule 76 (VACIO -> .) ]
  ! TkOpenPar       [ reduce using rule 76 (VACIO -> .) ]
  ! TkTrue          [ reduce using rule 76 (VACIO -> .) ]
  ! TkFalse         [ reduce using rule 76 (VACIO -> .) ]
  ! TkNot           [ reduce using rule 76 (VACIO -> .) ]

    IDENTIFICADOR                  shift and go to state 19
    EXPRESION                      shift and go to state 17
    SECUENCIACION                  shift and go to state 145
    INSTRUCCION                    shift and go to state 4
    POST                           shift and go to state 5
    ASIGNACION                     shift and go to state 6
    ENTRADA                        shift and go to state 7
    SALIDA                         shift and go to state 8
    CONVERTIR                      shift and go to state 9
    CONDICIONAL_IF                 shift and go to state 10
    CONDICIONAL_CASE               shift and go to state 11
    ITERACION_FOR                  shift and go to state 12
    ITERACION_WHILE                shift and go to state 13
    BLOQUE                         shift and go to state 14
    VACIO                          shift and go to state 15
    EXP_BOOL                       shift and go to state 28
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35

state 135

    (4) BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .
    (5) BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd . VACIO
    (76) VACIO -> .

  ! reduce/reduce conflict for TkEnd resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
  ! reduce/reduce conflict for $end resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
  ! reduce/reduce conflict for TkSemicolon resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
  ! reduce/reduce conflict for TkElse resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
  ! reduce/reduce conflict for TkNum resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
  ! reduce/reduce conflict for TkId resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
  ! reduce/reduce conflict for TkOpenPar resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
  ! reduce/reduce conflict for TkTrue resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
  ! reduce/reduce conflict for TkFalse resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
  ! reduce/reduce conflict for TkNot resolved using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
    $end            reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
    TkEnd           reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
    TkSemicolon     reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
    TkElse          reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
    TkNum           reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
    TkId            reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
    TkOpenPar       reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
    TkTrue          reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
    TkFalse         reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)
    TkNot           reduce using rule 4 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd .)

  ! TkEnd           [ reduce using rule 76 (VACIO -> .) ]
  ! $end            [ reduce using rule 76 (VACIO -> .) ]
  ! TkSemicolon     [ reduce using rule 76 (VACIO -> .) ]
  ! TkElse          [ reduce using rule 76 (VACIO -> .) ]
  ! TkNum           [ reduce using rule 76 (VACIO -> .) ]
  ! TkId            [ reduce using rule 76 (VACIO -> .) ]
  ! TkOpenPar       [ reduce using rule 76 (VACIO -> .) ]
  ! TkTrue          [ reduce using rule 76 (VACIO -> .) ]
  ! TkFalse         [ reduce using rule 76 (VACIO -> .) ]
  ! TkNot           [ reduce using rule 76 (VACIO -> .) ]

    VACIO                          shift and go to state 146

state 136

    (34) DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .

    TkBegin         reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkSemicolon     reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkOpenBra       reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkRead          reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkPrint         reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkPrintln       reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkItoi          reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkLen           reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkMax           reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkMin           reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkIf            reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkCase          reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkFor           reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkWhile         reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkNum           reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkId            reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkOpenPar       reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkTrue          reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkFalse         reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkNot           reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)
    TkEnd           reduce using rule 34 (DECL_VAR -> LISTA_VAR TkAs LISTA_TIPO .)


state 137

    (37) LISTA_TIPO -> DATO .
    (38) LISTA_TIPO -> DATO . TkComma LISTA_TIPO

    TkBegin         reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkSemicolon     reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkOpenBra       reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkRead          reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkPrint         reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkPrintln       reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkItoi          reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkLen           reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkMax           reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkMin           reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkIf            reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkCase          reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkFor           reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkWhile         reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkNum           reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkId            reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkOpenPar       reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkTrue          reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkFalse         reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkNot           reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkEnd           reduce using rule 37 (LISTA_TIPO -> DATO .)
    TkComma         shift and go to state 147


state 138

    (39) DATO -> TkInt .

    TkBegin         reduce using rule 39 (DATO -> TkInt .)
    TkSemicolon     reduce using rule 39 (DATO -> TkInt .)
    TkOpenBra       reduce using rule 39 (DATO -> TkInt .)
    TkRead          reduce using rule 39 (DATO -> TkInt .)
    TkPrint         reduce using rule 39 (DATO -> TkInt .)
    TkPrintln       reduce using rule 39 (DATO -> TkInt .)
    TkItoi          reduce using rule 39 (DATO -> TkInt .)
    TkLen           reduce using rule 39 (DATO -> TkInt .)
    TkMax           reduce using rule 39 (DATO -> TkInt .)
    TkMin           reduce using rule 39 (DATO -> TkInt .)
    TkIf            reduce using rule 39 (DATO -> TkInt .)
    TkCase          reduce using rule 39 (DATO -> TkInt .)
    TkFor           reduce using rule 39 (DATO -> TkInt .)
    TkWhile         reduce using rule 39 (DATO -> TkInt .)
    TkNum           reduce using rule 39 (DATO -> TkInt .)
    TkId            reduce using rule 39 (DATO -> TkInt .)
    TkOpenPar       reduce using rule 39 (DATO -> TkInt .)
    TkTrue          reduce using rule 39 (DATO -> TkInt .)
    TkFalse         reduce using rule 39 (DATO -> TkInt .)
    TkNot           reduce using rule 39 (DATO -> TkInt .)
    TkEnd           reduce using rule 39 (DATO -> TkInt .)
    TkComma         reduce using rule 39 (DATO -> TkInt .)


state 139

    (40) DATO -> TkBool .

    TkBegin         reduce using rule 40 (DATO -> TkBool .)
    TkSemicolon     reduce using rule 40 (DATO -> TkBool .)
    TkOpenBra       reduce using rule 40 (DATO -> TkBool .)
    TkRead          reduce using rule 40 (DATO -> TkBool .)
    TkPrint         reduce using rule 40 (DATO -> TkBool .)
    TkPrintln       reduce using rule 40 (DATO -> TkBool .)
    TkItoi          reduce using rule 40 (DATO -> TkBool .)
    TkLen           reduce using rule 40 (DATO -> TkBool .)
    TkMax           reduce using rule 40 (DATO -> TkBool .)
    TkMin           reduce using rule 40 (DATO -> TkBool .)
    TkIf            reduce using rule 40 (DATO -> TkBool .)
    TkCase          reduce using rule 40 (DATO -> TkBool .)
    TkFor           reduce using rule 40 (DATO -> TkBool .)
    TkWhile         reduce using rule 40 (DATO -> TkBool .)
    TkNum           reduce using rule 40 (DATO -> TkBool .)
    TkId            reduce using rule 40 (DATO -> TkBool .)
    TkOpenPar       reduce using rule 40 (DATO -> TkBool .)
    TkTrue          reduce using rule 40 (DATO -> TkBool .)
    TkFalse         reduce using rule 40 (DATO -> TkBool .)
    TkNot           reduce using rule 40 (DATO -> TkBool .)
    TkEnd           reduce using rule 40 (DATO -> TkBool .)
    TkComma         reduce using rule 40 (DATO -> TkBool .)


state 140

    (41) DATO -> TkInter .

    TkBegin         reduce using rule 41 (DATO -> TkInter .)
    TkSemicolon     reduce using rule 41 (DATO -> TkInter .)
    TkOpenBra       reduce using rule 41 (DATO -> TkInter .)
    TkRead          reduce using rule 41 (DATO -> TkInter .)
    TkPrint         reduce using rule 41 (DATO -> TkInter .)
    TkPrintln       reduce using rule 41 (DATO -> TkInter .)
    TkItoi          reduce using rule 41 (DATO -> TkInter .)
    TkLen           reduce using rule 41 (DATO -> TkInter .)
    TkMax           reduce using rule 41 (DATO -> TkInter .)
    TkMin           reduce using rule 41 (DATO -> TkInter .)
    TkIf            reduce using rule 41 (DATO -> TkInter .)
    TkCase          reduce using rule 41 (DATO -> TkInter .)
    TkFor           reduce using rule 41 (DATO -> TkInter .)
    TkWhile         reduce using rule 41 (DATO -> TkInter .)
    TkNum           reduce using rule 41 (DATO -> TkInter .)
    TkId            reduce using rule 41 (DATO -> TkInter .)
    TkOpenPar       reduce using rule 41 (DATO -> TkInter .)
    TkTrue          reduce using rule 41 (DATO -> TkInter .)
    TkFalse         reduce using rule 41 (DATO -> TkInter .)
    TkNot           reduce using rule 41 (DATO -> TkInter .)
    TkEnd           reduce using rule 41 (DATO -> TkInter .)
    TkComma         reduce using rule 41 (DATO -> TkInter .)


state 141

    (72) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR . TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR . TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar

    TkPipe          shift and go to state 148


state 142

    (74) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR . TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (75) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR . TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar

    TkPipe          shift and go to state 149


state 143

    (27) CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION .

    $end            reduce using rule 27 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION .)
    TkEnd           reduce using rule 27 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION .)
    TkSemicolon     reduce using rule 27 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION .)
    TkElse          reduce using rule 27 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION .)
    TkNum           reduce using rule 27 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION .)
    TkId            reduce using rule 27 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION .)
    TkOpenPar       reduce using rule 27 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION .)
    TkTrue          reduce using rule 27 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION .)
    TkFalse         reduce using rule 27 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION .)
    TkNot           reduce using rule 27 (CONDICIONAL_IF -> TkIf EXP_BOOL TkThen SECUENCIACION TkElse SECUENCIACION .)


state 144

    (30) LISTA_CASE -> EXPRESION TkArrow SECUENCIACION .
    (31) LISTA_CASE -> EXPRESION TkArrow SECUENCIACION . LISTA_CASE
    (30) LISTA_CASE -> . EXPRESION TkArrow SECUENCIACION
    (31) LISTA_CASE -> . EXPRESION TkArrow SECUENCIACION LISTA_CASE
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkEnd           reduce using rule 30 (LISTA_CASE -> EXPRESION TkArrow SECUENCIACION .)
    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    EXPRESION                      shift and go to state 121
    LISTA_CASE                     shift and go to state 150
    IDENTIFICADOR                  shift and go to state 19
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35
    EXP_BOOL                       shift and go to state 28

state 145

    (32) ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION .

    $end            reduce using rule 32 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION .)
    TkEnd           reduce using rule 32 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION .)
    TkSemicolon     reduce using rule 32 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION .)
    TkElse          reduce using rule 32 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION .)
    TkNum           reduce using rule 32 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION .)
    TkId            reduce using rule 32 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION .)
    TkOpenPar       reduce using rule 32 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION .)
    TkTrue          reduce using rule 32 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION .)
    TkFalse         reduce using rule 32 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION .)
    TkNot           reduce using rule 32 (ITERACION_FOR -> TkFor IDENTIFICADOR TkIn EXPRESION TkDo SECUENCIACION .)


state 146

    (5) BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO .

    $end            reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO .)
    TkEnd           reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO .)
    TkSemicolon     reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO .)
    TkElse          reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO .)
    TkNum           reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO .)
    TkId            reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO .)
    TkOpenPar       reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO .)
    TkTrue          reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO .)
    TkFalse         reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO .)
    TkNot           reduce using rule 5 (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd VACIO .)


state 147

    (38) LISTA_TIPO -> DATO TkComma . LISTA_TIPO
    (37) LISTA_TIPO -> . DATO
    (38) LISTA_TIPO -> . DATO TkComma LISTA_TIPO
    (39) DATO -> . TkInt
    (40) DATO -> . TkBool
    (41) DATO -> . TkInter

    TkInt           shift and go to state 138
    TkBool          shift and go to state 139
    TkInter         shift and go to state 140

    DATO                           shift and go to state 137
    LISTA_TIPO                     shift and go to state 151

state 148

    (72) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe . IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe . IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (19) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 36

    IDENTIFICADOR                  shift and go to state 152

state 149

    (74) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe . IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (75) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe . IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (19) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 36

    IDENTIFICADOR                  shift and go to state 153

state 150

    (31) LISTA_CASE -> EXPRESION TkArrow SECUENCIACION LISTA_CASE .

    TkEnd           reduce using rule 31 (LISTA_CASE -> EXPRESION TkArrow SECUENCIACION LISTA_CASE .)


state 151

    (38) LISTA_TIPO -> DATO TkComma LISTA_TIPO .

    TkBegin         reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkSemicolon     reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkOpenBra       reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkRead          reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkPrint         reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkPrintln       reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkItoi          reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkLen           reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkMax           reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkMin           reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkIf            reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkCase          reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkFor           reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkWhile         reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkNum           reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkId            reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkOpenPar       reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkTrue          reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkFalse         reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkNot           reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)
    TkEnd           reduce using rule 38 (LISTA_TIPO -> DATO TkComma LISTA_TIPO .)


state 152

    (72) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR . TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR . TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar

    TkIn            shift and go to state 154


state 153

    (74) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR . TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (75) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR . TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar

    TkIn            shift and go to state 155


state 154

    (72) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn . IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn . IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (19) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 36

    IDENTIFICADOR                  shift and go to state 156

state 155

    (74) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn . IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (75) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn . IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (19) IDENTIFICADOR -> . TkId

    TkId            shift and go to state 36

    IDENTIFICADOR                  shift and go to state 157

state 156

    (72) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR . TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR . TkTwoPoints EXP_BOOL TkClosePar

    TkTwoPoints     shift and go to state 158


state 157

    (74) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR . TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (75) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR . TkTwoPoints EXP_BOOL TkClosePar

    TkTwoPoints     shift and go to state 159


state 158

    (72) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints . EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints . EXP_BOOL TkClosePar
    (72) EXP_CUANTIFICADOR -> . TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> . TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (74) EXP_CUANTIFICADOR -> . TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (75) EXP_CUANTIFICADOR -> . TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION

    TkOpenPar       shift and go to state 160
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39
    TkNum           shift and go to state 33
    TkId            shift and go to state 36

    IDENTIFICADOR                  shift and go to state 19
    EXP_CUANTIFICADOR              shift and go to state 161
    EXP_BOOL                       shift and go to state 162
    EXPRESION                      shift and go to state 72
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35

state 159

    (74) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints . EXP_CUANTIFICADOR TkClosePar
    (75) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints . EXP_BOOL TkClosePar
    (72) EXP_CUANTIFICADOR -> . TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> . TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (74) EXP_CUANTIFICADOR -> . TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (75) EXP_CUANTIFICADOR -> . TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION

    TkOpenPar       shift and go to state 160
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39
    TkNum           shift and go to state 33
    TkId            shift and go to state 36

    IDENTIFICADOR                  shift and go to state 19
    EXP_CUANTIFICADOR              shift and go to state 163
    EXP_BOOL                       shift and go to state 164
    EXPRESION                      shift and go to state 72
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35

state 160

    (72) EXP_CUANTIFICADOR -> TkOpenPar . TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (73) EXP_CUANTIFICADOR -> TkOpenPar . TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (74) EXP_CUANTIFICADOR -> TkOpenPar . TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar
    (75) EXP_CUANTIFICADOR -> TkOpenPar . TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar
    (47) EXPRESION -> TkOpenPar . EXPRESION TkClosePar
    (42) EXPRESION -> . TkNum
    (43) EXPRESION -> . IDENTIFICADOR
    (44) EXPRESION -> . EXP_ENTEROS
    (45) EXPRESION -> . EXP_INTERVALOS
    (46) EXPRESION -> . EXP_BOOL
    (47) EXPRESION -> . TkOpenPar EXPRESION TkClosePar
    (19) IDENTIFICADOR -> . TkId
    (48) EXP_ENTEROS -> . EXPRESION TkMod EXPRESION
    (49) EXP_ENTEROS -> . EXPRESION TkMult EXPRESION
    (50) EXP_ENTEROS -> . EXPRESION TkDiv EXPRESION
    (51) EXP_ENTEROS -> . EXPRESION TkPlus EXPRESION
    (52) EXP_ENTEROS -> . EXPRESION TkMinus EXPRESION
    (53) EXP_INTERVALOS -> . EXPRESION TkSoForth EXPRESION
    (54) EXP_INTERVALOS -> . EXPRESION TkCap EXPRESION
    (55) EXP_BOOL -> . TkTrue
    (56) EXP_BOOL -> . TkFalse
    (57) EXP_BOOL -> . TkNot EXP_BOOL
    (58) EXP_BOOL -> . EXPRESION TkAnd EXPRESION
    (59) EXP_BOOL -> . EXPRESION TkOr EXPRESION
    (60) EXP_BOOL -> . EXPRESION TkIn EXPRESION
    (61) EXP_BOOL -> . EXPRESION TkEqual EXPRESION
    (62) EXP_BOOL -> . EXPRESION TkNEqual EXPRESION
    (63) EXP_BOOL -> . EXPRESION TkGreater EXPRESION
    (64) EXP_BOOL -> . EXPRESION TkGeq EXPRESION
    (65) EXP_BOOL -> . EXPRESION TkLess EXPRESION
    (66) EXP_BOOL -> . EXPRESION TkLeq EXPRESION

    TkForall        shift and go to state 129
    TkExists        shift and go to state 130
    TkNum           shift and go to state 33
    TkOpenPar       shift and go to state 23
    TkId            shift and go to state 36
    TkTrue          shift and go to state 37
    TkFalse         shift and go to state 38
    TkNot           shift and go to state 39

    IDENTIFICADOR                  shift and go to state 19
    EXP_BOOL                       shift and go to state 28
    EXPRESION                      shift and go to state 67
    EXP_ENTEROS                    shift and go to state 34
    EXP_INTERVALOS                 shift and go to state 35

state 161

    (72) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR . TkClosePar

    TkClosePar      shift and go to state 165


state 162

    (73) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL . TkClosePar
    (46) EXPRESION -> EXP_BOOL .

  ! shift/reduce conflict for TkClosePar resolved as shift
    TkClosePar      shift and go to state 166
    TkAsig          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkOf            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkArrow         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkDo            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkMod           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkMult          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkDiv           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkPlus          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkMinus         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkSoForth       reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkCap           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkAnd           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkThen          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkOr            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkIn            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkEqual         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkNEqual        reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkGreater       reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkGeq           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkLess          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkLeq           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    $end            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkEnd           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkSemicolon     reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkElse          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkNum           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkId            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkOpenPar       reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkTrue          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkFalse         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkNot           reduce using rule 46 (EXPRESION -> EXP_BOOL .)

  ! TkClosePar      [ reduce using rule 46 (EXPRESION -> EXP_BOOL .) ]


state 163

    (74) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR . TkClosePar

    TkClosePar      shift and go to state 167


state 164

    (75) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL . TkClosePar
    (46) EXPRESION -> EXP_BOOL .

  ! shift/reduce conflict for TkClosePar resolved as shift
    TkClosePar      shift and go to state 168
    TkAsig          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkOf            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkArrow         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkDo            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkMod           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkMult          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkDiv           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkPlus          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkMinus         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkSoForth       reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkCap           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkAnd           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkThen          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkOr            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkIn            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkEqual         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkNEqual        reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkGreater       reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkGeq           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkLess          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkLeq           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    $end            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkEnd           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkSemicolon     reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkElse          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkNum           reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkId            reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkOpenPar       reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkTrue          reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkFalse         reduce using rule 46 (EXPRESION -> EXP_BOOL .)
    TkNot           reduce using rule 46 (EXPRESION -> EXP_BOOL .)

  ! TkClosePar      [ reduce using rule 46 (EXPRESION -> EXP_BOOL .) ]


state 165

    (72) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar .

    TkCloseBra      reduce using rule 72 (EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar .)
    TkClosePar      reduce using rule 72 (EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar .)


state 166

    (73) EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar .

    TkCloseBra      reduce using rule 73 (EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar .)
    TkClosePar      reduce using rule 73 (EXP_CUANTIFICADOR -> TkOpenPar TkForall IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar .)


state 167

    (74) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar .

    TkCloseBra      reduce using rule 74 (EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar .)
    TkClosePar      reduce using rule 74 (EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_CUANTIFICADOR TkClosePar .)


state 168

    (75) EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar .

    TkCloseBra      reduce using rule 75 (EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar .)
    TkClosePar      reduce using rule 75 (EXP_CUANTIFICADOR -> TkOpenPar TkExists IDENTIFICADOR TkPipe IDENTIFICADOR TkIn IDENTIFICADOR TkTwoPoints EXP_BOOL TkClosePar .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TkNum in state 2 resolved as shift
WARNING: shift/reduce conflict for TkOpenPar in state 2 resolved as shift
WARNING: shift/reduce conflict for TkId in state 2 resolved as shift
WARNING: shift/reduce conflict for TkTrue in state 2 resolved as shift
WARNING: shift/reduce conflict for TkFalse in state 2 resolved as shift
WARNING: shift/reduce conflict for TkNot in state 2 resolved as shift
WARNING: shift/reduce conflict for TkSemicolon in state 4 resolved as shift
WARNING: shift/reduce conflict for TkNum in state 32 resolved as shift
WARNING: shift/reduce conflict for TkOpenPar in state 32 resolved as shift
WARNING: shift/reduce conflict for TkId in state 32 resolved as shift
WARNING: shift/reduce conflict for TkTrue in state 32 resolved as shift
WARNING: shift/reduce conflict for TkFalse in state 32 resolved as shift
WARNING: shift/reduce conflict for TkNot in state 32 resolved as shift
WARNING: shift/reduce conflict for TkNum in state 40 resolved as shift
WARNING: shift/reduce conflict for TkOpenPar in state 40 resolved as shift
WARNING: shift/reduce conflict for TkId in state 40 resolved as shift
WARNING: shift/reduce conflict for TkTrue in state 40 resolved as shift
WARNING: shift/reduce conflict for TkFalse in state 40 resolved as shift
WARNING: shift/reduce conflict for TkNot in state 40 resolved as shift
WARNING: shift/reduce conflict for TkThen in state 71 resolved as shift
WARNING: shift/reduce conflict for TkDo in state 75 resolved as shift
WARNING: shift/reduce conflict for TkEnd in state 76 resolved as shift
WARNING: shift/reduce conflict for TkMod in state 88 resolved as shift
WARNING: shift/reduce conflict for TkMult in state 88 resolved as shift
WARNING: shift/reduce conflict for TkDiv in state 88 resolved as shift
WARNING: shift/reduce conflict for TkPlus in state 88 resolved as shift
WARNING: shift/reduce conflict for TkMinus in state 88 resolved as shift
WARNING: shift/reduce conflict for TkSoForth in state 88 resolved as shift
WARNING: shift/reduce conflict for TkCap in state 88 resolved as shift
WARNING: shift/reduce conflict for TkAnd in state 88 resolved as shift
WARNING: shift/reduce conflict for TkOr in state 88 resolved as shift
WARNING: shift/reduce conflict for TkIn in state 88 resolved as shift
WARNING: shift/reduce conflict for TkEqual in state 88 resolved as shift
WARNING: shift/reduce conflict for TkNEqual in state 88 resolved as shift
WARNING: shift/reduce conflict for TkGreater in state 88 resolved as shift
WARNING: shift/reduce conflict for TkGeq in state 88 resolved as shift
WARNING: shift/reduce conflict for TkLess in state 88 resolved as shift
WARNING: shift/reduce conflict for TkLeq in state 88 resolved as shift
WARNING: shift/reduce conflict for TkMod in state 89 resolved as shift
WARNING: shift/reduce conflict for TkMult in state 89 resolved as shift
WARNING: shift/reduce conflict for TkDiv in state 89 resolved as shift
WARNING: shift/reduce conflict for TkPlus in state 89 resolved as shift
WARNING: shift/reduce conflict for TkMinus in state 89 resolved as shift
WARNING: shift/reduce conflict for TkSoForth in state 89 resolved as shift
WARNING: shift/reduce conflict for TkCap in state 89 resolved as shift
WARNING: shift/reduce conflict for TkAnd in state 89 resolved as shift
WARNING: shift/reduce conflict for TkOr in state 89 resolved as shift
WARNING: shift/reduce conflict for TkIn in state 89 resolved as shift
WARNING: shift/reduce conflict for TkEqual in state 89 resolved as shift
WARNING: shift/reduce conflict for TkNEqual in state 89 resolved as shift
WARNING: shift/reduce conflict for TkGreater in state 89 resolved as shift
WARNING: shift/reduce conflict for TkGeq in state 89 resolved as shift
WARNING: shift/reduce conflict for TkLess in state 89 resolved as shift
WARNING: shift/reduce conflict for TkLeq in state 89 resolved as shift
WARNING: shift/reduce conflict for TkMod in state 92 resolved as shift
WARNING: shift/reduce conflict for TkMult in state 92 resolved as shift
WARNING: shift/reduce conflict for TkDiv in state 92 resolved as shift
WARNING: shift/reduce conflict for TkPlus in state 92 resolved as shift
WARNING: shift/reduce conflict for TkMinus in state 92 resolved as shift
WARNING: shift/reduce conflict for TkSoForth in state 92 resolved as shift
WARNING: shift/reduce conflict for TkCap in state 92 resolved as shift
WARNING: shift/reduce conflict for TkAnd in state 92 resolved as shift
WARNING: shift/reduce conflict for TkOr in state 92 resolved as shift
WARNING: shift/reduce conflict for TkIn in state 92 resolved as shift
WARNING: shift/reduce conflict for TkEqual in state 92 resolved as shift
WARNING: shift/reduce conflict for TkNEqual in state 92 resolved as shift
WARNING: shift/reduce conflict for TkGreater in state 92 resolved as shift
WARNING: shift/reduce conflict for TkGeq in state 92 resolved as shift
WARNING: shift/reduce conflict for TkLess in state 92 resolved as shift
WARNING: shift/reduce conflict for TkLeq in state 92 resolved as shift
WARNING: shift/reduce conflict for TkMod in state 94 resolved as shift
WARNING: shift/reduce conflict for TkMult in state 94 resolved as shift
WARNING: shift/reduce conflict for TkDiv in state 94 resolved as shift
WARNING: shift/reduce conflict for TkPlus in state 94 resolved as shift
WARNING: shift/reduce conflict for TkMinus in state 94 resolved as shift
WARNING: shift/reduce conflict for TkSoForth in state 94 resolved as shift
WARNING: shift/reduce conflict for TkCap in state 94 resolved as shift
WARNING: shift/reduce conflict for TkAnd in state 94 resolved as shift
WARNING: shift/reduce conflict for TkOr in state 94 resolved as shift
WARNING: shift/reduce conflict for TkIn in state 94 resolved as shift
WARNING: shift/reduce conflict for TkEqual in state 94 resolved as shift
WARNING: shift/reduce conflict for TkNEqual in state 94 resolved as shift
WARNING: shift/reduce conflict for TkGreater in state 94 resolved as shift
WARNING: shift/reduce conflict for TkGeq in state 94 resolved as shift
WARNING: shift/reduce conflict for TkLess in state 94 resolved as shift
WARNING: shift/reduce conflict for TkLeq in state 94 resolved as shift
WARNING: shift/reduce conflict for TkNum in state 105 resolved as shift
WARNING: shift/reduce conflict for TkOpenPar in state 105 resolved as shift
WARNING: shift/reduce conflict for TkId in state 105 resolved as shift
WARNING: shift/reduce conflict for TkTrue in state 105 resolved as shift
WARNING: shift/reduce conflict for TkFalse in state 105 resolved as shift
WARNING: shift/reduce conflict for TkNot in state 105 resolved as shift
WARNING: shift/reduce conflict for TkNum in state 108 resolved as shift
WARNING: shift/reduce conflict for TkOpenPar in state 108 resolved as shift
WARNING: shift/reduce conflict for TkId in state 108 resolved as shift
WARNING: shift/reduce conflict for TkTrue in state 108 resolved as shift
WARNING: shift/reduce conflict for TkFalse in state 108 resolved as shift
WARNING: shift/reduce conflict for TkNot in state 108 resolved as shift
WARNING: shift/reduce conflict for TkNum in state 111 resolved as shift
WARNING: shift/reduce conflict for TkOpenPar in state 111 resolved as shift
WARNING: shift/reduce conflict for TkId in state 111 resolved as shift
WARNING: shift/reduce conflict for TkTrue in state 111 resolved as shift
WARNING: shift/reduce conflict for TkFalse in state 111 resolved as shift
WARNING: shift/reduce conflict for TkNot in state 111 resolved as shift
WARNING: shift/reduce conflict for TkElse in state 120 resolved as shift
WARNING: shift/reduce conflict for TkNum in state 131 resolved as shift
WARNING: shift/reduce conflict for TkOpenPar in state 131 resolved as shift
WARNING: shift/reduce conflict for TkId in state 131 resolved as shift
WARNING: shift/reduce conflict for TkTrue in state 131 resolved as shift
WARNING: shift/reduce conflict for TkFalse in state 131 resolved as shift
WARNING: shift/reduce conflict for TkNot in state 131 resolved as shift
WARNING: shift/reduce conflict for TkNum in state 132 resolved as shift
WARNING: shift/reduce conflict for TkOpenPar in state 132 resolved as shift
WARNING: shift/reduce conflict for TkId in state 132 resolved as shift
WARNING: shift/reduce conflict for TkTrue in state 132 resolved as shift
WARNING: shift/reduce conflict for TkFalse in state 132 resolved as shift
WARNING: shift/reduce conflict for TkNot in state 132 resolved as shift
WARNING: shift/reduce conflict for TkNum in state 134 resolved as shift
WARNING: shift/reduce conflict for TkOpenPar in state 134 resolved as shift
WARNING: shift/reduce conflict for TkId in state 134 resolved as shift
WARNING: shift/reduce conflict for TkTrue in state 134 resolved as shift
WARNING: shift/reduce conflict for TkFalse in state 134 resolved as shift
WARNING: shift/reduce conflict for TkNot in state 134 resolved as shift
WARNING: shift/reduce conflict for TkClosePar in state 162 resolved as shift
WARNING: shift/reduce conflict for TkClosePar in state 164 resolved as shift
WARNING: reduce/reduce conflict in state 79 resolved using rule (EXPRESION -> EXP_BOOL)
WARNING: rejected rule (EXP_BOOL -> TkNot EXP_BOOL) in state 79
WARNING: reduce/reduce conflict in state 135 resolved using rule (BLOQUE -> TkBegin TkDeclare DECL_VAR SECUENCIACION TkEnd)
WARNING: rejected rule (VACIO -> <empty>) in state 135
WARNING: Rule (EXP_BOOL -> TkNot EXP_BOOL) is never reduced
